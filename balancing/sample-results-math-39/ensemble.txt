0: Pipeline(
	0: RobustScaler(with_centering=False, with_scaling=False)
	1: VarianceThreshold()
	2: DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
                       max_depth=8, max_features=0.46607779390604986,
                       min_samples_leaf=14, min_samples_split=4,
                       random_state=39)
) -> Fitness: 0.767277854908887

1: Pipeline(
	0: DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
                       max_depth=8, max_features=0.46607779390604986,
                       min_samples_leaf=14, min_samples_split=4,
                       random_state=39)
) -> Fitness: 0.767277854908887

2: Pipeline(
	0: VarianceThreshold()
	1: ExtraTreesClassifier(class_weight='balanced_subsample', criterion='entropy',
                     min_samples_leaf=14, min_samples_split=15, n_estimators=70,
                     random_state=39)
) -> Fitness: 0.7824546783932608

3: Pipeline(
	0: VarianceThreshold()
	1: ExtraTreesClassifier(class_weight='balanced_subsample', criterion='entropy',
                     min_samples_leaf=17, n_estimators=90, random_state=39)
) -> Fitness: 0.7677675391644452

4: Pipeline(
	0: VarianceThreshold()
	1: DecisionTreeClassifier(class_weight='balanced', max_depth=17,
                       max_features=0.3149060150102835, min_samples_leaf=20,
                       min_samples_split=13, random_state=39)
) -> Fitness: 0.7457609641955059

5: Pipeline(
	0: VarianceThreshold()
	1: ExtraTreesClassifier(class_weight='balanced', max_features='log2',
                     min_samples_leaf=17, n_estimators=90, random_state=39)
) -> Fitness: 0.7598780162345158

6: Pipeline(
	0: RobustScaler(with_centering=False, with_scaling=False)
	1: MinMaxScaler()
	2: ExtraTreesClassifier(class_weight='balanced', criterion='entropy',
                     min_samples_leaf=12, min_samples_split=18, n_estimators=33,
                     random_state=39)
) -> Fitness: 0.7554969758941128

7: Pipeline(
	0: DecisionTreeClassifier(class_weight='balanced', max_depth=17,
                       max_features=0.3149060150102835, min_samples_leaf=20,
                       min_samples_split=13, random_state=39)
) -> Fitness: 0.7457609641955059

8: Pipeline(
	0: FastICA(algorithm='deflation', fun='exp', n_components=52, random_state=39,
        whiten='arbitrary-variance')
	1: DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
                       max_depth=8, max_features=0.1506262855641194,
                       min_samples_leaf=2, min_samples_split=17,
                       random_state=39)
) -> Fitness: 0.7312830884962033

9: Pipeline(
	0: SelectFwe(alpha=0.024347005042684382)
	1: RandomForestClassifier(bootstrap=False, class_weight='balanced',
                       max_features=0.6409015182079316, min_samples_split=19,
                       n_estimators=66, random_state=39)
) -> Fitness: 0.7229919707015066

10: Pipeline(
	0: DecisionTreeClassifier(class_weight='balanced', max_depth=23,
                       max_features=0.5395603278048837, min_samples_leaf=5,
                       min_samples_split=12, random_state=39)
) -> Fitness: 0.7404414564885589

11: Pipeline(
	0: LogisticRegression(C=3.221115233044825, class_weight='balanced', max_iter=1000,
                   penalty=None, random_state=39)
) -> Fitness: 0.7204219055015638

12: Pipeline(
	0: FastICA(algorithm='deflation', fun='exp', n_components=68, random_state=39,
        whiten='arbitrary-variance')
	1: DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
                       max_depth=8, max_features=0.1506262855641194,
                       min_samples_leaf=2, min_samples_split=17,
                       random_state=39)
) -> Fitness: 0.7312830884962033

13: Pipeline(
	0: SelectPercentile(percentile=25.642956333663363)
	1: ExtraTreesClassifier(class_weight='balanced_subsample', min_samples_leaf=12,
                     min_samples_split=9, n_estimators=42, random_state=39)
) -> Fitness: 0.7387225589003469

14: Pipeline(
	0: MinMaxScaler()
	1: MaxAbsScaler()
	2: AdaBoostClassifier(algorithm='SAMME',
                   estimator=DecisionTreeClassifier(class_weight='balanced',
                                                    max_depth=9,
                                                    max_features=0.15932585309575664,
                                                    min_samples_leaf=14,
                                                    min_samples_split=16,
                                                    random_state=39),
                   learning_rate=0.10646073871210059, n_estimators=22,
                   random_state=39)
) -> Fitness: 0.7523149927883246

15: Pipeline(
	0: MinMaxScaler()
	1: LogisticRegression(C=1.8190074384989021, class_weight='balanced', max_iter=1000,
                   random_state=39)
) -> Fitness: 0.7234647527489827

16: Pipeline(
	0: MinMaxScaler()
	1: MaxAbsScaler()
	2: ExtraTreesClassifier(class_weight='balanced', max_features='log2',
                     min_samples_leaf=17, n_estimators=90, random_state=39)
) -> Fitness: 0.7598780162345158

17: Pipeline(
	0: SelectFwe(alpha=0.0024660833495341204)
	1: BernoulliNB(alpha=58.29197727775783, fit_prior=False)
) -> Fitness: 0.7335388585861918

18: Pipeline(
	0: SelectFwe(alpha=0.024181618380899432)
	1: BernoulliNB(alpha=72.72039553731119, fit_prior=False)
) -> Fitness: 0.7335388585861918

19: Pipeline(
	0: SelectPercentile(percentile=95.7402813739807)
	1: MinMaxScaler()
	2: RandomForestClassifier(bootstrap=False, class_weight='balanced',
                       criterion='entropy', max_features=0.8299259949283735,
                       min_samples_leaf=8, min_samples_split=9, n_estimators=90,
                       random_state=39)
) -> Fitness: 0.7332539599244748

Ensemble fitness: 0.7998763669948155
Weights: [0.9806035750012527, 0.9806035750012527, 1.0, 0.9812294058245328, 0.9531043583596381, 0.9711463644065554, 0.9655472665145226, 0.9531043583596381, 0.9346012091049972, 0.9240049176856371, 0.9463058716819556, 0.920720299073323, 0.9346012091049972, 0.9441090702113047, 0.9614805988931822, 0.9246091469918596, 0.9711463644065554, 0.9374841493599149, 0.9374841493599149, 0.937120040524497]
Prediction: [0 0 0 ... 0 0 0]
