0: Pipeline(
	0: SelectPercentile(percentile=96.767515181847)
	1: MinMaxScaler()
	2: VarianceThreshold()
	3: DecisionTreeClassifier(class_weight='balanced', max_depth=7,
                       max_features=0.7415884904147702, min_samples_leaf=18,
                       min_samples_split=10, random_state=38)
) -> Fitness: 0.7536808276244464

1: Pipeline(
	0: MinMaxScaler()
	1: MaxAbsScaler()
	2: VarianceThreshold()
	3: FastICA(algorithm='deflation', n_components=72, random_state=38,
        whiten='arbitrary-variance')
	4: DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
                       max_depth=11, max_features=0.4112045144990252,
                       min_samples_leaf=14, random_state=38)
) -> Fitness: 0.7379419067560634

2: Pipeline(
	0: MaxAbsScaler()
	1: DecisionTreeClassifier(class_weight='balanced', max_depth=20,
                       max_features=0.9478219245978146, min_samples_leaf=20,
                       min_samples_split=15, random_state=38)
) -> Fitness: 0.7608710946714623

3: Pipeline(
	0: MinMaxScaler()
	1: MaxAbsScaler()
	2: DecisionTreeClassifier(class_weight='balanced', max_depth=5,
                       max_features=0.2175780745160918, min_samples_leaf=16,
                       min_samples_split=9, random_state=38)
) -> Fitness: 0.7285823356460709

4: Pipeline(
	0: MinMaxScaler()
	1: DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
                       max_depth=11, max_features=0.9772164291286994,
                       min_samples_leaf=14, min_samples_split=5,
                       random_state=38)
) -> Fitness: 0.757011194038925

5: Pipeline(
	0: DecisionTreeClassifier(class_weight='balanced', max_depth=11,
                       max_features=0.6847764740952856, min_samples_leaf=9,
                       min_samples_split=18, random_state=38)
) -> Fitness: 0.7545547919387354

6: Pipeline(
	0: MaxAbsScaler()
	1: DecisionTreeClassifier(class_weight='balanced', max_depth=11,
                       max_features=0.4112045144990252, min_samples_leaf=14,
                       random_state=38)
) -> Fitness: 0.7444899817850638

7: Pipeline(
	0: VarianceThreshold()
	1: DecisionTreeClassifier(class_weight='balanced', max_depth=5,
                       max_features=0.2175780745160918, min_samples_leaf=16,
                       min_samples_split=19, random_state=38)
) -> Fitness: 0.7285823356460709

8: Pipeline(
	0: MinMaxScaler()
	1: RobustScaler(with_centering=False, with_scaling=False)
	2: DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
                       max_depth=3, max_features=0.48256194608574443,
                       min_samples_leaf=14, min_samples_split=15,
                       random_state=38)
) -> Fitness: 0.7273648653578177

9: Pipeline(
	0: SelectPercentile(percentile=79.75853197954544)
	1: VarianceThreshold()
	2: RandomForestClassifier(bootstrap=False, class_weight='balanced_subsample',
                       criterion='entropy', max_features=0.8828886818537869,
                       min_samples_leaf=10, min_samples_split=7,
                       n_estimators=91, random_state=38)
) -> Fitness: 0.7480736914550306

10: Pipeline(
	0: MaxAbsScaler()
	1: DecisionTreeClassifier(class_weight='balanced', max_depth=25,
                       max_features=0.4112045144990252, min_samples_leaf=14,
                       random_state=38)
) -> Fitness: 0.7444899817850638

11: Pipeline(
	0: MaxAbsScaler()
	1: VarianceThreshold()
	2: DecisionTreeClassifier(class_weight='balanced', max_depth=11,
                       max_features=0.4112045144990252, min_samples_leaf=14,
                       random_state=38)
) -> Fitness: 0.7444899817850638

12: Pipeline(
	0: VarianceThreshold()
	1: DecisionTreeClassifier(class_weight='balanced', max_depth=25,
                       max_features=0.4112045144990252, min_samples_leaf=14,
                       min_samples_split=19, random_state=38)
) -> Fitness: 0.7447241738225345

13: Pipeline(
	0: MaxAbsScaler()
	1: AdaBoostClassifier(algorithm='SAMME',
                   estimator=DecisionTreeClassifier(class_weight='balanced',
                                                    criterion='entropy',
                                                    max_depth=4,
                                                    max_features=0.48256194608574443,
                                                    min_samples_leaf=9,
                                                    min_samples_split=19,
                                                    random_state=38),
                   learning_rate=0.09285916727857113, n_estimators=23,
                   random_state=38)
) -> Fitness: 0.7321294452104932

14: Pipeline(
	0: MaxAbsScaler()
	1: MinMaxScaler()
	2: VarianceThreshold()
	3: DecisionTreeClassifier(class_weight='balanced', max_depth=25,
                       max_features=0.6847764740952856, min_samples_leaf=10,
                       min_samples_split=6, random_state=38)
) -> Fitness: 0.734088049396767

15: Pipeline(
	0: MinMaxScaler()
	1: VarianceThreshold()
	2: DecisionTreeClassifier(class_weight='balanced', max_depth=5,
                       max_features=0.8012147164887464, min_samples_leaf=11,
                       min_samples_split=13, random_state=38)
) -> Fitness: 0.7383471586888165

16: Pipeline(
	0: MinMaxScaler()
	1: DecisionTreeClassifier(class_weight='balanced', max_depth=11,
                       max_features=0.4112045144990252, min_samples_leaf=14,
                       min_samples_split=19, random_state=38)
) -> Fitness: 0.7447241738225345

17: Pipeline(
	0: DecisionTreeClassifier(class_weight='balanced', max_depth=25,
                       max_features=0.6847764740952856, min_samples_leaf=10,
                       min_samples_split=6, random_state=38)
) -> Fitness: 0.734088049396767

18: Pipeline(
	0: MinMaxScaler()
	1: VarianceThreshold()
	2: DecisionTreeClassifier(class_weight='balanced', criterion='entropy',
                       max_depth=4, max_features=0.48256194608574443,
                       min_samples_leaf=9, min_samples_split=15,
                       random_state=38)
) -> Fitness: 0.710354960226264

19: Pipeline(
	0: RobustScaler(with_scaling=False)
	1: DecisionTreeClassifier(class_weight='balanced', max_depth=25,
                       max_features=0.6847764740952856, min_samples_leaf=15,
                       min_samples_split=6, random_state=38)
) -> Fitness: 0.7370682950673757

Ensemble fitness: 0.7433887563503007
Weights: [0.9905499537341202, 0.9698645564590681, 1.0, 0.9575634305843443, 0.9949269979375364, 0.991698590238266, 0.978470580626444, 0.9575634305843443, 0.9559633299933515, 0.9831805895820532, 0.978470580626444, 0.978470580626444, 0.9787783752569811, 0.9622253366407886, 0.9647994969683268, 0.9703971722143402, 0.9787783752569811, 0.9647994969683268, 0.9336074996159359, 0.9687163834047811]
Prediction: [0 0 0 ... 0 0 0]
