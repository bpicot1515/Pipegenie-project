pipeline	fitness	fit_time
selectFwe(0.013971710118213944);adaBoost(decisionTree('entropy',29,9,0.39207083111747565,4,'None'),99,1.3219387153935853,'SAMME')	0.499296874141021	2.023768186569214
varianceThreshold();decisionTree('entropy',26,8,0.8678045458688727,9,'balanced')	0.7234092283457325	1.2184185981750488
fastICA(24,'parallel','unit-variance','exp');gaussianNB(0.004875981351865978)	0.5587724059208705	2.446021556854248
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();decisionTree('gini',10,15,0.3756221919212819,9,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
nystroem('poly',0.07283230247530376,31,5,-0.841440042088569);randomForest(56,'gini',0.6788970057202638,5,15,True,'balanced_subsample')	0.64274250570487	4.872934818267822
pca(0.5154186007732566,True);pca(0.8368434920209009,True);mlpClassifier((83, 1),0.0020471161677269494,0.5432040265469587,'lbfgs','relu')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();varianceThreshold();minMaxScaler();bernoulliNB(5.5633814140362245,True)	0.49789117216962986	1.369063377380371
bernoulliNB(0.8733994950777562,True)	0.5	1.0764503479003906
selectPercentile(29.912272382405458);nystroem('sigmoid',1.37888616647132,64,3,-0.23306515685234985);minMaxScaler();randomForest(69,'gini',0.8568779831593858,19,3,False,'None')	0.5	4.407727003097534
varianceThreshold();varianceThreshold();robustScaler(True,True);minMaxScaler();qda(0.9712326999771631)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
lda(0.05152972578770987,128,0.01790798433854458)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
adaBoost(decisionTree('gini',27,9,0.021285697272351967,12,'None'),10,1.3784265123469284,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();minMaxScaler();varianceThreshold();extraTreesClassifier(88,'entropy','log2',12,12,False,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',5,6,0.654306107193385,16,'None'),13,1.163671915645616,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
pca(0.9077442297283207,False);selectFwe(0.009095936650346158);minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
selectFwe(0.04313758051743274);selectFwe(0.040749241815178784);robustScaler(True,False);multinomialNB(7.914996607257698,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();fastICA(75,'parallel','arbitrary-variance','logcosh');logisticRegression('l2','lbfgs',1000,14.963675575417586,'None')	0.5	5.200559139251709
kNN(18,'uniform',2)	0.5	1.2080302238464355
maxAbsScaler();minMaxScaler();logisticRegression('None','liblinear',1000,7.206950923783087,'None')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
varianceThreshold();nystroem('rbf',5.445714094895889,22,5,-0.5919461343014323);kNN(31,'uniform',2)	0.5	2.4234886169433594
randomForest(34,'gini','sqrt',15,12,False,'balanced')	0.7065852541978149	1.600109577178955
selectFwe(0.01764246041275361);gaussianNB(0.00047679644938940566)	0.5	1.0662806034088135
varianceThreshold();maxAbsScaler();maxAbsScaler();kNN(30,'distance',2)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
randomForest(79,'gini','log2',5,3,False,'None')	0.6063348596297107	2.5612401962280273
maxAbsScaler();varianceThreshold();minMaxScaler();minMaxScaler();varianceThreshold();multinomialNB(3.9768960522853702,True)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
pca(0.5954318229927958,False);multinomialNB(99.20799352540618,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
selectFwe(0.032254793394606976);maxAbsScaler();extraTreesClassifier(31,'entropy','sqrt',10,9,False,'balanced')	0.7125695554349445	1.0820441246032715
mlpClassifier((48, 12),0.09659530472502961,0.14921567393588442,'adam','identity')	0.5	2.3419716358184814
selectPercentile(53.4008253845411);maxAbsScaler();adaBoost(decisionTree('entropy',23,17,0.7983253537989112,16,'None'),10,0.3083643788755388,'SAMME')	0.5963071823889188	1.2122020721435547
decisionTree('gini',27,15,0.743293689556957,1,'None')	0.6484542625849483	0.8287827968597412
gaussianNB(0.0031577721809973153)	0.4995316159250585	0.8160696029663086
maxAbsScaler();selectPercentile(20.41119164783345);qda(0.4763429759239841)	0.5	1.87666916847229
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();varianceThreshold();multinomialNB(2.5116265376334335,True)	0.5	1.3413887023925781
maxAbsScaler();varianceThreshold();varianceThreshold();qda(0.13579613551777237)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();pca(0.5309047153028775,False);mlpClassifier((21, 16),0.07964453205944211,0.31108998762760715,'lbfgs','identity')	0.5	22.81654691696167
maxAbsScaler();gaussianNB(0.002788125140189726)	0.4981231652208332	0.6893196105957031
pca(0.6181373946065492,False);qda(0.3067864093825794)	0.4974222383481215	1.1176128387451172
pca(0.52494595104835,True);decisionTree('entropy',15,16,0.6328056442362695,7,'balanced')	0.6695217004960714	1.3674201965332031
randomForest(52,'gini','log2',7,1,False,'balanced')	0.6619372669199499	1.9283854961395264
maxAbsScaler();maxAbsScaler();robustScaler(True,True);qda(0.24286569442334427)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();extraTreesClassifier(24,'gini','sqrt',2,20,True,'balanced')	0.7091068917229156	1.1676185131072998
maxAbsScaler();minMaxScaler();minMaxScaler();mlpClassifier((47, 12),0.05979633207711857,0.023720259101318045,'lbfgs','tanh')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',30,18,0.4822286022101796,19,'None'),75,0.30897270112744163,'SAMME')	0.6631093266004372	3.2879960536956787
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	2.6383719444274902
varianceThreshold();varianceThreshold();mlpClassifier((12, 14),0.010139243508457524,0.022693228324716718,'adam','identity')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
lda(0.9966398604857563,242,0.0918523222330089)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
qda(0.3833398615711179)	0.49554815230178895	0.897913932800293
fastICA(10,'parallel','arbitrary-variance','logcosh');nystroem('cosine',0.7557836789307537,59,3,-0.30693890535943247);varianceThreshold();mlpClassifier((99, 7),0.0160740378300396,0.4319969906689145,'adam','identity')	0.4957768468735913	11.19685959815979
maxAbsScaler();pca(0.8469032781527381,True);kNN(36,'uniform',1)	0.5	0.8678662776947021
minMaxScaler();selectFwe(0.005983787035427339);varianceThreshold();decisionTree('entropy',16,20,0.08285933269745238,13,'None')	0.5	0.7459297180175781
robustScaler(True,False);maxAbsScaler();adaBoost(decisionTree('entropy',6,13,0.9021990082100384,20,'balanced'),61,1.454246783817414,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();minMaxScaler();selectPercentile(49.94057575988014);lda(0.0548034579759894,96,0.04919101058754719)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();maxAbsScaler();minMaxScaler();kNN(15,'distance',2)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
nystroem('rbf',0.6987381437027835,16,4,0.8471074931832556);kNN(3,'uniform',2)	0.5	2.259910821914673
maxAbsScaler();pca(0.8771165800900018,False);mlpClassifier((81, 17),0.04572347141825628,0.9489209244671136,'lbfgs','logistic')	0.5	2.4240574836730957
adaBoost(decisionTree('entropy',18,3,0.8611093746947203,7,'None'),12,0.7752759609622936,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectFwe(0.04815687022629096);pca(0.8822175921259557,False);adaBoost(decisionTree('gini',20,20,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.6931129249416019	1.3756182193756104
pca(0.5673871045793949,True);selectPercentile(47.60786873808483);selectFwe(0.00931266539136771);kNN(16,'uniform',2)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by SelectFwe.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by SelectFwe.)
pca(0.8260475546611258,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6397776325114123	1.0880377292633057
maxAbsScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),47,1.8221363451224983,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('entropy',24,8,0.9434955147782088,12,'balanced')	0.7448520831896495	0.6073722839355469
varianceThreshold();minMaxScaler();qda(0.4123891688286513)	0.5	0.6134881973266602
selectFwe(0.01920406591929322);maxAbsScaler();pca(0.7269994049460312,True);maxAbsScaler();logisticRegression('None','liblinear',1000,4.223864452873283,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();selectPercentile(66.95609619906999);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
fastICA(23,'parallel','unit-variance','logcosh');randomForest(46,'gini','None',17,11,True,'None')	0.5	2.565974473953247
maxAbsScaler();decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.8101465702056885
minMaxScaler();varianceThreshold();lda(0.32817033416317387,44,0.04427905178665775)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
gaussianNB(0.007214600049421331)	0.4995316159250585	0.8738605976104736
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);logisticRegression('None','sag',1000,1.9328127026204596,'None')	0.5	5.581948280334473
minMaxScaler();selectPercentile(38.622009637977314);fastICA(20,'parallel','unit-variance','exp');logisticRegression('l2','newton-cg',1000,17.95360336926052,'None')	0.5	0.9090874195098877
minMaxScaler();minMaxScaler();randomForest(76,'entropy','None',13,19,False,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('entropy',8,11,0.544198344385477,18,'None'),87,1.1245734854313676,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
selectFwe(0.005224141526649007);selectPercentile(93.32215425130136);qda(0.1748441321410913)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by QuadraticDiscriminantAnalysis.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by QuadraticDiscriminantAnalysis.)
selectFwe(0.02221635985121816);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	1.213005542755127
adaBoost(decisionTree('entropy',21,5,0.8949018248324524,1,'balanced'),67,0.3154330464588476,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',29,8,0.6655691523136347,3,'None')	0.6398577655700722	0.7310953140258789
maxAbsScaler();varianceThreshold();varianceThreshold();logisticRegression('l2','sag',1000,2.7300975417772566,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();minMaxScaler();varianceThreshold();multinomialNB(0.279517559302915,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();selectFwe(0.01568643006110348);robustScaler(True,True);adaBoost(decisionTree('gini',30,4,0.7296525162766734,11,'None'),39,1.653132284987361,'SAMME')	0.49906268210355026	0.9403319358825684
adaBoost(decisionTree('entropy',16,8,0.6024189420398927,6,'None'),84,0.4164767762890753,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectPercentile(37.69604578369046);multinomialNB(1.0272494115875046,False)	0.5665606255516208	0.9289200305938721
nystroem('poly',0.1936583702708131,75,2,0.9879713513523094);robustScaler(False,True);maxAbsScaler();qda(0.6983523993324714)	0.49976580796252923	2.4182822704315186
maxAbsScaler();adaBoost(decisionTree('gini',29,10,0.5120110048477476,19,'balanced'),19,1.146189848288477,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.8802459282975126);fastICA(29,'deflation','unit-variance','cube');mlpClassifier((41, 9),0.08227065850734115,0.7618785247891477,'sgd','logistic')	0.5969826310071057	9.554056167602539
minMaxScaler();varianceThreshold();minMaxScaler();fastICA(32,'parallel','arbitrary-variance','exp');logisticRegression('l2','newton-cg',1000,2.319202423642008,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();maxAbsScaler();randomForest(74,'gini','None',16,19,True,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.015511071759259254);nystroem('poly',0.3963649978886078,52,5,0.2348055898434538);maxAbsScaler();decisionTree('gini',18,19,0.7201769907541565,2,'None')	0.4997652582159624	1.8202250003814697
minMaxScaler();logisticRegression('None','saga',1000,20.507895414191044,'None')	0.5	1.6951146125793457
robustScaler(True,True);logisticRegression('l1','liblinear',1000,0.5739754765192291,'balanced')	0.695387976142998	0.9241218566894531
minMaxScaler();pca(0.7140369524726564,False);adaBoost(decisionTree('entropy',7,4,0.49957569180053085,7,'balanced'),86,1.0049131711658226,'SAMME')	eval_error (BaseClassifier in AdaBoostClassifier ensemble is worse than random, ensemble can not be fit.)	eval_error (BaseClassifier in AdaBoostClassifier ensemble is worse than random, ensemble can not be fit.)
pca(0.9588412891882794,True);maxAbsScaler();varianceThreshold();adaBoost(decisionTree('gini',5,15,0.2327976223712248,20,'balanced'),72,0.7691455118143747,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectPercentile(91.58097125987318);nystroem('sigmoid',0.07060099843919994,34,3,-0.5670464013749943);bernoulliNB(86.6843968989569,True)	0.5	1.43105149269104
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	1.1292507648468018
nystroem('cosine',3.2804844582653816,63,5,0.8270022073943688);gaussianNB(0.00367118568814322)	0.6040862562358753	2.231379985809326
kNN(1,'uniform',2)	0.6290677597627493	1.238698959350586
nystroem('cosine',0.6291008171346562,21,4,0.21405462314055912);decisionTree('gini',28,11,0.6162244122202474,14,'None')	0.5183872334853633	1.5578720569610596
varianceThreshold();maxAbsScaler();varianceThreshold();multinomialNB(22.828011354744994,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
bernoulliNB(16.820463523361703,True)	0.5	1.1045198440551758
minMaxScaler();minMaxScaler();selectFwe(0.042704784947669314);mlpClassifier((96, 9),0.034724561254223,0.29235904590621514,'lbfgs','logistic')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();maxAbsScaler();varianceThreshold();maxAbsScaler();decisionTree('gini',26,12,0.7302820168358479,19,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();robustScaler(True,True);minMaxScaler();randomForest(78,'gini','sqrt',18,18,False,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
pca(0.6407695642192985,True);maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('entropy',6,13,0.3401939058336457,9,'None'),36,1.4083703187118697,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();maxAbsScaler();maxAbsScaler();varianceThreshold();maxAbsScaler();decisionTree('entropy',1,16,0.08958490270045305,7,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
multinomialNB(0.49793621675604444,True)	0.6186476934133364	1.4328954219818115
minMaxScaler();varianceThreshold();minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.9881843797012896,6,'balanced'),71,0.6849776982076169,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();varianceThreshold();varianceThreshold();robustScaler(True,False);lda(0.6823302889716732,62,0.0847731762149499)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
bernoulliNB(25.015962249113663,True)	0.5	0.9812088012695312
lda(0.9223881857882322,12,0.04493600342520514)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
nystroem('poly',2.3182945675642572,91,4,0.671259041236979);varianceThreshold();bernoulliNB(0.6262445564059851,True)	0.5	4.775258302688599
selectFwe(0.002382163012665031);varianceThreshold();gaussianNB(0.0023887815312158382)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by VarianceThreshold.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by VarianceThreshold.)
mlpClassifier((81, 6),0.09592290156814162,0.5567102914381392,'lbfgs','relu')	0.5	89.40134239196777
varianceThreshold();minMaxScaler();minMaxScaler();randomForest(39,'gini',0.8839094554366573,15,9,True,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
fastICA(37,'parallel','unit-variance','logcosh');varianceThreshold();varianceThreshold();mlpClassifier((98, 4),0.0859961564927726,0.5274860295633614,'lbfgs','logistic')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();adaBoost(decisionTree('gini',18,9,0.38812029229918077,14,'balanced'),83,1.7891920891271957,'SAMME')	0.6370379854886897	3.960886001586914
minMaxScaler();varianceThreshold();decisionTree('gini',13,8,0.5379167023535992,1,'None')	0.6847570470013323	1.5991182327270508
adaBoost(decisionTree('entropy',25,17,0.3677272658875984,10,'balanced'),84,1.6894095667257263,'SAMME')	0.6463636363636363	3.7437963485717773
minMaxScaler();pca(0.7202974530539983,True);robustScaler(True,True);varianceThreshold();logisticRegression('l2','liblinear',1000,3.7792344749972444,'None')	0.5	1.2643358707427979
fastICA(71,'deflation','arbitrary-variance','cube');minMaxScaler();minMaxScaler();varianceThreshold();extraTreesClassifier(33,'entropy','log2',20,15,True,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
kNN(14,'uniform',2)	0.4997652582159624	2.0149827003479004
fastICA(92,'deflation','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.6600911879623494	2.860731363296509
minMaxScaler();selectPercentile(36.73848517976618);mlpClassifier((53, 10),0.03294951397162522,0.07667738177349293,'adam','identity')	0.5	1.9217820167541504
minMaxScaler();minMaxScaler();qda(0.4540339853266856)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();minMaxScaler();maxAbsScaler();bernoulliNB(71.04817097456342,True)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();minMaxScaler();selectFwe(0.04357191848991633);robustScaler(True,True);gaussianNB(0.005503003927530904)	0.5	1.6128039360046387
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	2.4890244007110596
pca(0.7729072868487492,True);minMaxScaler();multinomialNB(38.82750358650904,False)	0.5	1.1438548564910889
nystroem('poly',2.5322803306515222,16,5,-0.7410443582390083);minMaxScaler();mlpClassifier((32, 13),0.03512959581502032,0.8815830923437531,'adam','tanh')	0.5	2.4602162837982178
kNN(30,'distance',2)	0.6168032437046522	0.6020791530609131
selectPercentile(24.166448707641575);mlpClassifier((32, 3),0.03863489723636096,0.9676449873438328,'adam','logistic')	0.5	1.1014175415039062
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',21,16,0.2708667438770346,11,'None'),10,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	3.3039677143096924
minMaxScaler();minMaxScaler();mlpClassifier((19, 1),0.0008732770838575323,0.6409290915155257,'adam','tanh')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();maxAbsScaler();nystroem('rbf',5.9443894046393515,88,4,-0.11752545861128838);varianceThreshold();randomForest(26,'gini',0.9007795692533382,14,17,False,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();gaussianNB(0.006072449423261996)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();selectPercentile(11.040363262428553);gaussianNB(0.008638347273399743)	0.5	1.0561587810516357
nystroem('sigmoid',1.9469209381747121,19,2,0.7139708015809156);pca(0.555012180008691,False);decisionTree('gini',8,6,0.6810870925890398,3,'balanced')	0.5011720596804873	1.1926681995391846
minMaxScaler();robustScaler(False,False);maxAbsScaler();maxAbsScaler();gaussianNB(0.004305626517108974)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.8152437422516973,3,'None'),47,0.36974861755399197,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();varianceThreshold();robustScaler(False,False);multinomialNB(4.174848641343084,False)	0.5452114475226921	0.9979920387268066
randomForest(59,'gini','log2',19,13,False,'balanced')	0.7140351697867283	1.9298672676086426
varianceThreshold();adaBoost(decisionTree('entropy',27,10,0.35857623595448995,8,'balanced'),76,0.44246522185888437,'SAMME')	0.6726691695128546	2.849987745285034
bernoulliNB(1.8505320226915862,True)	0.5	0.8801512718200684
minMaxScaler();logisticRegression('l2','sag',1000,2.977626056380501,'None')	0.5	1.0481748580932617
maxAbsScaler();minMaxScaler();selectPercentile(70.93776590055079);lda(0.1645154494709279,123,0.02566305671354681)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.6986699631469893	3.6629629135131836
pca(0.5221320284126965,True);selectPercentile(38.75425897316005);adaBoost(decisionTree('gini',16,19,0.37367341417016786,18,'balanced'),97,1.5554935375670702,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectFwe(0.008653582082547821);robustScaler(False,True);selectPercentile(94.60707119989488);decisionTree('entropy',6,2,0.29951393467369136,11,'None')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
selectFwe(0.015210543680639123);gaussianNB(0.008357878374102281)	0.5	0.9848833084106445
minMaxScaler();minMaxScaler();maxAbsScaler();multinomialNB(0.4824858913641914,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();maxAbsScaler();extraTreesClassifier(91,'gini','sqrt',11,19,True,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.028146284224580053);decisionTree('gini',21,19,0.18694769647481113,20,'None')	0.5	0.9855308532714844
selectFwe(0.04420490442665292);selectPercentile(82.5028558094312);minMaxScaler();gaussianNB(0.0035104491749848)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
logisticRegression('l1','newton-cg',1000,3.349576312542485,'balanced')	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)
minMaxScaler();adaBoost(decisionTree('entropy',23,20,0.7163664847100081,17,'None'),12,0.385035932223208,'SAMME')	0.6640178677629613	1.3808798789978027
minMaxScaler();maxAbsScaler();qda(0.9616148512453987)	0.5	0.9445056915283203
pca(0.8764430548719677,False);nystroem('rbf',4.7619755286411145,38,4,0.5084885282416156);adaBoost(decisionTree('gini',1,3,0.8597092309835485,7,'None'),44,1.1381690606137105,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9890637397766113
fastICA(16,'parallel','unit-variance','cube');adaBoost(decisionTree('gini',26,2,0.8883020893628591,18,'None'),18,0.34165033233091574,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('entropy',11,2,0.020416625556882395,4,'None')	0.6135799096616459	0.9707088470458984
maxAbsScaler();decisionTree('entropy',29,12,0.8355687708546891,12,'None')	0.5962789554015598	1.0477657318115234
minMaxScaler();varianceThreshold();gaussianNB(0.0095984783491355)	0.499296874141021	0.8634958267211914
maxAbsScaler();bernoulliNB(43.0446906026269,True)	0.5	0.9285886287689209
bernoulliNB(2.4277935507858213,True)	0.5	1.0008575916290283
maxAbsScaler();varianceThreshold();logisticRegression('None','saga',1000,21.623025503539758,'None')	0.5	1.548426866531372
minMaxScaler();gaussianNB(0.00434881943625792)	0.4988273905729459	0.9915804862976074
maxAbsScaler();nystroem('rbf',0.7765837544741214,60,2,-0.24402311810597133);randomForest(60,'entropy','sqrt',2,4,True,'None')	0.5886219752694009	5.000298261642456
fastICA(41,'parallel','unit-variance','exp');logisticRegression('l1','saga',1000,0.7328637421515383,'balanced')	0.7133576521223717	3.8954081535339355
varianceThreshold();maxAbsScaler();extraTreesClassifier(87,'gini','sqrt',14,17,True,'balanced')	0.7198857726588044	2.455754041671753
minMaxScaler();maxAbsScaler();maxAbsScaler();randomForest(77,'gini',0.7854038520172865,18,16,True,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
fastICA(25,'parallel','unit-variance','logcosh');selectPercentile(54.53087076992197);kNN(35,'uniform',2)	0.5	2.482191324234009
robustScaler(False,True);mlpClassifier((21, 18),0.05355530725243598,0.8989317689557781,'adam','identity')	0.4990632318501171	2.2042064666748047
selectFwe(0.01882978917793972);logisticRegression('l1','lbfgs',1000,17.658546859393283,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
fastICA(82,'parallel','unit-variance','exp');lda(0.4421182207576726,148,0.02692700954958445)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();varianceThreshold();pca(0.8510991796654062,False);nystroem('rbf',0.21861994010365,81,5,0.7061748413645674);lda(0.30769164340749056,122,0.009842491117148024)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);pca(0.9821960206980329,False);pca(0.8388581442544782,False);logisticRegression('None','liblinear',1000,0.9464752036087539,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();minMaxScaler();selectFwe(0.015346639847060384);maxAbsScaler();mlpClassifier((88, 4),0.006236177270732494,0.9599608286906842,'sgd','tanh')	0.5	4.537874221801758
selectFwe(0.032483507309700045);selectFwe(0.02145072865329908);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',7,2,0.7506466634875965,12,'balanced')	0.7600428202598601	0.804401159286499
maxAbsScaler();minMaxScaler();selectFwe(0.03435444058189426);maxAbsScaler();bernoulliNB(6.261103445034894,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectPercentile(17.35129850925705);gaussianNB(0.003171240667482247)	0.5	1.0858910083770752
minMaxScaler();decisionTree('entropy',13,16,0.5235160061054568,4,'balanced')	0.7073843158304022	1.2498586177825928
robustScaler(False,False);selectFwe(0.04397086739847418);adaBoost(decisionTree('entropy',5,19,0.27534972781505307,18,'balanced'),20,1.1736457754465641,'SAMME')	0.7146827812378493	1.2527844905853271
lda(0.06866197757033665,181,0.07999119323578179)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
nystroem('cosine',2.7489272869063983,26,4,0.3137777004570077);varianceThreshold();decisionTree('entropy',14,2,0.1760428982040646,9,'balanced')	0.680326739373149	1.3636667728424072
minMaxScaler();qda(0.563672890616767)	0.5	1.387617588043213
logisticRegression('l2','liblinear',1000,1.0842251922090038,'None')	0.5	1.1173830032348633
varianceThreshold();minMaxScaler();minMaxScaler();maxAbsScaler();maxAbsScaler();extraTreesClassifier(77,'entropy','log2',9,14,False,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();selectFwe(0.014657296189799092);robustScaler(False,False);adaBoost(decisionTree('entropy',17,16,0.5736999402174839,15,'balanced'),23,0.662731101714524,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();randomForest(14,'gini','sqrt',11,9,True,'None')	0.519090909090909	1.2655107975006104
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
selectPercentile(72.01347403047444);kNN(1,'distance',2)	0.6381890948272846	0.9055047035217285
kNN(21,'distance',1)	0.6168032437046522	0.7886936664581299
selectPercentile(94.69407691043261);varianceThreshold();adaBoost(decisionTree('gini',28,17,0.11435499334184629,19,'balanced'),69,1.2547760648476023,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectPercentile(85.88521377596742);adaBoost(decisionTree('gini',27,6,0.5278031027026997,15,'None'),38,0.6982583636177788,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
mlpClassifier((69, 8),0.0012724138877004904,0.9422326014446429,'adam','logistic')	0.5	3.505859136581421
selectFwe(0.04035650097875411);varianceThreshold();minMaxScaler();minMaxScaler();decisionTree('entropy',23,5,0.671216853467116,14,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('entropy',30,19,0.8897737202554157,18,'balanced')	0.7300787436991547	1.4173181056976318
qda(0.11372701652160433)	0.4990626821035503	0.8635048866271973
selectFwe(0.015210543680639123);gaussianNB(0.008357878374102281)	0.5	cached
minMaxScaler();maxAbsScaler();maxAbsScaler();randomForest(77,'gini',0.7854038520172865,18,16,True,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();adaBoost(decisionTree('gini',18,9,0.38812029229918077,14,'balanced'),83,1.7891920891271957,'SAMME')	0.6370379854886897	3.2687292098999023
logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.6986699631469893	2.4136788845062256
adaBoost(decisionTree('gini',5,6,0.654306107193385,16,'None'),13,1.163671915645616,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
kNN(16,'uniform',2)	0.5	1.167029619216919
selectPercentile(37.69604578369046);multinomialNB(1.0272494115875046,False)	0.5665606255516208	0.988638162612915
bernoulliNB(0.8733994950777562,True)	0.5	1.148512363433838
pca(0.5954318229927958,False);multinomialNB(99.20799352540618,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
decisionTree('gini',27,15,0.743293689556957,1,'None')	0.6484542625849483	cached
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	1.5324385166168213
selectFwe(0.04815687022629096);pca(0.8822175921259557,False);adaBoost(decisionTree('gini',28,20,0.11435499334184629,19,'balanced'),69,1.2547760648476023,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();minMaxScaler();maxAbsScaler();bernoulliNB(0.8733994950777562,True)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
multinomialNB(0.4824858913641914,False)	0.605939981668451	0.9773328304290771
fastICA(10,'parallel','arbitrary-variance','logcosh');nystroem('cosine',0.7557836789307537,59,3,0.9879713513523094);varianceThreshold();mlpClassifier((99, 7),0.0160740378300396,0.4319969906689145,'adam','identity')	0.4957768468735913	13.239180326461792
nystroem('poly',0.1936583702708131,75,2,-0.30693890535943247);robustScaler(False,True);maxAbsScaler();qda(0.6983523993324714)	0.49976580796252923	2.304736375808716
maxAbsScaler();maxAbsScaler();varianceThreshold();mlpClassifier((12, 14),0.010139243508457524,0.8176603057649293,'adam','identity')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();robustScaler(True,True);qda(0.24286569442334427)	0.4995316159250585	0.7932577133178711
minMaxScaler();varianceThreshold();robustScaler(False,False);multinomialNB(4.174848641343084,False)	0.5452114475226921	cached
varianceThreshold();maxAbsScaler();maxAbsScaler();kNN(30,'distance',2)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
randomForest(79,'gini','log2',5,3,False,'None')	0.6063348596297107	1.5439393520355225
varianceThreshold();maxAbsScaler();extraTreesClassifier(87,'gini','sqrt',14,17,True,'balanced')	0.7198857726588044	1.0343952178955078
minMaxScaler();maxAbsScaler();varianceThreshold();multinomialNB(22.828011354744994,False)	0.5451839901805268	0.6279735565185547
varianceThreshold();varianceThreshold();qda(0.4123891688286513)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
lda(0.05152972578770987,128,0.01790798433854458)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	1.4547200202941895
maxAbsScaler();minMaxScaler();adaBoost(decisionTree('entropy',18,3,0.8611093746947203,7,'None'),12,0.7752759609622936,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
logisticRegression('None','liblinear',1000,7.206950923783087,'None')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
fastICA(32,'parallel','unit-variance','exp');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.6420795413314463	2.3018136024475098
minMaxScaler();varianceThreshold();minMaxScaler();fastICA(92,'deflation','arbitrary-variance','cube');logisticRegression('l2','newton-cg',1000,2.319202423642008,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.8152437422516973,3,'None'),47,0.36974861755399197,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();maxAbsScaler();robustScaler(True,True);qda(0.24286569442334427)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6397776325114123	0.995042085647583
pca(0.8260475546611258,False);selectFwe(0.009095936650346158);minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);logisticRegression('None','saga',1000,0.9391431654745284,'balanced')	0.5057980970772473	4.2769598960876465
varianceThreshold();varianceThreshold();mlpClassifier((12, 14),0.010139243508457524,0.022693228324716718,'adam','identity')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
fastICA(21,'parallel','unit-variance','exp');maxAbsScaler();logisticRegression('None','newton-cg',1000,2.6508835021216854,'balanced')	0.6615916562464704	2.0184807777404785
decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.9103906154632568
adaBoost(decisionTree('gini',28,7,0.4664601662314072,20,'balanced'),40,0.5571448000382866,'SAMME')	0.6714982093255009	2.413597822189331
selectFwe(0.04815687022629096);pca(0.8822175921259557,False);adaBoost(decisionTree('gini',20,20,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.6931129249416019	1.8411331176757812
varianceThreshold();varianceThreshold();robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();minMaxScaler();qda(0.9712326999771631)	0.5	1.067209243774414
adaBoost(decisionTree('entropy',16,8,0.6024189420398927,6,'None'),84,0.4164767762890753,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();gaussianNB(0.001756513527474122)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('entropy',24,8,0.9434955147782088,12,'balanced')	0.7448520831896495	cached
maxAbsScaler();multinomialNB(99.20799352540618,True)	0.5	0.879845142364502
pca(0.5954318229927958,False);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.6570227725018766	1.2054686546325684
nystroem('poly',2.5322803306515222,16,5,-0.7410443582390083);maxAbsScaler();mlpClassifier((32, 13),0.03512959581502032,0.8815830923437531,'adam','tanh')	0.5	1.3158965110778809
minMaxScaler();fastICA(85,'parallel','arbitrary-variance','exp');lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
selectFwe(0.04035650097875411);varianceThreshold();minMaxScaler();minMaxScaler();decisionTree('entropy',23,5,0.671216853467116,14,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();minMaxScaler();pca(0.7547786711594666,True);gaussianNB(0.0027032161915060463)	0.5	0.7206125259399414
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	cached
pca(0.9064364957741008,True);minMaxScaler();multinomialNB(38.82750358650904,False)	0.5	0.8514516353607178
pca(0.5673871045793949,True);selectPercentile(47.60786873808483);mlpClassifier((53, 10),0.03294951397162522,0.07667738177349293,'adam','identity')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MLPClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MLPClassifier.)
minMaxScaler();selectPercentile(36.73848517976618);selectFwe(0.00931266539136771);kNN(16,'uniform',2)	0.5	1.3747737407684326
varianceThreshold();maxAbsScaler();varianceThreshold();maxAbsScaler();decisionTree('entropy',30,12,0.7302820168358479,19,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',26,18,0.4822286022101796,19,'balanced'),75,0.30897270112744163,'SAMME')	0.6899142195447898	2.7052464485168457
maxAbsScaler();selectPercentile(37.69604578369046);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
selectPercentile(66.95609619906999);multinomialNB(1.0272494115875046,False)	0.6002142912117514	1.0699729919433594
decisionTree('gini',7,2,0.7506466634875965,12,'balanced')	0.7600428202598601	cached
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.8177545070648193
pca(0.5954318229927958,False);multinomialNB(99.20799352540618,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
decisionTree('entropy',11,2,0.020416625556882395,4,'None')	0.6135799096616459	0.9429347515106201
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',21,16,0.2708667438770346,11,'None'),10,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.015210543680639123);gaussianNB(0.008357878374102281)	0.5	cached
selectPercentile(60.59982934815563);maxAbsScaler();adaBoost(decisionTree('entropy',23,17,0.903471619362383,8,'None'),10,0.3083643788755388,'SAMME')	0.6153980914798278	0.7250580787658691
varianceThreshold();varianceThreshold();robustScaler(True,True);minMaxScaler();qda(0.9712326999771631)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();logisticRegression('l2','sag',1000,2.977626056380501,'None')	0.5	1.10235595703125
varianceThreshold();pca(0.5309047153028775,False);mlpClassifier((21, 16),0.07964453205944211,0.31108998762760715,'lbfgs','identity')	0.5	9.95756483078003
pca(0.6181373946065492,False);qda(0.4540339853266856)	0.4934393244714187	0.6685960292816162
minMaxScaler();minMaxScaler();qda(0.3067864093825794)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
logisticRegression('None','liblinear',1000,4.223864452873283,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
selectFwe(0.01920406591929322);maxAbsScaler();pca(0.7269994049460312,True);maxAbsScaler();bernoulliNB(25.015962249113663,True)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	2.678860902786255
logisticRegression('l1','newton-cg',1000,3.349576312542485,'balanced')	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);randomForest(36,'gini','None',9,20,False,'balanced')	0.6803668408863514	6.69684624671936
pca(0.8260475546611258,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('None','sag',1000,1.9328127026204596,'None')	0.5	0.85457444190979
nystroem('poly',0.07283230247530376,31,5,-0.841440042088569);randomForest(56,'gini',0.6788970057202638,5,15,True,'balanced_subsample')	0.64274250570487	cached
selectFwe(0.005862330664967168);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	0.8887505531311035
maxAbsScaler();varianceThreshold();minMaxScaler();minMaxScaler();varianceThreshold();multinomialNB(3.9768960522853702,True)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
mlpClassifier((69, 8),0.0012724138877004904,0.9422326014446429,'adam','logistic')	0.5	1.8352556228637695
pca(0.6407695642192985,True);maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('entropy',6,13,0.3401939058336457,9,'None'),36,1.4083703187118697,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
logisticRegression('l1','lbfgs',1000,9.683260119726661,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	cached
decisionTree('entropy',30,19,0.8897737202554157,18,'balanced')	0.7300787436991547	cached
nystroem('cosine',6.210980854777332,31,3,-0.5748643516091523);randomForest(28,'gini',0.6788970057202638,5,15,True,'balanced_subsample')	0.6242039819643144	2.637831926345825
fastICA(92,'deflation','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.6600911879623494	cached
robustScaler(True,True);decisionTree('entropy',24,8,0.9434955147782088,12,'balanced')	0.7448520831896495	cached
maxAbsScaler();nystroem('rbf',0.7765837544741214,60,2,-0.24402311810597133);randomForest(60,'entropy','sqrt',2,4,True,'None')	0.5886219752694009	cached
minMaxScaler();minMaxScaler();mlpClassifier((19, 1),0.0008732770838575323,0.6409290915155257,'adam','tanh')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
pca(0.8764430548719677,False);nystroem('rbf',4.7619755286411145,38,4,0.5084885282416156);adaBoost(decisionTree('gini',1,3,0.8597092309835485,7,'None'),44,1.1381690606137105,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();maxAbsScaler();qda(0.9616148512453987)	0.5	0.8795750141143799
robustScaler(True,True);logisticRegression('l1','liblinear',1000,0.5739754765192291,'balanced')	0.695387976142998	1.3665781021118164
minMaxScaler();selectPercentile(38.622009637977314);fastICA(20,'parallel','unit-variance','exp');logisticRegression('l1','newton-cg',1000,3.4941945824685825,'None')	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)
pca(0.9077442297283207,False);varianceThreshold();minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	0.6437847752186242	1.0500898361206055
minMaxScaler();adaBoost(decisionTree('gini',18,9,0.38812029229918077,14,'balanced'),83,1.7891920891271957,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',21,16,0.2708667438770346,11,'None'),10,0.10300848230443381,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);gaussianNB(0.004875981351865978)	0.6419981388579865	1.2447762489318848
fastICA(24,'parallel','unit-variance','exp');lda(0.8313912271160616,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();maxAbsScaler();maxAbsScaler();varianceThreshold();maxAbsScaler();decisionTree('entropy',1,16,0.08958490270045305,7,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.24402311810597133);fastICA(29,'deflation','unit-variance','cube');mlpClassifier((41, 9),0.08227065850734115,0.7618785247891477,'sgd','logistic')	0.59838778323193	15.861613273620605
maxAbsScaler();nystroem('rbf',0.7765837544741214,60,2,-0.8802459282975126);randomForest(60,'entropy','sqrt',2,4,True,'None')	0.5886219752694009	4.092915058135986
maxAbsScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),47,1.8221363451224983,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(False,False);selectFwe(0.04397086739847418);adaBoost(decisionTree('entropy',5,19,0.27534972781505307,18,'balanced'),20,1.1736457754465641,'SAMME')	0.7146827812378493	0.8026201725006104
fastICA(10,'parallel','arbitrary-variance','logcosh');nystroem('cosine',0.7557836789307537,59,3,-0.30693890535943247);varianceThreshold();mlpClassifier((99, 7),0.0160740378300396,0.4319969906689145,'adam','identity')	0.4957768468735913	6.656729459762573
selectFwe(0.04815687022629096);pca(0.8822175921259557,False);adaBoost(decisionTree('entropy',6,20,0.29951393467369136,11,'None'),86,0.7341493501197409,'SAMME')	0.4997652582159624	1.3857195377349854
selectFwe(0.008653582082547821);robustScaler(False,True);selectPercentile(94.60707119989488);decisionTree('gini',20,2,0.4929389586609223,12,'balanced')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
fastICA(92,'deflation','unit-variance','cube');maxAbsScaler();varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.6600911879623494	2.2052018642425537
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.6521692276000977
selectFwe(0.02221635985121816);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	1.0364317893981934
selectFwe(0.04815687022629096);pca(0.8822175921259557,False);adaBoost(decisionTree('gini',20,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139780061391698	1.4264357089996338
minMaxScaler();adaBoost(decisionTree('entropy',23,20,0.7163664847100081,17,'None'),47,1.8221363451224983,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectPercentile(29.912272382405458);nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);minMaxScaler();adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'None'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
nystroem('sigmoid',1.37888616647132,75,3,-0.23306515685234985);robustScaler(False,True);maxAbsScaler();qda(0.6983523993324714)	0.5	2.041163206100464
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
gaussianNB(0.0031577721809973153)	0.4995316159250585	cached
selectPercentile(94.69407691043261);varianceThreshold();adaBoost(decisionTree('gini',28,17,0.11435499334184629,19,'balanced'),69,1.2547760648476023,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
fastICA(27,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'None')	0.4992957746478873	2.5614075660705566
maxAbsScaler();decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.8536484241485596
minMaxScaler();minMaxScaler();qda(0.4540339853266856)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
pca(0.9733825076094778,False);multinomialNB(1.0272494115875046,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
selectPercentile(37.69604578369046);multinomialNB(99.20799352540618,False)	0.49935692645690344	0.7151496410369873
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('entropy',8,11,0.544198344385477,18,'None'),87,1.1245734854313676,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6870466015167007	2.6601428985595703
selectPercentile(78.28870863702582);robustScaler(False,True);randomForest(62,'entropy','log2',14,19,True,'balanced_subsample')	0.6930060242228333	1.2425298690795898
logisticRegression('l1','newton-cg',1000,3.349576312542485,'balanced')	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)
adaBoost(decisionTree('entropy',25,17,0.3677272658875984,10,'balanced'),84,1.6894095667257263,'SAMME')	0.6463636363636363	cached
mlpClassifier((48, 12),0.09659530472502961,0.14921567393588442,'adam','identity')	0.5	cached
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
selectFwe(0.03427294462346232);logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.7457888126373291
adaBoost(decisionTree('entropy',30,18,0.4822286022101796,19,'None'),75,0.30897270112744163,'SAMME')	0.6631093266004372	1.828110694885254
selectPercentile(41.313965339068424);maxAbsScaler();adaBoost(decisionTree('gini',27,17,0.7983253537989112,16,'None'),10,0.3083643788755388,'SAMME')	0.5665114981993302	0.6559512615203857
decisionTree('entropy',23,15,0.743293689556957,1,'None')	0.6425562615634193	0.789374828338623
selectPercentile(2.388287704679171);pca(0.5309047153028775,False);adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.5	1.196246862411499
mlpClassifier((21, 16),0.07964453205944211,0.31108998762760715,'lbfgs','identity')	0.5	2.016018867492676
maxAbsScaler();pca(0.8469032781527381,True);kNN(28,'uniform',1)	0.5	0.8327558040618896
decisionTree('gini',29,8,0.6655691523136347,3,'None')	0.6398577655700722	0.7770328521728516
gaussianNB(0.007214600049421331)	0.4995316159250585	0.8199577331542969
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	3.670799732208252
varianceThreshold();maxAbsScaler();extraTreesClassifier(87,'gini','sqrt',14,17,True,'balanced')	0.7198857726588044	1.6764934062957764
nystroem('cosine',0.6291008171346562,21,4,0.21405462314055912);decisionTree('gini',28,11,0.6162244122202474,14,'None')	0.5183872334853633	0.7793188095092773
minMaxScaler();decisionTree('entropy',29,12,0.8355687708546891,12,'None')	0.5962789554015598	0.7749907970428467
maxAbsScaler();varianceThreshold();minMaxScaler();maxAbsScaler();varianceThreshold();multinomialNB(3.9768960522853702,True)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();randomForest(56,'gini',0.6788970057202638,5,15,True,'balanced_subsample')	0.6977274376512428	1.5079126358032227
nystroem('poly',0.07283230247530376,31,5,-0.841440042088569);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.6080811745785193	1.1084134578704834
pca(0.9974700914075801,False);robustScaler(False,False);fastICA(30,'parallel','unit-variance','cube');randomForest(36,'gini','None',9,20,False,'balanced')	0.6397776325114123	1.573277473449707
adaBoost(decisionTree('entropy',18,3,0.8611093746947203,7,'None'),12,0.7752759609622936,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();maxAbsScaler();randomForest(74,'gini','None',16,19,True,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();adaBoost(decisionTree('gini',29,10,0.5120110048477476,19,'balanced'),19,1.146189848288477,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();minMaxScaler();selectPercentile(49.94057575988014);lda(0.0548034579759894,96,0.04919101058754719)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();minMaxScaler();varianceThreshold();multinomialNB(0.279517559302915,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();minMaxScaler();maxAbsScaler();lda(0.9966398604857563,242,0.0918523222330089)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();varianceThreshold();varianceThreshold();extraTreesClassifier(58,'entropy','log2',9,19,True,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();varianceThreshold();minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.9881843797012896,6,'balanced'),71,0.6849776982076169,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();maxAbsScaler();varianceThreshold();multinomialNB(22.828011354744994,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
randomForest(52,'gini','log2',7,1,False,'balanced')	0.6619372669199499	1.886758804321289
adaBoost(decisionTree('entropy',30,18,0.4822286022101796,19,'None'),75,0.30897270112744163,'SAMME')	0.6631093266004372	1.859180212020874
pca(0.5154186007732566,True);pca(0.8368434920209009,True);mlpClassifier((83, 1),0.0020471161677269494,0.5432040265469587,'lbfgs','relu')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
bernoulliNB(0.8733994950777562,True)	0.5	cached
randomForest(79,'gini','log2',5,3,False,'None')	0.6063348596297107	1.473555088043213
decisionTree('gini',23,2,0.7506466634875965,12,'None')	0.5183606557377048	0.547863245010376
fastICA(37,'parallel','unit-variance','logcosh');varianceThreshold();varianceThreshold();mlpClassifier((98, 4),0.0859961564927726,0.5274860295633614,'lbfgs','logistic')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);decisionTree('entropy',24,8,0.1784904763486047,12,'balanced')	0.6332419154769651	0.695847749710083
adaBoost(decisionTree('entropy',25,17,0.3677272658875984,10,'balanced'),84,1.6894095667257263,'SAMME')	0.6463636363636363	1.890754222869873
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.8802459282975126);fastICA(29,'deflation','unit-variance','cube');mlpClassifier((41, 9),0.08227065850734115,0.7618785247891477,'sgd','logistic')	0.5969826310071057	8.014501571655273
decisionTree('gini',30,19,0.8897737202554157,18,'None')	0.5390621323569834	0.7704100608825684
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();decisionTree('entropy',10,15,0.3756221919212819,9,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();maxAbsScaler();varianceThreshold();robustScaler(True,False);randomForest(14,'entropy','sqrt',11,4,True,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();nystroem('rbf',0.7765837544741214,60,2,-0.24402311810597133);randomForest(60,'gini','sqrt',2,9,True,'None')	0.519090909090909	4.084594488143921
minMaxScaler();adaBoost(decisionTree('entropy',23,20,0.7163664847100081,17,'None'),12,0.385035932223208,'SAMME')	0.6640178677629613	1.4854063987731934
fastICA(92,'deflation','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.6600911879623494	2.3881940841674805
nystroem('cosine',0.6291008171346562,21,4,0.21405462314055912);decisionTree('gini',28,11,0.6162244122202474,14,'None')	0.5183872334853633	cached
decisionTree('gini',27,15,0.743293689556957,1,'None')	0.6484542625849483	cached
bernoulliNB(1.8505320226915862,True)	0.5	0.9535036087036133
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	1.952909231185913
varianceThreshold();maxAbsScaler();extraTreesClassifier(87,'gini','sqrt',14,17,True,'balanced')	0.7198857726588044	cached
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
selectFwe(0.032483507309700045);selectFwe(0.02145072865329908);logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	1.1481857299804688
minMaxScaler();minMaxScaler();mlpClassifier((19, 1),0.0008732770838575323,0.6409290915155257,'adam','tanh')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
bernoulliNB(1.8505320226915862,True)	0.5	0.6367337703704834
varianceThreshold();maxAbsScaler();varianceThreshold();varianceThreshold();decisionTree('gini',10,15,0.3756221919212819,9,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();extraTreesClassifier(24,'gini','sqrt',2,20,True,'balanced')	0.7091068917229156	0.8724331855773926
minMaxScaler();maxAbsScaler();maxAbsScaler();fastICA(98,'parallel','unit-variance','logcosh');randomForest(74,'gini','None',16,19,True,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.8152437422516973,3,'None'),47,0.36974861755399197,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.04815687022629096);pca(0.8822175921259557,False);adaBoost(decisionTree('entropy',8,20,0.4929389586609223,12,'None'),87,1.1245734854313676,'SAMME')	0.499296874141021	1.3283603191375732
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('gini',20,11,0.544198344385477,18,'balanced'),86,0.7341493501197409,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();varianceThreshold();varianceThreshold();qda(0.13579613551777237)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',29,14,0.806409322293882,7,'None'),29,0.7119306906686402,'SAMME')	0.6638130022059829	1.848853588104248
randomForest(79,'gini','log2',5,3,False,'None')	0.6063348596297107	cached
selectPercentile(29.912272382405458);nystroem('sigmoid',1.37888616647132,64,3,-0.23306515685234985);minMaxScaler();randomForest(69,'gini',0.8568779831593858,19,3,False,'None')	0.5	cached
varianceThreshold();maxAbsScaler();minMaxScaler();varianceThreshold();maxAbsScaler();decisionTree('entropy',1,16,0.08958490270045305,7,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();logisticRegression('l2','sag',1000,2.977626056380501,'None')	0.5	0.7336010932922363
logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.6986699631469893	cached
decisionTree('entropy',11,2,0.020416625556882395,4,'None')	0.6135799096616459	cached
varianceThreshold();maxAbsScaler();varianceThreshold();maxAbsScaler();decisionTree('gini',28,12,0.4664601662314072,20,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',30,7,0.7302820168358479,19,'None'),40,0.5571448000382866,'SAMME')	0.644927508418619	1.9993438720703125
decisionTree('entropy',11,2,0.020416625556882395,4,'None')	0.6135799096616459	0.6810259819030762
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.2634050846099854
nystroem('cosine',0.6291008171346562,21,4,0.21405462314055912);decisionTree('gini',9,11,0.48039816293831483,14,'balanced')	0.6327798984668067	0.8260259628295898
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',28,19,0.6162244122202474,18,'None')	0.5178906224230629	1.4597399234771729
pca(0.9847349563645761,False);multinomialNB(1.0272494115875046,False)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
robustScaler(False,True);decisionTree('entropy',24,8,0.1784904763486047,12,'balanced')	0.6332419154769651	0.6244044303894043
fastICA(99,'parallel','unit-variance','exp');varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	1.381593942642212
varianceThreshold();maxAbsScaler();mlpClassifier((12, 14),0.010139243508457524,0.022693228324716718,'adam','identity')	0.5	1.0538051128387451
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
selectFwe(0.005862330664967168);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	cached
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	2.0568673610687256
selectFwe(0.01920406591929322);maxAbsScaler();pca(0.7269994049460312,False);maxAbsScaler();bernoulliNB(25.015962249113663,True)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();varianceThreshold();robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.444068193435669
adaBoost(decisionTree('entropy',29,14,0.806409322293882,7,'balanced'),29,0.7119306906686402,'SAMME')	0.6626691695128545	1.3826501369476318
varianceThreshold();varianceThreshold();robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();adaBoost(decisionTree('gini',18,9,0.38812029229918077,14,'balanced'),83,1.7891920891271957,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);selectFwe(0.04397086739847418);adaBoost(decisionTree('entropy',5,19,0.27534972781505307,18,'balanced'),20,1.1736457754465641,'SAMME')	0.7146827812378493	0.9080870151519775
minMaxScaler();minMaxScaler();randomForest(52,'gini','log2',7,1,False,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
qda(0.4540339853266856)	0.49203417224659435	0.6426887512207031
fastICA(99,'deflation','unit-variance','cube');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6623504764303656	3.0842738151550293
fastICA(92,'parallel','unit-variance','exp');maxAbsScaler();varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.6420795413314463	2.1617045402526855
minMaxScaler();adaBoost(decisionTree('entropy',1,11,0.1437364445829975,11,'None'),55,0.28915299454171217,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.8152437422516973,3,'None'),83,1.7891920891271957,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.01920406591929322);maxAbsScaler();pca(0.7269994049460312,True);maxAbsScaler();bernoulliNB(25.015962249113663,True)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',28,7,0.4664601662314072,20,'balanced'),40,0.5571448000382866,'SAMME')	0.6714982093255009	cached
minMaxScaler();decisionTree('entropy',29,12,0.8355687708546891,12,'None')	0.5962789554015598	0.6043388843536377
selectFwe(0.032254793394606976);maxAbsScaler();extraTreesClassifier(31,'entropy','sqrt',10,9,False,'balanced')	0.7125695554349445	0.963421106338501
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',20,11,0.563784128223613,17,'balanced'),87,0.11983386410789922,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();decisionTree('entropy',13,7,0.5235160061054568,4,'None')	0.6246374121529975	0.7577400207519531
varianceThreshold();adaBoost(decisionTree('entropy',23,17,0.02071879182883507,1,'balanced'),48,0.8482211668353168,'SAMME')	0.6456599607580904	1.2049682140350342
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('entropy',24,11,0.544198344385477,18,'balanced'),86,0.7341493501197409,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7892999649047852
pca(0.5954318229927958,False);multinomialNB(99.20799352540618,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6397776325114123	cached
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.8802459282975126);fastICA(29,'deflation','unit-variance','cube');randomForest(79,'gini','log2',5,3,False,'None')	0.5977128843603099	7.336892366409302
mlpClassifier((41, 9),0.08227065850734115,0.7618785247891477,'sgd','logistic')	0.5	2.854581356048584
decisionTree('gini',27,15,0.743293689556957,1,'None')	0.6484542625849483	cached
selectPercentile(2.388287704679171);pca(0.5309047153028775,False);adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.5	cached
minMaxScaler();minMaxScaler();maxAbsScaler();lda(0.9966398604857563,242,0.0918523222330089)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();extraTreesClassifier(19,'gini','log2',2,3,True,'balanced_subsample')	0.6525833890576445	1.0025711059570312
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	cached
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
bernoulliNB(0.8733994950777562,True)	0.5	cached
minMaxScaler();varianceThreshold();nystroem('cosine',1.5951663747909999,57,4,-0.2390591381738154);qda(0.15693420322482265)	0.5	2.1989357471466064
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);randomForest(36,'gini','None',9,20,False,'balanced')	0.6803668408863514	6.702458143234253
varianceThreshold();maxAbsScaler();extraTreesClassifier(87,'entropy','sqrt',8,17,True,'balanced')	0.7203514080009116	1.2359650135040283
adaBoost(decisionTree('entropy',30,18,0.4822286022101796,19,'None'),75,0.30897270112744163,'SAMME')	0.6631093266004372	cached
minMaxScaler();pca(0.6316378168778604,True);maxAbsScaler();bernoulliNB(7.156742686178779,False)	0.533449489785209	0.8308963775634766
minMaxScaler();varianceThreshold();minMaxScaler();fastICA(92,'deflation','arbitrary-variance','cube');logisticRegression('l2','newton-cg',1000,2.319202423642008,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
pca(0.8260475546611258,False);selectFwe(0.009095936650346158);minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',21,16,0.2708667438770346,11,'None'),10,0.10300848230443381,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',23,5,0.6450236151994255,7,'None'),33,0.10314730323569772,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('gini',20,11,0.544198344385477,18,'balanced'),86,0.7341493501197409,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6870466015167007	cached
selectFwe(0.02145072865329908);maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
selectFwe(0.032483507309700045);minMaxScaler();logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	0.6794226361647281	0.9977505207061768
decisionTree('entropy',30,19,0.8897737202554157,18,'balanced')	0.7300787436991547	cached
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('entropy',8,11,0.544198344385477,18,'None'),87,1.1245734854313676,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),47,1.8221363451224983,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
logisticRegression('None','liblinear',1000,4.223864452873283,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
maxAbsScaler();decisionTree('entropy',23,9,0.9790021047343852,11,'None')	0.5844591243436776	0.55306077003479
minMaxScaler();adaBoost(decisionTree('gini',22,20,0.7163664847100081,17,'balanced'),47,1.8221363451224983,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();minMaxScaler();mlpClassifier((19, 1),0.0008732770838575323,0.6409290915155257,'adam','tanh')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',26,18,0.4822286022101796,19,'balanced'),75,0.30897270112744163,'SAMME')	0.6899142195447898	cached
minMaxScaler();robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l2','sag',1000,2.977626056380501,'None')	0.5	1.7058515548706055
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.4609153270721436
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6397776325114123	1.1378397941589355
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();gaussianNB(0.001756513527474122)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();minMaxScaler();qda(0.4540339853266856)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectPercentile(29.912272382405458);nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);minMaxScaler();adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'None'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
adaBoost(decisionTree('entropy',25,17,0.3677272658875984,10,'balanced'),84,1.6894095667257263,'SAMME')	0.6463636363636363	2.6106045246124268
maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.8152437422516973,3,'None'),47,0.36974861755399197,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',25,17,0.3677272658875984,10,'balanced'),84,1.6894095667257263,'SAMME')	0.6463636363636363	cached
minMaxScaler();randomForest(79,'gini','log2',5,3,False,'None')	0.6063348596297107	2.242176055908203
decisionTree('entropy',13,16,0.5235160061054568,4,'balanced')	0.7164752249213113	0.7402784824371338
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('entropy',8,11,0.544198344385477,18,'None'),87,1.1245734854313676,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,False);pca(0.63051904762015,True);minMaxScaler();qda(0.28199775693007034)	0.5	0.6407430171966553
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('entropy',9,18,0.9592330739198822,9,'balanced'),35,1.0024024975456765,'SAMME')	0.6533440683844748	2.318373203277588
decisionTree('gini',27,13,0.743293689556957,1,'None')	0.639625222772302	0.791132926940918
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
randomForest(34,'gini','sqrt',15,12,False,'balanced')	0.7065852541978149	1.0775160789489746
minMaxScaler();minMaxScaler();qda(0.4540339853266856)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();minMaxScaler();qda(0.3067864093825794)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
nystroem('sigmoid',1.37888616647132,64,3,-0.23306515685234985);randomForest(36,'gini','None',9,20,False,'balanced')	0.5	1.8812286853790283
selectPercentile(29.912272382405458);nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);minMaxScaler();randomForest(69,'gini',0.8568779831593858,19,3,False,'None')	0.49765423139932496	9.755192995071411
decisionTree('gini',25,8,0.04241959989611088,18,'None')	0.5172428510456679	0.8317158222198486
robustScaler(False,False);selectFwe(0.04397086739847418);adaBoost(decisionTree('gini',7,19,0.7506466634875965,18,'balanced'),20,1.1736457754465641,'SAMME')	0.6980403034201234	0.7750811576843262
randomForest(59,'gini','log2',19,13,False,'balanced')	0.7140351697867283	cached
selectFwe(0.04815687022629096);pca(0.8822175921259557,True);adaBoost(decisionTree('gini',12,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139769066460362	0.839508056640625
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7272709880744976	1.7040011882781982
fastICA(99,'deflation','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.7072908189324721	2.105090379714966
fastICA(21,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	1.172940969467163
logisticRegression('None','newton-cg',1000,2.6508835021216854,'balanced')	0.6986699631469893	1.6382150650024414
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.7140381584089734	0.7424170970916748
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.6651073954906789	2.6358227729797363
nystroem('sigmoid',1.37888616647132,75,3,-0.23306515685234985);robustScaler(False,True);maxAbsScaler();qda(0.6983523993324714)	0.5	3.0017387866973877
varianceThreshold();maxAbsScaler();extraTreesClassifier(87,'gini','sqrt',14,17,True,'balanced')	0.7198857726588044	1.2079272270202637
maxAbsScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();decisionTree('entropy',10,15,0.3756221919212819,9,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	1.1765873432159424
maxAbsScaler();nystroem('rbf',0.7765837544741214,60,2,-0.8802459282975126);randomForest(60,'entropy','sqrt',2,4,True,'None')	0.5886219752694009	3.6056582927703857
minMaxScaler();fastICA(85,'parallel','arbitrary-variance','exp');lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('entropy',8,11,0.544198344385477,18,'None'),87,1.1245734854313676,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.04035650097875411);varianceThreshold();minMaxScaler();minMaxScaler();decisionTree('entropy',23,5,0.671216853467116,14,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();gaussianNB(0.001756513527474122)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
nystroem('poly',2.5322803306515222,16,5,-0.7410443582390083);maxAbsScaler();mlpClassifier((41, 9),0.08227065850734115,0.8815830923437531,'adam','logistic')	0.5	1.4521644115447998
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.24402311810597133);fastICA(29,'deflation','unit-variance','cube');mlpClassifier((32, 13),0.03512959581502032,0.7618785247891477,'sgd','tanh')	0.624694415874282	5.20321249961853
adaBoost(decisionTree('gini',18,18,0.4822286022101796,19,'balanced'),83,1.7891920891271957,'SAMME')	0.6361294443261656	2.1326498985290527
minMaxScaler();adaBoost(decisionTree('entropy',30,9,0.38812029229918077,14,'None'),75,0.30897270112744163,'SAMME')	0.6721996859447795	2.120081901550293
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	cached
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
randomForest(59,'gini','log2',19,13,False,'balanced')	0.7140351697867283	1.313145637512207
bernoulliNB(0.8733994950777562,True)	0.5	0.6341915130615234
maxAbsScaler();nystroem('rbf',0.7765837544741214,60,2,-0.24402311810597133);randomForest(60,'gini','sqrt',2,9,True,'None')	0.519090909090909	cached
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	cached
minMaxScaler();minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',27,17,0.7983253537989112,16,'None'),10,0.3083643788755388,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectPercentile(2.388287704679171);pca(0.5309047153028775,False);adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.5	cached
maxAbsScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),47,1.8221363451224983,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();minMaxScaler();varianceThreshold();multinomialNB(0.279517559302915,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',25,17,0.3677272658875984,10,'balanced'),84,1.6894095667257263,'SAMME')	0.6463636363636363	2.470106363296509
logisticRegression('l1','lbfgs',1000,9.683260119726661,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
minMaxScaler();varianceThreshold();varianceThreshold();extraTreesClassifier(58,'entropy','log2',9,19,True,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();maxAbsScaler();varianceThreshold();varianceThreshold();decisionTree('gini',10,15,0.3756221919212819,9,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	cached
decisionTree('entropy',21,19,0.8897737202554157,18,'None')	0.5856317337707317	0.7435808181762695
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',30,16,0.2708667438770346,11,'None'),10,0.10300848230443381,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('entropy',24,8,0.9434955147782088,12,'balanced')	0.7448520831896495	cached
maxAbsScaler();maxAbsScaler();robustScaler(True,True);qda(0.24286569442334427)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();varianceThreshold();minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.9881843797012896,6,'balanced'),71,0.6849776982076169,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
bernoulliNB(0.8733994950777562,True)	0.5	0.7145287990570068
selectFwe(0.02221635985121816);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	0.9509239196777344
mlpClassifier((48, 12),0.09659530472502961,0.14921567393588442,'adam','identity')	0.5	1.4475595951080322
nystroem('cosine',6.210980854777332,31,3,-0.5748643516091523);randomForest(28,'gini',0.6788970057202638,5,15,True,'balanced_subsample')	0.6242039819643144	2.440042018890381
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',21,16,0.2708667438770346,11,'None'),10,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();varianceThreshold();maxAbsScaler();logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.1106321811676025
decisionTree('entropy',11,2,0.020416625556882395,4,'None')	0.6135799096616459	0.7641785144805908
minMaxScaler();minMaxScaler();selectFwe(0.034756673564904125);selectPercentile(65.96250696807816);extraTreesClassifier(24,'gini','sqrt',2,20,True,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();adaBoost(decisionTree('gini',20,20,0.7163664847100081,17,'balanced'),12,0.385035932223208,'SAMME')	0.7057032907829491	1.0611786842346191
selectFwe(0.008653582082547821);robustScaler(False,True);selectPercentile(94.60707119989488);decisionTree('entropy',23,2,0.4929389586609223,12,'None')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
selectPercentile(29.912272382405458);nystroem('sigmoid',1.37888616647132,64,3,-0.23306515685234985);minMaxScaler();randomForest(69,'gini','log2',5,3,False,'None')	0.5	2.0007245540618896
randomForest(79,'gini',0.8568779831593858,19,3,False,'None')	0.6058382485674104	2.7156949043273926
adaBoost(decisionTree('gini',16,14,0.6279521467670153,4,'None'),87,0.05828850340761941,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.6986699631469893	3.0852644443511963
minMaxScaler();selectPercentile(36.73848517976618);selectFwe(0.00931266539136771);kNN(16,'uniform',2)	0.5	0.77243971824646
extraTreesClassifier(85,'gini','sqrt',14,17,False,'balanced_subsample')	0.7630943335122508	1.4157862663269043
minMaxScaler();adaBoost(decisionTree('gini',18,9,0.38812029229918077,14,'balanced'),83,1.7891920891271957,'SAMME')	0.6370379854886897	cached
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
decisionTree('entropy',23,2,0.7506466634875965,12,'None')	0.5370097585013309	0.7332470417022705
adaBoost(decisionTree('gini',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.663343518637908	2.6930363178253174
selectPercentile(29.912272382405458);nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);minMaxScaler();adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'None'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();maxAbsScaler();varianceThreshold();robustScaler(True,False);randomForest(14,'entropy','sqrt',11,4,True,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);decisionTree('gini',24,8,0.1784904763486047,12,'balanced')	0.6719044020706454	0.6225464344024658
adaBoost(decisionTree('entropy',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.757032138184297	1.4227757453918457
pca(0.5954318229927958,False);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();fastICA(85,'parallel','arbitrary-variance','exp');decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.6944463302417586	1.319967269897461
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	cached
minMaxScaler();decisionTree('entropy',13,16,0.5235160061054568,4,'balanced')	0.7073843158304022	cached
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();randomForest(28,'gini',0.6788970057202638,5,15,True,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
nystroem('cosine',6.210980854777332,31,3,-0.5748643516091523);adaBoost(decisionTree('entropy',21,16,0.2708667438770346,11,'None'),10,0.10300848230443381,'SAMME')	0.5883872334853633	1.3088905811309814
adaBoost(decisionTree('gini',28,2,0.04544983677095127,14,'balanced'),16,1.7665223089793596,'SAMME')	0.7024078499811587	0.8221440315246582
pca(0.5954318229927958,False);multinomialNB(99.20799352540618,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
randomForest(59,'gini','log2',19,13,False,'balanced')	0.7140351697867283	cached
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6397776325114123	cached
decisionTree('gini',23,2,0.7506466634875965,12,'None')	0.5183606557377048	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
bernoulliNB(1.8505320226915862,True)	0.5	0.7535159587860107
logisticRegression('l1','newton-cg',1000,3.349576312542485,'balanced')	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)
varianceThreshold();decisionTree('entropy',26,8,0.8678045458688727,9,'balanced')	0.7234092283457325	cached
qda(0.3059450706457778)	0.49672021198227617	0.6424670219421387
selectPercentile(29.912272382405458);fastICA(85,'parallel','arbitrary-variance','exp');minMaxScaler();adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'None'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();mlpClassifier((48, 12),0.09659530472502961,0.14921567393588442,'adam','identity')	0.5	1.9071624279022217
multinomialNB(1.0272494115875046,False)	0.6035953125609094	0.7562315464019775
minMaxScaler();adaBoost(decisionTree('entropy',23,20,0.7163664847100081,17,'None'),12,0.385035932223208,'SAMME')	0.6640178677629613	1.1783666610717773
selectFwe(0.03427294462346232);logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
randomForest(79,'gini','sqrt',5,3,True,'None')	0.5890909090909091	1.3880114555358887
maxAbsScaler();nystroem('rbf',0.7765837544741214,60,2,-0.24402311810597133);randomForest(60,'gini','log2',2,9,False,'None')	0.5390909090909092	3.7678346633911133
fastICA(24,'parallel','unit-variance','exp');lda(0.8313912271160616,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();selectPercentile(38.622009637977314);fastICA(9,'parallel','unit-variance','exp');logisticRegression('l1','newton-cg',1000,3.4941945824685825,'None')	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)
minMaxScaler();minMaxScaler();maxAbsScaler();lda(0.9966398604857563,242,0.0918523222330089)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();multinomialNB(0.21315087835909238,True)	0.5	0.661329984664917
maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.8152437422516973,3,'None'),47,0.36974861755399197,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',13,9,0.8199950709380602,11,'balanced'),24,0.15808855519552273,'SAMME')	0.7015038367312669	1.253112554550171
minMaxScaler();robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6870466015167007	cached
minMaxScaler();robustScaler(False,False);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,True);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.6755881838472465	1.1049017906188965
selectFwe(0.013492867584314302);decisionTree('entropy',24,8,0.1784904763486047,12,'balanced')	0.6931129249416019	0.6565248966217041
robustScaler(False,False);selectPercentile(49.94057575988014);adaBoost(decisionTree('entropy',5,19,0.27534972781505307,18,'balanced'),20,1.1736457754465641,'SAMME')	0.6818818224798368	0.6788885593414307
varianceThreshold();minMaxScaler();selectFwe(0.03449341297003149);lda(0.0548034579759894,96,0.04919101058754719)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();fastICA(85,'parallel','arbitrary-variance','exp');lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();gaussianNB(0.005490360856608015)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
fastICA(21,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
minMaxScaler();decisionTree('entropy',13,16,0.5235160061054568,4,'balanced')	0.7073843158304022	cached
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.0642056465148926
selectFwe(0.020369263642046772);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	1.32975172996521
adaBoost(decisionTree('gini',27,3,0.8695043602555736,4,'balanced'),89,0.014220344054717728,'SAMME')	0.6945245042035623	2.947782039642334
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
adaBoost(decisionTree('entropy',5,14,0.12204628714296373,2,'None'),83,1.7891920891271957,'SAMME')	0.6554545454545455	1.3782305717468262
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
varianceThreshold();minMaxScaler();selectFwe(0.0013265839042591575);lda(0.5660935917497351,205,0.04919101058754719)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by LinearDiscriminantAnalysis.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by LinearDiscriminantAnalysis.)
pca(0.8260475546611258,False);selectFwe(0.009095936650346158);minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',30,16,0.2708667438770346,11,'None'),10,0.10300848230443381,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();selectPercentile(38.622009637977314);fastICA(9,'parallel','unit-variance','exp');logisticRegression('l1','newton-cg',1000,3.4941945824685825,'None')	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
fastICA(24,'parallel','unit-variance','exp');adaBoost(decisionTree('entropy',23,20,0.7017409572112673,14,'None'),61,1.7885420004417993,'SAMME')	0.5290909090909091	4.309163808822632
decisionTree('gini',7,2,0.7506466634875965,12,'balanced')	0.7600428202598601	0.6866636276245117
minMaxScaler();pca(0.6316378168778604,True);maxAbsScaler();bernoulliNB(7.156742686178779,False)	0.533449489785209	0.6684119701385498
adaBoost(decisionTree('entropy',30,7,0.7302820168358479,19,'None'),40,0.5571448000382866,'SAMME')	0.644927508418619	1.7890112400054932
minMaxScaler();minMaxScaler();randomForest(59,'gini','log2',19,13,False,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
qda(0.4540339853266856)	0.49203417224659435	0.6781728267669678
minMaxScaler();robustScaler(False,False);fastICA(99,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6870466015167007	3.172504425048828
fastICA(31,'parallel','unit-variance','exp');varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	2.1809310913085938
varianceThreshold();decisionTree('entropy',26,8,0.8678045458688727,9,'balanced')	0.7234092283457325	1.1391949653625488
extraTreesClassifier(85,'gini','sqrt',14,17,False,'balanced_subsample')	0.7630943335122508	1.0199775695800781
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.24402311810597133);fastICA(29,'deflation','unit-variance','cube');mlpClassifier((32, 13),0.03512959581502032,0.7618785247891477,'sgd','tanh')	0.624694415874282	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',20,11,0.563784128223613,17,'balanced'),87,0.11983386410789922,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
randomForest(59,'gini','log2',19,12,False,'balanced')	0.7052072294672156	2.1589133739471436
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',10,16,0.3756221919212819,9,'None'),10,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();maxAbsScaler();varianceThreshold();varianceThreshold();decisionTree('gini',21,13,0.2708667438770346,11,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('entropy',24,8,0.9434955147782088,12,'balanced')	0.7448520831896495	cached
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.5322803306515222,13,5,-0.7410443582390083);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
nystroem('poly',2.112368780733218,16,5,0.12655410685540724);maxAbsScaler();mlpClassifier((41, 9),0.08227065850734115,0.8815830923437531,'adam','logistic')	0.5	1.3723697662353516
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	cached
adaBoost(decisionTree('gini',30,4,0.8928820066990173,2,'balanced'),75,0.30897270112744163,'SAMME')	0.653343518637908	2.6926515102386475
adaBoost(decisionTree('gini',30,18,0.4822286022101796,19,'balanced'),83,1.7891920891271957,'SAMME')	0.6361294443261656	4.166289806365967
minMaxScaler();nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.9170093536376953
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
randomForest(59,'gini','log2',19,13,False,'balanced')	0.7140351697867283	1.2885642051696777
selectPercentile(29.912272382405458);nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);minMaxScaler();randomForest(69,'gini',0.8568779831593858,19,3,False,'None')	0.49765423139932496	10.851899862289429
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.983501672744751
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();gaussianNB(0.001756513527474122)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.04815687022629096);pca(0.8822175921259557,True);adaBoost(decisionTree('gini',12,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139769066460362	0.9294328689575195
decisionTree('entropy',30,2,0.38812029229918077,11,'None')	0.5365391754401221	0.8687875270843506
minMaxScaler();adaBoost(decisionTree('entropy',11,9,0.020416625556882395,14,'None'),75,0.30897270112744163,'SAMME')	0.6733728451184005	1.4918577671051025
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.6651073954906789	cached
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	cached
randomForest(34,'gini','sqrt',15,14,False,'balanced_subsample')	0.7133314941811824	1.0744819641113281
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();decisionTree('entropy',30,19,0.8897737202554157,18,'balanced')	0.6773372475288892	1.7218115329742432
multinomialNB(9.858593519633898,True)	0.5434160851847298	0.711841344833374
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('entropy',9,19,0.48039816293831483,18,'None')	0.4995305164319249	1.623201608657837
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('gini',8,11,0.544198344385477,18,'balanced'),87,1.1245734854313676,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
fastICA(41,'parallel','unit-variance','exp');lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);logisticRegression('l1','saga',1000,0.7328637421515383,'balanced')	0.6768836266481152	2.391146659851074
selectFwe(0.02145072865329908);maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
mlpClassifier((41, 9),0.08227065850734115,0.7618785247891477,'sgd','logistic')	0.5	cached
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
minMaxScaler();minMaxScaler();qda(0.3067864093825794)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.03427294462346232);randomForest(36,'gini','None',9,20,False,'balanced')	0.6806941499968515	0.8852870464324951
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
varianceThreshold();maxAbsScaler();varianceThreshold();varianceThreshold();decisionTree('gini',10,15,0.3756221919212819,9,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
bernoulliNB(0.8733994950777562,True)	0.5	0.6500167846679688
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.8482211668353168,'SAMME')	0.6635512628678178	0.8574090003967285
varianceThreshold();adaBoost(decisionTree('entropy',23,17,0.02071879182883507,1,'balanced'),48,0.014220344054717728,'SAMME')	0.7073364578929114	1.2816369533538818
minMaxScaler();nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);decisionTree('gini',10,15,0.3756221919212819,9,'None')	0.6353427369982437	1.863332986831665
varianceThreshold();maxAbsScaler();varianceThreshold();varianceThreshold();lda(0.7061724494248813,238,0.07032606608431344)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),47,1.8221363451224983,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();varianceThreshold();maxAbsScaler();lda(0.6994465087551582,230,0.02301496682808321)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.04815687022629096);pca(0.8822175921259557,True);adaBoost(decisionTree('gini',12,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139769066460362	cached
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.5874037742614746
maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.8152437422516973,3,'None'),47,0.36974861755399197,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',30,16,0.2708667438770346,11,'None'),75,0.30897270112744163,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();adaBoost(decisionTree('gini',30,9,0.38812029229918077,14,'None'),10,0.10300848230443381,'SAMME')	0.5886225250159677	1.0777363777160645
fastICA(24,'parallel','unit-variance','exp');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.6420795413314463	1.2814018726348877
fastICA(82,'parallel','unit-variance','cube');lda(0.8313912271160616,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
pca(0.5954318229927958,False);decisionTree('entropy',11,2,0.020416625556882395,4,'None')	0.5076558806390254	1.22640061378479
multinomialNB(99.20799352540618,True)	0.5	0.9663040637969971
fastICA(92,'parallel','unit-variance','exp');maxAbsScaler();varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.6420795413314463	cached
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7272709880744976	cached
minMaxScaler();fastICA(85,'parallel','arbitrary-variance','exp');decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.6944463302417586	cached
nystroem('poly',0.18708888642836435,69,3,-0.0694470603101478);decisionTree('gini',9,11,0.48039816293831483,14,'balanced')	0.6826439311477408	1.9516429901123047
selectPercentile(29.912272382405458);nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);minMaxScaler();randomForest(69,'gini',0.8568779831593858,19,3,False,'None')	0.49765423139932496	9.717851400375366
selectPercentile(16.98614861065792);fastICA(85,'parallel','arbitrary-variance','exp');minMaxScaler();adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'None'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(False,False);selectFwe(0.04397086739847418);adaBoost(decisionTree('entropy',5,19,0.27534972781505307,18,'balanced'),20,1.6894095667257263,'SAMME')	0.6211196738303641	0.9375185966491699
adaBoost(decisionTree('entropy',25,17,0.3677272658875984,10,'balanced'),84,1.1736457754465641,'SAMME')	0.6551622502026565	1.3511455059051514
selectPercentile(90.4358871072965);selectFwe(0.006560767945218601);varianceThreshold();adaBoost(decisionTree('gini',22,16,0.005807256015762929,12,'None'),40,0.27403090381285616,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('entropy',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.757032138184297	cached
selectFwe(0.032483507309700045);minMaxScaler();logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	0.6794226361647281	0.6750948429107666
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	1.6421611309051514
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
adaBoost(decisionTree('gini',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.663343518637908	3.206435441970825
selectFwe(0.03608326212741288);minMaxScaler();gaussianNB(0.009037377048364525)	0.5	0.802891731262207
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);randomForest(36,'gini','sqrt',9,20,False,'balanced_subsample')	0.6878876537916019	2.902473211288452
minMaxScaler();robustScaler(False,False);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',28,19,0.6162244122202474,18,'None')	0.5178906224230629	1.9912526607513428
pca(0.8260475546611258,False);selectFwe(0.022715839379667216);minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.24402311810597133);varianceThreshold();mlpClassifier((32, 13),0.03512959581502032,0.7618785247891477,'sgd','tanh')	0.6530849478390461	2.6282403469085693
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('entropy',8,11,0.544198344385477,18,'None'),20,1.1736457754465641,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,False);selectPercentile(49.94057575988014);adaBoost(decisionTree('entropy',5,19,0.27534972781505307,18,'balanced'),87,1.1245734854313676,'SAMME')	0.6772337052618743	0.7955458164215088
minMaxScaler();decisionTree('entropy',29,12,0.8355687708546891,12,'None')	0.5962789554015598	cached
fastICA(9,'deflation','unit-variance','cube');minMaxScaler();qda(0.4540339853266856)	0.5	1.7379581928253174
fastICA(87,'parallel','arbitrary-variance','exp');varianceThreshold();robustScaler(False,False);maxAbsScaler();multinomialNB(9.858593519633898,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
minMaxScaler();decisionTree('gini',11,10,0.9237191264027969,11,'balanced')	0.758599705535748	0.757514238357544
fastICA(99,'parallel','unit-variance','exp');minMaxScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	2.424154043197632
maxAbsScaler();randomForest(79,'gini','log2',5,3,False,'None')	0.6063348596297107	1.9012696743011475
adaBoost(decisionTree('entropy',25,17,0.3677272658875984,10,'balanced'),84,1.6894095667257263,'SAMME')	0.6463636363636363	cached
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6397776325114123	cached
robustScaler(False,True);fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.7107776914842256	2.383690357208252
varianceThreshold();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.7144927978515625
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
robustScaler(False,True);randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.306671380996704
adaBoost(decisionTree('entropy',13,9,0.8199950709380602,11,'balanced'),24,0.15808855519552273,'SAMME')	0.7015038367312669	1.1811635494232178
pca(0.8260475546611258,False);selectFwe(0.009095936650346158);minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('entropy',6,9,0.07696901655055277,6,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),89,0.014220344054717728,'SAMME')	0.727340695939172	1.7878267765045166
adaBoost(decisionTree('gini',28,7,0.4664601662314072,20,'balanced'),40,0.5571448000382866,'SAMME')	0.6714982093255009	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
varianceThreshold();adaBoost(decisionTree('entropy',11,17,0.7091069728535343,12,'None'),29,0.723188486542169,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();maxAbsScaler();selectFwe(0.013162481991292645);fastICA(85,'parallel','arbitrary-variance','exp');decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.693815501054014	0.7136907577514648
maxAbsScaler();fastICA(5,'deflation','arbitrary-variance','logcosh');multinomialNB(6.747729014544625,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();varianceThreshold();maxAbsScaler();logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('entropy',25,9,0.48185292277351055,12,'balanced'),87,1.1245734854313676,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
pca(0.8260475546611258,False);selectFwe(0.009095936650346158);minMaxScaler();maxAbsScaler();randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
kNN(28,'distance',2)	0.6168032437046522	1.3779373168945312
selectFwe(0.04035650097875411);varianceThreshold();minMaxScaler();minMaxScaler();decisionTree('entropy',23,5,0.671216853467116,14,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.6986699631469893	3.1222965717315674
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	cached
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);randomForest(36,'gini','None',9,20,False,'balanced')	0.6803668408863514	cached
minMaxScaler();varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,False);maxAbsScaler();varianceThreshold();varianceThreshold();gaussianNB(0.002455146006689582)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('entropy',11,2,0.020416625556882395,4,'None')	0.6135799096616459	0.8744826316833496
randomForest(59,'gini','log2',19,13,False,'balanced')	0.7140351697867283	1.4965474605560303
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	cached
decisionTree('entropy',11,2,0.020416625556882395,4,'None')	0.6135799096616459	cached
bernoulliNB(0.8733994950777562,True)	0.5	0.9592339992523193
adaBoost(decisionTree('gini',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.663343518637908	2.9671449661254883
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',30,16,0.2708667438770346,11,'balanced'),10,0.10300848230443381,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);decisionTree('gini',24,8,0.1784904763486047,12,'None')	0.5192974238875878	0.6107714176177979
minMaxScaler();fastICA(41,'parallel','arbitrary-variance','exp');decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.6944463302417586	1.4118225574493408
fastICA(85,'parallel','unit-variance','logcosh');logisticRegression('l1','saga',1000,0.7328637421515383,'balanced')	0.7138238372110457	2.13703989982605
fastICA(99,'deflation','unit-variance','cube');minMaxScaler();qda(0.3067864093825794)	0.5	2.2902755737304688
minMaxScaler();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.7727761268615723
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',9,16,0.2708667438770346,11,'balanced'),10,0.10300848230443381,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',30,19,0.48039816293831483,18,'None')	0.4997652582159624	2.405884265899658
minMaxScaler();selectFwe(0.013492867584314302);maxAbsScaler();lda(0.9966398604857563,242,0.0918523222330089)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();decisionTree('entropy',24,8,0.1784904763486047,12,'balanced')	0.6332419154769651	0.7744991779327393
minMaxScaler();nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();decisionTree('entropy',13,16,0.5235160061054568,4,'balanced')	0.7073843158304022	1.1472179889678955
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.0845019817352295
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	1.047987937927246
minMaxScaler();selectPercentile(76.61192743268418);maxAbsScaler();adaBoost(decisionTree('gini',22,20,0.7163664847100081,17,'balanced'),47,1.8221363451224983,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();lda(0.9966398604857563,242,0.0918523222330089)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(False,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);logisticRegression('None','liblinear',1000,13.597285094163203,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
robustScaler(True,True);robustScaler(False,False);adaBoost(decisionTree('gini',20,11,0.544198344385477,18,'balanced'),86,0.7341493501197409,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();adaBoost(decisionTree('gini',22,20,0.7163664847100081,17,'balanced'),47,1.8221363451224983,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
multinomialNB(1.0272494115875046,False)	0.6035953125609094	cached
maxAbsScaler();nystroem('rbf',1.6194700589299438,66,2,-0.24402311810597133);randomForest(60,'gini','log2',12,13,False,'balanced')	0.6986862556361517	3.7800726890563965
randomForest(59,'gini','sqrt',2,9,True,'None')	0.519090909090909	1.36979079246521
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	cached
robustScaler(True,True);selectFwe(0.04397086739847418);adaBoost(decisionTree('entropy',5,19,0.27534972781505307,18,'balanced'),20,1.1736457754465641,'SAMME')	0.7146827812378493	cached
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',30,16,0.6984444016873508,11,'None'),10,1.9685123554095822,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.663343518637908	cached
nystroem('sigmoid',1.2493164791696778,33,3,-0.5809315665705741);decisionTree('entropy',24,8,0.1784904763486047,12,'balanced')	0.5	0.6387279033660889
multinomialNB(1.0272494115875046,False)	0.6035953125609094	cached
minMaxScaler();varianceThreshold();minMaxScaler();fastICA(92,'deflation','arbitrary-variance','cube');logisticRegression('l2','newton-cg',1000,2.319202423642008,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();nystroem('rbf',0.7765837544741214,60,2,-0.24402311810597133);randomForest(60,'gini','log2',2,9,False,'None')	0.5390909090909092	3.956531524658203
multinomialNB(1.0272494115875046,False)	0.6035953125609094	0.6323981285095215
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	3.1204521656036377
maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.8152437422516973,3,'None'),97,0.8610357678649618,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectPercentile(29.912272382405458);nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);minMaxScaler();adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'None'),47,0.36974861755399197,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
nystroem('rbf',4.350741901773917,53,3,-0.275882248270926);decisionTree('gini',9,11,0.48039816293831483,14,'balanced')	0.5002347417840376	1.4278621673583984
minMaxScaler();fastICA(85,'deflation','arbitrary-variance','exp');decisionTree('entropy',11,9,0.9790021047343852,11,'balanced')	0.6937918319654639	1.860872745513916
adaBoost(decisionTree('gini',9,18,0.9592330739198822,9,'balanced'),35,1.0024024975456765,'SAMME')	0.6726697192594214	1.78279709815979
pca(0.5954318229927958,False);multinomialNB(99.20799352540618,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
minMaxScaler();nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();minMaxScaler();selectFwe(0.03449341297003149);lda(0.0548034579759894,96,0.04919101058754719)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
adaBoost(decisionTree('entropy',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.757032138184297	2.165022611618042
logisticRegression('l1','newton-cg',1000,3.349576312542485,'balanced')	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver newton-cg supports only 'l2' or None penalties, got l1 penalty.)
selectFwe(0.005862330664967168);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	cached
minMaxScaler();minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',27,17,0.7983253537989112,16,'None'),10,0.3083643788755388,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
logisticRegression('None','liblinear',1000,4.223864452873283,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
varianceThreshold();decisionTree('entropy',13,16,0.5235160061054568,4,'balanced')	0.7164752249213113	0.8341491222381592
mlpClassifier((48, 12),0.09659530472502961,0.14921567393588442,'adam','identity')	0.5	1.8042981624603271
robustScaler(False,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);logisticRegression('None','liblinear',1000,13.597285094163203,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
fastICA(82,'parallel','unit-variance','cube');lda(0.8313912271160616,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
multinomialNB(9.858593519633898,True)	0.5434160851847298	0.6159636974334717
minMaxScaler();decisionTree('entropy',13,16,0.5235160061054568,8,'balanced')	0.706420000379825	0.7725791931152344
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('entropy',23,11,0.671216853467116,14,'balanced'),12,0.385035932223208,'SAMME')	0.7485423719665234	1.0590660572052002
selectFwe(0.04035650097875411);varianceThreshold();minMaxScaler();minMaxScaler();decisionTree('gini',15,5,0.4446146534872575,19,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',30,16,0.2708667438770346,11,'None'),75,0.30897270112744163,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',7,2,0.7506466634875965,12,'balanced')	0.7600428202598601	cached
randomForest(59,'gini','log2',19,13,False,'balanced')	0.7140351697867283	1.6029303073883057
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.9774832725524902
varianceThreshold();decisionTree('entropy',13,16,0.5235160061054568,4,'balanced')	0.7164752249213113	cached
selectFwe(0.04815687022629096);pca(0.8822175921259557,True);adaBoost(decisionTree('gini',12,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139769066460362	cached
adaBoost(decisionTree('gini',21,3,0.27560075015230434,19,'balanced'),59,1.2383957632664893,'SAMME')	0.6633446181310416	1.1225244998931885
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
selectPercentile(32.984646056235846);varianceThreshold();logisticRegression('None','liblinear',1000,4.223864452873283,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
adaBoost(decisionTree('entropy',20,11,0.563784128223613,17,'balanced'),87,0.11983386410789922,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.24402311810597133);varianceThreshold();mlpClassifier((32, 13),0.03512959581502032,0.7618785247891477,'sgd','tanh')	0.6530849478390461	cached
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();nystroem('rbf',1.6194700589299438,66,2,-0.24402311810597133);randomForest(60,'gini','log2',12,13,False,'balanced')	0.6986862556361517	4.315741539001465
multinomialNB(1.0272494115875046,False)	0.6035953125609094	0.7358152866363525
minMaxScaler();minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',27,17,0.7983253537989112,16,'None'),10,0.3083643788755388,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
randomForest(34,'gini','sqrt',15,14,False,'balanced_subsample')	0.7133314941811824	0.9792623519897461
minMaxScaler();fastICA(85,'deflation','arbitrary-variance','exp');decisionTree('entropy',11,9,0.9790021047343852,11,'balanced')	0.6937918319654639	cached
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',7,2,0.7506466634875965,12,'balanced')	0.7600428202598601	0.7002143859863281
randomForest(59,'gini','log2',19,13,False,'balanced')	0.7140351697867283	1.5092520713806152
varianceThreshold();decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.7493681907653809
adaBoost(decisionTree('entropy',26,18,0.8678045458688727,9,'balanced'),83,1.7891920891271957,'SAMME')	0.6451904771900153	3.9325435161590576
minMaxScaler();maxAbsScaler();nystroem('cosine',6.09477150366148,37,4,-0.020015792530175602);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.24402311810597133);fastICA(29,'deflation','unit-variance','cube');mlpClassifier((32, 13),0.03512959581502032,0.7618785247891477,'sgd','tanh')	0.624694415874282	5.523980617523193
varianceThreshold();fastICA(94,'deflation','arbitrary-variance','cube');maxAbsScaler();adaBoost(decisionTree('gini',20,6,0.8610811434177517,7,'None'),67,0.869438310100223,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
fastICA(99,'parallel','unit-variance','exp');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.6420795413314463	1.742248773574829
robustScaler(False,True);fastICA(24,'parallel','unit-variance','exp');maxAbsScaler();logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.7107776914842256	2.5307655334472656
adaBoost(decisionTree('gini',20,11,0.6809215181270325,17,'balanced'),12,0.385035932223208,'SAMME')	0.7057032907829491	1.7531898021697998
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	0.9122006893157959
adaBoost(decisionTree('gini',20,9,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.6542819360274913	1.87223482131958
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7297084943840889	1.2961137294769287
robustScaler(False,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.8318393230438232
minMaxScaler();varianceThreshold();robustScaler(False,False);adaBoost(decisionTree('entropy',25,9,0.48185292277351055,12,'balanced'),87,1.1245734854313676,'SAMME')	0.6449568348991115	1.5057051181793213
maxAbsScaler();nystroem('rbf',0.7765837544741214,60,2,-0.24402311810597133);randomForest(60,'gini','log2',2,9,False,'None')	0.5390909090909092	4.7490739822387695
selectPercentile(16.98614861065792);fastICA(30,'parallel','arbitrary-variance','cube');minMaxScaler();adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'None'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectPercentile(29.912272382405458);nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);minMaxScaler();randomForest(69,'gini',0.8568779831593858,19,3,False,'None')	0.49765423139932496	9.758212566375732
adaBoost(decisionTree('entropy',13,9,0.8199950709380602,11,'balanced'),24,0.15808855519552273,'SAMME')	0.7015038367312669	2.067075490951538
decisionTree('gini',20,2,0.4929389586609223,12,'balanced')	0.7381482036781044	0.9740455150604248
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',7,17,0.7506466634875965,12,'balanced'),86,0.7341493501197409,'SAMME')	0.709671011663623	0.9950563907623291
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',28,19,0.6162244122202474,18,'None')	0.5178906224230629	cached
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();robustScaler(True,False);lda(0.7711611202383513,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	cached
pca(0.8822175921259557,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6397776325114123	1.539262294769287
selectFwe(0.04815687022629096);pca(0.9077442297283207,True);adaBoost(decisionTree('gini',12,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139769066460362	1.1239595413208008
adaBoost(decisionTree('gini',27,3,0.8695043602555736,4,'balanced'),89,0.014220344054717728,'SAMME')	0.6945245042035623	cached
minMaxScaler();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,3,0.8152437422516973,3,'None'),47,0.36974861755399197,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
fastICA(99,'deflation','unit-variance','logcosh');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.7001623951358423	8.203383207321167
maxAbsScaler();fastICA(5,'parallel','arbitrary-variance','exp');multinomialNB(6.747729014544625,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
bernoulliNB(1.109516998075651,True)	0.5	1.0338258743286133
minMaxScaler();varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);multinomialNB(1.0272494115875046,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('gini',8,11,0.544198344385477,18,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',15,11,0.4446146534872575,19,'None'),20,1.1736457754465641,'SAMME')	0.6533435186379078	0.9498934745788574
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	cached
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7272709880744976	cached
adaBoost(decisionTree('entropy',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.757032138184297	cached
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('gini',27,3,0.8695043602555736,4,'balanced'),89,0.014220344054717728,'SAMME')	0.6945245042035623	cached
robustScaler(True,True);decisionTree('entropy',7,17,0.9473187980010114,8,'None')	0.5865408246798226	0.7338011264801025
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	cached
selectFwe(0.032483507309700045);minMaxScaler();logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	0.6794226361647281	0.951608419418335
minMaxScaler();decisionTree('gini',11,10,0.9237191264027969,11,'balanced')	0.758599705535748	1.0012309551239014
fastICA(76,'deflation','arbitrary-variance','exp');maxAbsScaler();decisionTree('gini',30,19,0.6984444016873508,18,'None')	0.4995305164319249	2.6502389907836914
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',9,16,0.48039816293831483,11,'balanced'),10,1.9685123554095822,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.9937026500701904
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7328221090077475	2.010915756225586
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
adaBoost(decisionTree('gini',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.663343518637908	cached
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),89,0.014220344054717728,'SAMME')	0.727340695939172	cached
varianceThreshold();decisionTree('entropy',13,16,0.25785436368673675,4,'balanced')	0.6989407583104189	0.7317419052124023
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	1.5725173950195312
selectFwe(0.02221635985121816);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	0.7446939945220947
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
maxAbsScaler();fastICA(5,'deflation','arbitrary-variance','logcosh');bernoulliNB(1.0710614015608135,False)	0.6599141395816528	2.5983753204345703
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);multinomialNB(6.747729014544625,True)	0.5	0.8548974990844727
robustScaler(True,False);maxAbsScaler();varianceThreshold();varianceThreshold();gaussianNB(0.008728728715370056)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);randomForest(36,'gini','None',9,20,False,'balanced')	0.6803668408863514	cached
adaBoost(decisionTree('entropy',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.757032138184297	cached
multinomialNB(1.0272494115875046,False)	0.6035953125609094	0.8404245376586914
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.8053538799285889
minMaxScaler();minMaxScaler();pca(0.9951128281660726,False);maxAbsScaler();multinomialNB(1.0272494115875046,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('entropy',30,19,0.8897737202554157,18,'balanced')	0.7300787436991547	0.8670997619628906
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.2940189838409424
randomForest(59,'gini','log2',19,12,False,'balanced')	0.7052072294672156	1.8228874206542969
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('entropy',11,9,0.020416625556882395,12,'None'),75,0.30897270112744163,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();adaBoost(decisionTree('entropy',25,9,0.48185292277351055,14,'balanced'),87,1.1245734854313676,'SAMME')	0.6447215433685071	1.817748785018921
adaBoost(decisionTree('gini',20,11,0.9560341732223009,19,'None'),87,0.05828850340761941,'SAMME')	0.6722007854379131	3.821782112121582
adaBoost(decisionTree('gini',10,4,0.029403831351792364,8,'None'),88,1.2575542280683722,'SAMME')	0.6354257687206198	1.8179903030395508
robustScaler(False,True);randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	cached
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
robustScaler(False,False);selectFwe(0.04397086739847418);adaBoost(decisionTree('gini',22,6,0.29231330604779027,13,'balanced'),20,1.6894095667257263,'SAMME')	0.6893636533558031	0.8399388790130615
adaBoost(decisionTree('gini',28,18,0.14409588855205013,15,'balanced'),49,0.01129914122279217,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7329093188040312	0.8687374591827393
fastICA(92,'parallel','unit-variance','exp');maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	1.4725279808044434
varianceThreshold();minMaxScaler();selectFwe(0.04577104492477377);decisionTree('entropy',30,2,0.2977635008796695,3,'balanced')	0.7165596160170162	0.6517953872680664
lda(0.0548034579759894,96,0.04919101058754719)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);decisionTree('gini',15,19,0.4446146534872575,19,'balanced')	0.7038769727155781	0.7495615482330322
adaBoost(decisionTree('gini',9,11,0.48039816293831483,18,'balanced'),12,0.385035932223208,'SAMME')	0.7200981347598757	1.208531379699707
maxAbsScaler();varianceThreshold();maxAbsScaler();logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();adaBoost(decisionTree('entropy',13,9,0.8199950709380602,11,'balanced'),24,1.4119428789874826,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
gaussianNB(0.001756513527474122)	0.4995316159250585	0.5646038055419922
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
adaBoost(decisionTree('gini',29,19,0.8996976828582575,7,'balanced'),29,0.8816153187216402,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,True,'balanced_subsample')	0.6454768351789826	1.4806089401245117
selectFwe(0.020369263642046772);randomForest(27,'entropy','None',7,17,False,'balanced')	0.6844428718360837	1.1446399688720703
adaBoost(decisionTree('gini',28,7,0.4664601662314072,20,'balanced'),40,0.5571448000382866,'SAMME')	0.6714982093255009	cached
fastICA(31,'parallel','unit-variance','exp');varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
minMaxScaler();maxAbsScaler();selectFwe(0.02204153848646777);fastICA(85,'parallel','arbitrary-variance','exp');decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.693815501054014	0.6761338710784912
robustScaler(True,True);decisionTree('gini',22,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6152253150939941
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',8,5,0.07346549414729564,4,'balanced'),21,0.21103672036766055,'SAMME')	0.7273833462773661	0.8381757736206055
adaBoost(decisionTree('entropy',20,3,0.563784128223613,17,'balanced'),87,0.11983386410789922,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
multinomialNB(99.20799352540618,True)	0.5	1.0855646133422852
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	1.6052987575531006
selectFwe(0.04815687022629096);pca(0.8822175921259557,True);adaBoost(decisionTree('gini',12,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139769066460362	cached
minMaxScaler();decisionTree('entropy',13,16,0.5235160061054568,4,'balanced')	0.7073843158304022	cached
selectPercentile(11.542216396767401);varianceThreshold();adaBoost(decisionTree('entropy',20,11,0.563784128223613,17,'balanced'),87,0.11983386410789922,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(False,False);varianceThreshold();minMaxScaler();selectPercentile(32.984646056235846);logisticRegression('None','liblinear',1000,13.597285094163203,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
minMaxScaler();nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);adaBoost(decisionTree('entropy',5,19,0.27534972781505307,18,'balanced'),20,1.1736457754465641,'SAMME')	0.6947082894785505	3.4125897884368896
robustScaler(True,True);selectFwe(0.04397086739847418);lda(0.978772744567373,224,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
multinomialNB(99.20799352540618,True)	0.5	0.5706140995025635
adaBoost(decisionTree('gini',11,14,0.4587657890024238,10,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);randomForest(36,'gini','None',9,20,False,'balanced')	0.6803668408863514	6.668244123458862
selectPercentile(72.47149038581132);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.525629900930916,12,'balanced'),86,0.7341493501197409,'SAMME')	0.6903815041265977	1.5377380847930908
minMaxScaler();fastICA(92,'parallel','unit-variance','cube');varianceThreshold();varianceThreshold();gaussianNB(0.007989213077908326)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7329093188040312	0.771268367767334
minMaxScaler();nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);decisionTree('gini',21,15,0.2708667438770346,9,'None')	0.6151356724549982	1.8386297225952148
varianceThreshold();maxAbsScaler();varianceThreshold();varianceThreshold();decisionTree('gini',10,13,0.3756221919212819,11,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
pca(0.6195615558431176,True);fastICA(32,'parallel','unit-variance','cube');lda(0.9995780119649627,186,0.04089001191578357)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.0210468769073486
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);randomForest(36,'gini','None',9,20,False,'balanced')	0.6803668408863514	6.992796421051025
minMaxScaler();varianceThreshold();minMaxScaler();robustScaler(True,False);logisticRegression('l2','newton-cg',1000,2.319202423642008,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();nystroem('rbf',1.6194700589299438,66,2,-0.24402311810597133);randomForest(60,'gini',0.9775012040297805,12,13,False,'balanced')	0.6796781583689919	19.964628219604492
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	1.9003934860229492
fastICA(99,'parallel','unit-variance','exp');minMaxScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
minMaxScaler();robustScaler(False,False);fastICA(99,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6870466015167007	cached
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.6675496101379395
maxAbsScaler();nystroem('rbf',1.6194700589299438,66,2,-0.24402311810597133);randomForest(60,'gini','log2',12,13,False,'balanced')	0.6986862556361517	3.6700613498687744
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	2.9249215126037598
pca(0.8822175921259557,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
selectFwe(0.04815687022629096);pca(0.9077442297283207,True);adaBoost(decisionTree('gini',12,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139769066460362	1.4297893047332764
varianceThreshold();adaBoost(decisionTree('entropy',30,17,0.8897737202554157,1,'balanced'),48,0.014220344054717728,'SAMME')	0.6977567641317354	3.0399081707000732
decisionTree('entropy',23,19,0.02071879182883507,18,'balanced')	0.6919914819268318	0.6379873752593994
minMaxScaler();nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);lda(0.9966398604857563,242,0.07032606608431344)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();selectFwe(0.013492867584314302);maxAbsScaler();lda(0.978772744567373,224,0.0918523222330089)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.8001441955566406
minMaxScaler();robustScaler(True,False);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
adaBoost(decisionTree('entropy',19,13,0.8006836140268903,5,'balanced'),89,0.014220344054717728,'SAMME')	0.6939985666607694	2.9716603755950928
maxAbsScaler();fastICA(5,'deflation','arbitrary-variance','logcosh');multinomialNB(6.747729014544625,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	3.6634464263916016
multinomialNB(1.0272494115875046,False)	0.6035953125609094	0.5755152702331543
pca(0.8260475546611258,False);selectFwe(0.022715839379667216);minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
robustScaler(False,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);logisticRegression('None','liblinear',1000,13.597285094163203,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7398669719696045
robustScaler(False,True);maxAbsScaler();varianceThreshold();varianceThreshold();gaussianNB(0.0034413614195051615)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
minMaxScaler();adaBoost(decisionTree('gini',30,9,0.38812029229918077,14,'None'),10,0.10300848230443381,'SAMME')	0.5886225250159677	cached
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',10,16,0.3756221919212819,9,'None'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.757032138184297	cached
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.24402311810597133);varianceThreshold();mlpClassifier((32, 13),0.03512959581502032,0.7618785247891477,'sgd','tanh')	0.6530849478390461	2.102821111679077
maxAbsScaler();decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.7328417301177979
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(False,True);fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();adaBoost(decisionTree('gini',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.5865142469321643	5.48270583152771
extraTreesClassifier(98,'entropy','sqrt',13,17,True,'balanced')	0.7226966268550198	1.1342494487762451
pca(0.8987393636671516,True);fastICA(38,'parallel','unit-variance','exp');fastICA(76,'parallel','unit-variance','logcosh');gaussianNB(0.008914735855235346)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
fastICA(24,'parallel','unit-variance','exp');adaBoost(decisionTree('entropy',23,20,0.7017409572112673,14,'None'),61,1.7885420004417993,'SAMME')	0.5290909090909091	cached
adaBoost(decisionTree('gini',15,9,0.07696901655055277,6,'balanced'),12,0.385035932223208,'SAMME')	0.6989769016483401	1.2669177055358887
adaBoost(decisionTree('gini',6,11,0.4446146534872575,19,'balanced'),89,0.8482211668353168,'SAMME')	0.6717307521232712	2.663053274154663
minMaxScaler();extraTreesClassifier(14,'gini','sqrt',11,14,True,'balanced_subsample')	0.7012135205670186	0.874424934387207
minMaxScaler();decisionTree('gini',30,10,0.38812029229918077,11,'None')	0.5851345729618646	0.920741081237793
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',30,16,0.2708667438770346,11,'balanced'),87,0.05828850340761941,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',27,8,0.47423484025733087,12,'None'),34,1.6602240138165683,'SAMME')	0.6358947025421281	1.346668004989624
fastICA(41,'parallel','unit-variance','exp');lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();adaBoost(decisionTree('gini',8,20,0.7163664847100081,17,'balanced'),47,0.046468484648871974,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(False,False);fastICA(85,'parallel','arbitrary-variance','exp');minMaxScaler();lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'None'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6915326118469238
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',20,11,0.9434955147782088,12,'balanced'),12,0.385035932223208,'SAMME')	0.7035844375742781	1.5598819255828857
selectFwe(0.032483507309700045);minMaxScaler();adaBoost(decisionTree('entropy',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7184315030770815	3.807910203933716
logisticRegression('None','sag',1000,13.565158547642437,'balanced')	0.558279553126009	3.612921953201294
adaBoost(decisionTree('gini',9,11,0.48039816293831483,18,'balanced'),34,0.10300848230443381,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',10,16,0.3756221919212819,9,'None'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();robustScaler(False,False);selectPercentile(32.984646056235846);randomForest(36,'gini','None',9,20,False,'balanced')	0.7207446267270787	1.372004747390747
fastICA(99,'parallel','unit-variance','exp');varianceThreshold();adaBoost(decisionTree('gini',7,17,0.7506466634875965,12,'balanced'),86,0.7341493501197409,'SAMME')	0.6056328332638653	5.8376853466033936
pca(0.6195615558431176,True);fastICA(32,'parallel','unit-variance','cube');lda(0.9995780119649627,186,0.04089001191578357)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
maxAbsScaler();adaBoost(decisionTree('entropy',16,18,0.1578397300422072,4,'balanced'),13,0.2893235900321039,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectFwe(0.020369263642046772);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	cached
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7328221090077475	cached
multinomialNB(99.20799352540618,True)	0.5	1.0720956325531006
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	1.1270184516906738
randomForest(34,'gini','sqrt',15,14,False,'balanced_subsample')	0.7133314941811824	1.7599599361419678
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectPercentile(16.98614861065792);fastICA(30,'parallel','arbitrary-variance','cube');minMaxScaler();adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'None'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
extraTreesClassifier(34,'entropy','log2',18,18,True,'balanced_subsample')	0.7207965128075957	0.8962092399597168
varianceThreshold();decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.7038571834564209
selectFwe(0.020369263642046772);randomForest(27,'entropy','None',7,17,False,'balanced')	0.6844428718360837	1.1975767612457275
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();adaBoost(decisionTree('gini',8,20,0.7163664847100081,17,'balanced'),47,0.046468484648871974,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('gini',10,4,0.029403831351792364,8,'None'),88,1.2575542280683722,'SAMME')	0.6354257687206198	1.5572307109832764
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.6413192749023438
maxAbsScaler();fastICA(5,'deflation','arbitrary-variance','logcosh');adaBoost(decisionTree('gini',6,11,0.8043823231183523,19,'balanced'),89,0.8482211668353168,'SAMME')	0.663346267370742	3.3522796630859375
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.8865187168121338
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('gini',8,11,0.544198344385477,18,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
pca(0.8822175921259557,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
extraTreesClassifier(98,'entropy','sqrt',13,17,True,'balanced')	0.7226966268550198	1.1996493339538574
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('entropy',7,19,0.9473187980010114,14,'None'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('entropy',11,17,0.9791673542259465,8,'None')	0.5937565482312653	0.7145891189575195
decisionTree('entropy',26,19,0.8678045458688727,9,'balanced')	0.7336434203832033	0.9119210243225098
adaBoost(decisionTree('entropy',30,18,0.8897737202554157,18,'balanced'),83,1.7891920891271957,'SAMME')	0.6456599607580905	3.187746047973633
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	cached
selectPercentile(72.47149038581132);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.525629900930916,12,'balanced'),86,0.7341493501197409,'SAMME')	0.6903815041265977	cached
adaBoost(decisionTree('gini',13,2,0.442062528162675,1,'balanced'),87,0.05828850340761941,'SAMME')	0.6626425917651964	1.039008617401123
fastICA(41,'parallel','unit-variance','exp');lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();decisionTree('entropy',13,16,0.5235160061054568,8,'balanced')	0.706420000379825	cached
varianceThreshold();minMaxScaler();selectFwe(0.043032359607835365);decisionTree('entropy',30,2,0.2977635008796695,3,'balanced')	0.7165596160170162	0.6170206069946289
fastICA(48,'parallel','unit-variance','logcosh');minMaxScaler();varianceThreshold();minMaxScaler();bernoulliNB(9.978001970951382,True)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,False);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.6570804119110107
varianceThreshold();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
robustScaler(True,True);decisionTree('entropy',7,17,0.9473187980010114,8,'None')	0.5865408246798226	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.9395263195037842
maxAbsScaler();nystroem('rbf',1.6194700589299438,66,2,-0.24402311810597133);randomForest(60,'gini','log2',12,13,False,'balanced')	0.6986862556361517	3.7047195434570312
minMaxScaler();nystroem('poly',1.9976681089526163,64,2,0.9879713513523094);decisionTree('gini',21,15,0.2708667438770346,9,'None')	0.5976857568660847	2.049466133117676
minMaxScaler();decisionTree('gini',11,10,0.9237191264027969,11,'balanced')	0.758599705535748	cached
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.6368472576141357
robustScaler(False,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6139330863952637
maxAbsScaler();nystroem('cosine',5.242048195952658,60,3,-0.6375906663893378);randomForest(60,'gini','log2',2,9,False,'None')	0.5390909090909092	3.4924330711364746
nystroem('rbf',0.7765837544741214,39,2,-0.24402311810597133);decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.500936218403316	1.3454813957214355
extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7329093188040312	0.9227371215820312
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.034663438796997
robustScaler(True,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	1.1632421016693115
adaBoost(decisionTree('gini',21,3,0.27560075015230434,19,'balanced'),59,1.2383957632664893,'SAMME')	0.6633446181310416	cached
minMaxScaler();fastICA(92,'parallel','unit-variance','cube');pca(0.8822175921259557,True);varianceThreshold();gaussianNB(0.007989213077908326)	0.4995305164319249	2.5756123065948486
selectFwe(0.04815687022629096);varianceThreshold();adaBoost(decisionTree('gini',12,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139769066460362	1.169964075088501
fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
minMaxScaler();robustScaler(False,False);fastICA(99,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6870466015167007	cached
fastICA(31,'parallel','unit-variance','exp');varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();varianceThreshold();adaBoost(decisionTree('entropy',16,12,0.17350722484758752,2,'None'),88,1.9886132872280609,'SAMME')	0.626803793451219	1.9461555480957031
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7297084943840889	1.591338872909546
randomForest(34,'gini','sqrt',15,14,False,'balanced_subsample')	0.7133314941811824	1.0189721584320068
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.4843995571136475
adaBoost(decisionTree('gini',20,11,0.6809215181270325,17,'balanced'),12,0.385035932223208,'SAMME')	0.7057032907829491	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
fastICA(99,'deflation','unit-variance','logcosh');maxAbsScaler();decisionTree('gini',30,19,0.48039816293831483,18,'balanced')	0.6945621868318705	7.634728908538818
varianceThreshold();decisionTree('gini',9,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.6528768539428711
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	cached
multinomialNB(1.0272494115875046,False)	0.6035953125609094	cached
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),48,0.014220344054717728,'SAMME')	0.7385435814089704	1.4050350189208984
varianceThreshold();adaBoost(decisionTree('entropy',30,13,0.8897737202554157,1,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.746995210647583
decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7109713554382324
decisionTree('gini',9,2,0.48039816293831483,18,'balanced')	0.753438464867696	0.723515510559082
fastICA(99,'parallel','unit-variance','exp');minMaxScaler();decisionTree('gini',7,19,0.7506466634875965,12,'balanced')	0.6601153468251136	1.5215394496917725
adaBoost(decisionTree('gini',9,11,0.48039816293831483,18,'balanced'),12,0.385035932223208,'SAMME')	0.7200981347598757	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.3646655082702637
selectPercentile(85.80943174508698);maxAbsScaler();kNN(28,'distance',2)	0.6168032437046522	0.6321179866790771
robustScaler(False,True);robustScaler(False,False);randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',29,7,0.5670448996741438,3,'None'),12,0.385035932223208,'SAMME')	0.6444868015844696	0.8254945278167725
minMaxScaler();robustScaler(True,False);bernoulliNB(1.0710614015608135,False)	0.7403206521793454	0.6871647834777832
maxAbsScaler();fastICA(5,'deflation','arbitrary-variance','logcosh');lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	cached
robustScaler(True,True);decisionTree('entropy',24,8,0.9434955147782088,12,'balanced')	0.7448520831896495	cached
robustScaler(False,True);fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.7107776914842256	cached
selectFwe(0.04815687022629096);pca(0.8822175921259557,True);adaBoost(decisionTree('gini',12,10,0.4929389586609223,4,'balanced'),86,0.7341493501197409,'SAMME')	0.7139769066460362	cached
robustScaler(True,True);decisionTree('gini',22,8,0.9790021047343852,11,'balanced')	0.758599705535748	0.7150943279266357
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('entropy',11,19,0.9791673542259465,14,'balanced'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
fastICA(99,'parallel','unit-variance','exp');minMaxScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	cached
selectPercentile(11.542216396767401);varianceThreshold();adaBoost(decisionTree('entropy',20,11,0.563784128223613,17,'balanced'),87,0.385035932223208,'SAMME')	0.6844428718360837	2.4131546020507812
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.11983386410789922,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
nystroem('sigmoid',2.1093484457450025,46,2,-0.5414574159776551);robustScaler(True,True);maxAbsScaler();lda(0.45564017672287893,33,0.02716023391443792)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	cached
minMaxScaler();fastICA(32,'parallel','unit-variance','exp');lda(0.9995780119649627,186,0.04089001191578357)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
pca(0.8987393636671516,True);fastICA(38,'parallel','unit-variance','cube');fastICA(76,'parallel','unit-variance','logcosh');gaussianNB(0.008914735855235346)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
lda(0.0548034579759894,96,0.04919101058754719)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();fastICA(85,'deflation','arbitrary-variance','exp');decisionTree('entropy',11,9,0.9790021047343852,11,'balanced')	0.6937918319654639	3.892534017562866
extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7329093188040312	1.0764989852905273
randomForest(34,'entropy','sqrt',15,12,False,'balanced_subsample')	0.714033520547028	1.5430843830108643
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),89,0.014220344054717728,'SAMME')	0.727340695939172	cached
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',10,16,0.3756221919212819,9,'None'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',20,2,0.4929389586609223,12,'balanced')	0.7381482036781044	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(True,True);decisionTree('gini',20,8,0.4929389586609223,12,'balanced')	0.7381482036781044	1.2976787090301514
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',24,17,0.9434955147782088,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7036544752868927	2.606090784072876
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('gini',8,11,0.544198344385477,18,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectPercentile(84.17174421205603);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.525629900930916,12,'balanced'),86,0.7341493501197409,'SAMME')	0.6524349774753838	2.103290319442749
selectPercentile(54.56639475786471);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7065474616201932	2.4133036136627197
maxAbsScaler();decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.319838523864746
multinomialNB(9.858593519633898,True)	0.5434160851847298	1.1459970474243164
maxAbsScaler();decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	1.3567466735839844
robustScaler(True,True);nystroem('sigmoid',2.7966135204792724,30,3,-0.24402311810597133);varianceThreshold();mlpClassifier((32, 13),0.03512959581502032,0.7618785247891477,'sgd','tanh')	0.6530849478390461	3.0357069969177246
pca(0.8822175921259557,False);robustScaler(False,True);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
minMaxScaler();robustScaler(False,False);lda(0.8256815569087916,87,0.02011287275766299)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
selectFwe(0.02221635985121816);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	1.2164876461029053
extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7329093188040312	1.1483328342437744
selectPercentile(45.16207771924752);randomForest(36,'gini','None',9,20,False,'balanced')	0.7156769529247017	1.603527545928955
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.214751958847046
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7329093188040312	0.7671732902526855
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.6973228241780538	1.261167049407959
robustScaler(False,True);robustScaler(False,False);logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.032483507309700045);minMaxScaler();adaBoost(decisionTree('gini',13,14,0.1850033390402418,15,'balanced'),12,0.385035932223208,'SAMME')	0.6872548255254328	0.9920251369476318
maxAbsScaler();minMaxScaler();selectPercentile(11.542216396767401);logisticRegression('None','liblinear',1000,13.597285094163203,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
randomForest(74,'entropy','None',3,16,True,'balanced')	0.6781382682583328	2.0571773052215576
decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	1.3413853645324707
pca(0.8260475546611258,False);selectFwe(0.022715839379667216);minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by MinMaxScaler.)
varianceThreshold();decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.918694257736206
robustScaler(True,True);decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.7159688472747803
robustScaler(True,False);decisionTree('gini',8,8,0.07346549414729564,13,'balanced')	0.653958535115312	0.6382198333740234
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',4,7,0.5344713694535649,8,'balanced'),18,1.5921257044459192,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('entropy',6,9,0.07696901655055277,10,'balanced'),12,0.385035932223208,'SAMME')	0.7154370235321517	0.790015697479248
adaBoost(decisionTree('gini',15,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7271293933496658	1.4958467483520508
robustScaler(False,True);fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.7107776914842256	1.8306324481964111
randomForest(72,'gini',0.6753269355229954,20,7,True,'balanced')	0.674497376709337	1.4037091732025146
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.6568932422153387	0.7933552265167236
randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.3716411590576172
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7297084943840889	cached
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	cached
minMaxScaler();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.638308048248291
multinomialNB(1.0272494115875046,False)	0.6035953125609094	0.6284410953521729
minMaxScaler();maxAbsScaler();decisionTree('entropy',20,13,0.3756221919212819,11,'None')	0.5365391754401221	0.871342658996582
adaBoost(decisionTree('gini',10,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6726686197662877	3.904479503631592
randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.286073923110962
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);multinomialNB(99.20799352540618,True)	0.5	0.5646870136260986
adaBoost(decisionTree('gini',27,3,0.8695043602555736,4,'balanced'),89,1.1736457754465641,'SAMME')	0.6542819360274913	3.222996711730957
minMaxScaler();nystroem('poly',0.1936583702708131,64,2,0.9879713513523094);adaBoost(decisionTree('entropy',5,19,0.27534972781505307,18,'balanced'),20,0.014220344054717728,'SAMME')	0.717106553878662	3.729454278945923
minMaxScaler();fastICA(9,'deflation','arbitrary-variance','exp');decisionTree('entropy',11,7,0.9790021047343852,11,'balanced')	0.6937918319654639	1.9724922180175781
selectFwe(0.02221635985121816);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	0.7992188930511475
multinomialNB(59.89680932358452,False)	0.482959175819947	0.6070575714111328
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	1.1281533241271973
minMaxScaler();fastICA(92,'parallel','unit-variance','cube');varianceThreshold();varianceThreshold();gaussianNB(0.007989213077908326)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.8834097385406494
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('entropy',13,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7168664245782695	2.1864852905273438
varianceThreshold();decisionTree('entropy',6,16,0.5235160061054568,4,'balanced')	0.6718250186663948	0.7777924537658691
maxAbsScaler();maxAbsScaler();fastICA(63,'parallel','arbitrary-variance','exp');decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
fastICA(92,'parallel','unit-variance','cube');robustScaler(False,True);varianceThreshold();randomForest(68,'entropy','log2',5,1,False,'balanced_subsample')	0.6547231926082075	2.3044815063476562
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.5866703987121582
robustScaler(False,True);fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();adaBoost(decisionTree('entropy',13,3,0.9560341732223009,6,'balanced'),87,0.05828850340761941,'SAMME')	0.6519090399325911	6.970288991928101
minMaxScaler();decisionTree('gini',20,16,0.5235160061054568,8,'None')	0.607448266349213	1.0214505195617676
pca(0.8987393636671516,True);fastICA(38,'parallel','unit-variance','exp');fastICA(76,'parallel','unit-variance','logcosh');gaussianNB(0.008914735855235346)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
multinomialNB(9.858593519633898,True)	0.5434160851847298	0.886622428894043
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),12,0.385035932223208,'SAMME')	0.697194813191119	0.8293125629425049
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),89,0.014220344054717728,'SAMME')	0.736540055034629	4.75641942024231
fastICA(41,'parallel','unit-variance','exp');lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
randomForest(34,'gini','sqrt',15,14,False,'balanced_subsample')	0.7133314941811824	1.5196068286895752
varianceThreshold();fastICA(94,'deflation','arbitrary-variance','cube');maxAbsScaler();adaBoost(decisionTree('gini',20,6,0.8610811434177517,7,'balanced'),67,0.869438310100223,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);decisionTree('gini',15,19,0.4446146534872575,19,'None')	0.5	1.0728230476379395
decisionTree('entropy',30,2,0.7506466634875965,12,'balanced')	0.7529198939288988	1.1184179782867432
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',7,16,0.2708667438770346,11,'balanced'),87,0.05828850340761941,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();selectPercentile(10.978557262823399);pca(0.6566797087942442,True);logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.6794226361647281	0.8783273696899414
fastICA(24,'parallel','unit-variance','exp');robustScaler(True,True);varianceThreshold();randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.6509485727079815	2.6921067237854004
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',9,16,0.48039816293831483,11,'balanced'),10,1.9685123554095822,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectPercentile(72.47149038581132);varianceThreshold();adaBoost(decisionTree('gini',22,17,0.525629900930916,12,'balanced'),86,0.7341493501197409,'SAMME')	0.6803815041265977	2.3357880115509033
robustScaler(True,True);decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.8788745403289795
adaBoost(decisionTree('entropy',20,3,0.9560341732223009,6,'None'),87,0.05828850340761941,'SAMME')	0.6729039112968922	3.563883066177368
extraTreesClassifier(98,'entropy','sqrt',13,17,True,'balanced')	0.7226966268550198	1.4338619709014893
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(False,False);selectFwe(0.04397086739847418);adaBoost(decisionTree('gini',22,6,0.29231330604779027,13,'balanced'),20,1.6894095667257263,'SAMME')	0.6893636533558031	cached
selectPercentile(72.47149038581132);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.525629900930916,12,'balanced'),86,0.7341493501197409,'SAMME')	0.6903815041265977	cached
robustScaler(False,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7529621124267578
extraTreesClassifier(98,'entropy','sqrt',13,17,True,'balanced')	0.7226966268550198	1.0029282569885254
fastICA(99,'parallel','unit-variance','exp');minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.6651073954906789	2.448314905166626
multinomialNB(92.88575846386712,True)	0.5	0.5579965114593506
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),20,0.014220344054717728,'SAMME')	0.727340695939172	0.9267606735229492
minMaxScaler();nystroem('sigmoid',0.1936583702708131,15,2,0.9879713513523094);adaBoost(decisionTree('entropy',10,2,0.9459101723717952,5,'None'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();adaBoost(decisionTree('entropy',30,13,0.8897737202554157,1,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.7455754280090332
fastICA(92,'parallel','unit-variance','cube');robustScaler(False,True);varianceThreshold();randomForest(68,'entropy','log2',5,1,False,'balanced_subsample')	0.6547231926082075	2.4060018062591553
robustScaler(True,True);robustScaler(False,False);randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();robustScaler(False,False);bernoulliNB(1.0710614015608135,False)	0.7201510003888207	0.6031339168548584
fastICA(92,'parallel','arbitrary-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(45,'entropy','sqrt',8,20,True,'balanced_subsample')	0.7055227140288327	1.613621473312378
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7975709438323975
nystroem('cosine',5.242048195952658,39,3,-0.6375906663893378);decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.6568932422153387	cached
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
selectPercentile(54.56639475786471);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),12,0.385035932223208,'SAMME')	0.7292662282687681	0.851043701171875
adaBoost(decisionTree('gini',9,11,0.48039816293831483,18,'balanced'),89,0.014220344054717728,'SAMME')	0.7477121147151163	2.363922595977783
varianceThreshold();adaBoost(decisionTree('gini',21,13,0.27560075015230434,1,'balanced'),59,1.2383957632664893,'SAMME')	0.6447514195955664	1.2819807529449463
adaBoost(decisionTree('entropy',30,3,0.8897737202554157,19,'balanced'),88,0.1395136407022176,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.759169340133667
adaBoost(decisionTree('entropy',23,8,0.8161209593608243,7,'None'),12,0.385035932223208,'SAMME')	0.6803820538731644	1.0210270881652832
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	1.210658311843872
decisionTree('entropy',30,2,0.7506466634875965,12,'balanced')	0.7529198939288988	1.121464490890503
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	cached
minMaxScaler();decisionTree('entropy',13,16,0.5235160061054568,8,'balanced')	0.706420000379825	cached
selectFwe(0.020369263642046772);extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.6796093600850007	0.8967854976654053
randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.675822375884717	1.214029312133789
selectPercentile(32.984646056235846);nystroem('rbf',2.4295518047422826,84,3,-0.24053370840370736);randomForest(34,'entropy','sqrt',15,12,False,'balanced_subsample')	0.597185007711445	2.445791721343994
adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7602295741663093	1.3366215229034424
minMaxScaler();maxAbsScaler();nystroem('rbf',5.690972664269532,34,5,0.12655410685540724);lda(0.9904901169002476,229,0.015913671607322256)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();nystroem('poly',1.0125434653008512,50,3,0.03369487270428628);selectFwe(0.026155491369880518);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
varianceThreshold();fastICA(94,'deflation','arbitrary-variance','cube');maxAbsScaler();adaBoost(decisionTree('gini',20,6,0.8610811434177517,7,'balanced'),67,0.869438310100223,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
maxAbsScaler();fastICA(5,'deflation','arbitrary-variance','logcosh');adaBoost(decisionTree('gini',6,11,0.8043823231183523,19,'balanced'),89,0.8482211668353168,'SAMME')	0.663346267370742	cached
maxAbsScaler();maxAbsScaler();fastICA(36,'parallel','arbitrary-variance','exp');decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.493528127670288
multinomialNB(1.0272494115875046,False)	0.6035953125609094	0.5429115295410156
selectFwe(0.032483507309700045);minMaxScaler();adaBoost(decisionTree('entropy',12,12,0.43248516846015217,4,'None'),12,0.385035932223208,'SAMME')	0.5	0.7880852222442627
decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
varianceThreshold();varianceThreshold();minMaxScaler();adaBoost(decisionTree('gini',15,17,0.4446146534872575,19,'balanced'),86,0.7341493501197409,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',22,13,0.525629900930916,12,'balanced')	0.7381482036781044	0.6148192882537842
robustScaler(False,True);robustScaler(False,False);logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
fastICA(41,'parallel','unit-variance','exp');lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,True);decisionTree('gini',26,4,0.4486274262356602,15,'None')	0.5183606557377048	0.965688943862915
pca(0.571094785423209,True);fastICA(8,'parallel','arbitrary-variance','cube');varianceThreshold();decisionTree('entropy',11,7,0.9790021047343852,11,'balanced')	0.6458479640885553	0.8055331707000732
minMaxScaler();decisionTree('entropy',13,16,0.5235160061054568,8,'balanced')	0.706420000379825	cached
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	cached
varianceThreshold();decisionTree('entropy',20,8,0.9560341732223009,19,'None')	0.585397541733261	0.6080887317657471
adaBoost(decisionTree('gini',30,3,0.4822286022101796,6,'balanced'),87,0.05828850340761941,'SAMME')	0.7080667112461155	3.0137555599212646
minMaxScaler();robustScaler(False,False);fastICA(99,'parallel','unit-variance','exp');adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.6637660238629992	2.6333212852478027
maxAbsScaler();varianceThreshold();fastICA(25,'parallel','arbitrary-variance','cube');adaBoost(decisionTree('entropy',30,13,0.3047094759839556,7,'balanced'),73,1.1496914617586025,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
fastICA(99,'deflation','unit-variance','logcosh');maxAbsScaler();decisionTree('gini',30,19,0.48039816293831483,18,'balanced')	0.6945621868318705	cached
robustScaler(False,True);fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.7107776914842256	cached
maxAbsScaler();minMaxScaler();selectPercentile(11.542216396767401);logisticRegression('None','liblinear',1000,13.597285094163203,'balanced')	eval_error (penalty=None is not supported for the liblinear solver)	eval_error (penalty=None is not supported for the liblinear solver)
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.845707893371582
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.6973228241780538	1.244004726409912
adaBoost(decisionTree('entropy',11,5,0.9131840663558227,18,'None'),12,0.385035932223208,'SAMME')	0.6522002356913463	0.9060163497924805
selectPercentile(85.80943174508698);robustScaler(True,True);kNN(28,'distance',2)	0.6168032437046522	0.7451026439666748
maxAbsScaler();decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.9255697727203369
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	1.794555902481079
decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	1.0390098094940186
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
selectPercentile(94.44140483067503);robustScaler(True,False);minMaxScaler();gaussianNB(0.008327729957827237)	0.49929742388758785	0.855510950088501
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
minMaxScaler();nystroem('poly',2.0453135252885986,47,5,0.936973820857651);varianceThreshold();selectFwe(0.0023243305934855397);bernoulliNB(9.814616391364615,True)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)
pca(0.8260475546611258,False);minMaxScaler();minMaxScaler();maxAbsScaler();kNN(28,'distance',2)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.003648495406001819);decisionTree('entropy',13,16,0.5235160061054568,8,'balanced')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',13,2,0.442062528162675,1,'balanced'),87,0.05828850340761941,'SAMME')	0.6626425917651964	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
selectFwe(0.032483507309700045);minMaxScaler();adaBoost(decisionTree('entropy',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7184315030770815	cached
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.6973228241780538	cached
nystroem('sigmoid',2.1093484457450025,46,2,-0.5414574159776551);robustScaler(True,True);maxAbsScaler();lda(0.45564017672287893,33,0.02716023391443792)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
pca(0.8987393636671516,True);fastICA(38,'parallel','unit-variance','exp');robustScaler(True,True);gaussianNB(0.008914735855235346)	0.4995316159250585	0.791175127029419
fastICA(76,'parallel','unit-variance','logcosh');decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.654929197639888	1.768735647201538
adaBoost(decisionTree('entropy',11,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.7354679992523446	1.1818578243255615
minMaxScaler();fastICA(85,'deflation','arbitrary-variance','exp');decisionTree('gini',15,9,0.4446146534872575,11,'balanced')	0.7333562027905135	2.544905424118042
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',24,17,0.9434955147782088,12,'balanced'),86,0.05828850340761941,'SAMME')	0.7240747815257167	1.8898961544036865
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',7,16,0.2708667438770346,11,'balanced'),87,0.7341493501197409,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
extraTreesClassifier(34,'entropy','log2',18,18,True,'balanced_subsample')	0.7207965128075957	0.8965563774108887
robustScaler(False,True);robustScaler(False,False);randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('gini',22,19,0.9790021047343852,11,'balanced'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('entropy',7,9,0.9473187980010114,14,'None')	0.576306082895785	0.696979284286499
robustScaler(False,True);decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.7028861045837402
pca(0.9077442297283207,False);robustScaler(True,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7329093188040312	cached
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	cached
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
robustScaler(False,True);robustScaler(False,False);adaBoost(decisionTree('gini',9,11,0.544198344385477,18,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',8,19,0.48039816293831483,18,'balanced')	0.7725592501856644	0.663081169128418
minMaxScaler();selectFwe(0.04815687022629096);nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
maxAbsScaler();varianceThreshold();adaBoost(decisionTree('entropy',25,20,0.14861811396326285,15,'None'),31,0.6890823417060433,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.6973228241780538	cached
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7297084943840889	cached
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
extraTreesClassifier(10,'entropy','sqrt',17,20,True,'balanced_subsample')	0.7279133319539692	1.201263189315796
fastICA(48,'parallel','unit-variance','logcosh');minMaxScaler();varianceThreshold();selectFwe(0.032483507309700045);bernoulliNB(9.978001970951382,True)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)
minMaxScaler();minMaxScaler();adaBoost(decisionTree('gini',13,14,0.1850033390402418,15,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',25,11,0.4446146534872575,3,'balanced'),12,0.385035932223208,'SAMME')	0.7087416101177357	1.0822083950042725
extraTreesClassifier(10,'entropy','sqrt',5,11,True,'None')	0.5	0.7704172134399414
robustScaler(True,True);decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
adaBoost(decisionTree('gini',9,11,0.48039816293831483,18,'balanced'),12,0.385035932223208,'SAMME')	0.7200981347598757	cached
minMaxScaler();varianceThreshold();adaBoost(decisionTree('entropy',11,12,0.9791673542259465,2,'balanced'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('entropy',16,19,0.17350722484758752,14,'None'),88,1.9886132872280609,'SAMME')	0.6272727272727272	2.3692831993103027
selectFwe(0.020369263642046772);randomForest(27,'entropy','None',7,17,False,'balanced')	0.6844428718360837	0.7944979667663574
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6009705066680908
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7351808547973633
robustScaler(True,True);decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.6766176223754883
decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6682994365692139
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.707813024520874
adaBoost(decisionTree('gini',15,10,0.4446146534872575,19,'balanced'),54,0.385035932223208,'SAMME')	0.689443636483581	1.872981071472168
extraTreesClassifier(10,'entropy','sqrt',7,11,True,'balanced_subsample')	0.7329093188040312	0.9940385818481445
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,False);decisionTree('gini',15,8,0.4446146534872575,19,'None')	0.5	0.898878812789917
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',22,16,0.9790021047343852,20,'balanced'),87,0.05828850340761941,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',7,9,0.2708667438770346,11,'balanced')	0.6896130783708709	0.8460643291473389
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7018836916181639	1.6912479400634766
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.1473503112792969
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',20,8,0.9434955147782088,15,'balanced')	0.7622196467428515	0.8472921848297119
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('entropy',26,19,0.8678045458688727,9,'balanced')	0.7336434203832033	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(False,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(58.4748032515829,False)	0.727340695939172	0.5603525638580322
robustScaler(False,True);robustScaler(False,False);randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.7991758825836138,'SAMME')	0.6873348086532108	0.9739642143249512
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	0.797809362411499
minMaxScaler();fastICA(92,'parallel','unit-variance','cube');varianceThreshold();varianceThreshold();gaussianNB(0.007989213077908326)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();decisionTree('gini',20,19,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6190950870513916
selectPercentile(76.65979837212879);decisionTree('gini',9,8,0.48039816293831483,18,'balanced')	0.7483198945286222	0.7157266139984131
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.7903497219085693
varianceThreshold();decisionTree('gini',9,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.767512321472168
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	cached
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',24,17,0.9434955147782088,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7036544752868927	cached
minMaxScaler();robustScaler(False,False);lda(0.8256815569087916,87,0.02011287275766299)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	cached
adaBoost(decisionTree('gini',20,3,0.9434955147782088,12,'balanced'),89,1.1736457754465641,'SAMME')	0.6540482937365875	2.601238489151001
robustScaler(True,True);decisionTree('gini',27,8,0.8695043602555736,4,'balanced')	0.7128039073986893	0.687004566192627
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6301381587982178
robustScaler(False,False);decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.7620654106140137
fastICA(31,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6774499955520505	1.659867286682129
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(99,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
pca(0.9077442297283207,False);robustScaler(False,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('None','saga',1000,24.242398984719138,'balanced')	0.5908616227918928	0.9969916343688965
decisionTree('gini',9,2,0.48039816293831483,18,'balanced')	0.753438464867696	0.6910958290100098
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.11983386410789922,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	1.0694360733032227
adaBoost(decisionTree('entropy',29,7,0.5670448996741438,3,'None'),12,0.385035932223208,'SAMME')	0.6444868015844696	1.2495934963226318
minMaxScaler();decisionTree('gini',9,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.6073181629180908
varianceThreshold();robustScaler(False,False);fastICA(99,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6508142046516555	3.0595853328704834
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',10,16,0.3756221919212819,9,'None'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',7,2,0.7506466634875965,12,'balanced')	0.7600428202598601	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(True,True);decisionTree('gini',22,8,0.9790021047343852,11,'balanced')	0.758599705535748	cached
selectPercentile(85.80943174508698);maxAbsScaler();kNN(28,'distance',2)	0.6168032437046522	cached
maxAbsScaler();decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),48,0.014220344054717728,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',10,16,0.3756221919212819,9,'None'),34,0.10300848230443381,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.155440092086792
selectPercentile(19.846492214327466);adaBoost(decisionTree('entropy',20,11,0.563784128223613,17,'balanced'),87,0.385035932223208,'SAMME')	0.7085415223581928	0.9551496505737305
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',21,3,0.27560075015230434,19,'balanced'),59,1.2383957632664893,'SAMME')	0.6633446181310416	cached
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	cached
selectFwe(0.020369263642046772);randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.719372669199499	0.8274259567260742
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7020576000213623
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectPercentile(45.16207771924752);randomForest(36,'gini','None',9,20,False,'balanced')	0.7156769529247017	1.2247686386108398
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.1229746341705322
robustScaler(False,True);robustScaler(False,False);randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
extraTreesClassifier(85,'gini','sqrt',14,17,False,'balanced_subsample')	0.7630943335122508	cached
robustScaler(False,False);decisionTree('entropy',20,8,0.9434955147782088,12,'balanced')	0.7448520831896495	0.8474187850952148
minMaxScaler();robustScaler(False,False);fastICA(94,'deflation','arbitrary-variance','cube');randomForest(36,'gini','None',9,20,False,'balanced')	0.7639283490310967	2.913646697998047
varianceThreshold();selectPercentile(32.984646056235846);maxAbsScaler();adaBoost(decisionTree('gini',20,6,0.8610811434177517,7,'balanced'),67,0.869438310100223,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.6758263111114502
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);adaBoost(decisionTree('entropy',13,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7057730386291918	1.5291917324066162
varianceThreshold();decisionTree('gini',22,7,0.29231330604779027,13,'balanced')	0.752816041804728	0.6567411422729492
robustScaler(False,False);selectFwe(0.04397086739847418);adaBoost(decisionTree('entropy',6,6,0.5235160061054568,4,'balanced'),20,1.6894095667257263,'SAMME')	0.7228877487478272	0.8886184692382812
decisionTree('entropy',22,18,0.859359913172964,20,'balanced')	0.7228138428184606	0.6317298412322998
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
extraTreesClassifier(10,'entropy','sqrt',5,11,True,'balanced_subsample')	0.7329093188040312	cached
extraTreesClassifier(10,'gini','sqrt',10,20,True,'balanced_subsample')	0.7386197562923492	0.7268810272216797
minMaxScaler();decisionTree('gini',20,8,0.9434955147782088,15,'balanced')	0.7622196467428515	0.6206588745117188
randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.3002958297729492
minMaxScaler();decisionTree('gini',15,16,0.5235160061054568,8,'balanced')	0.7026701790474591	0.6110756397247314
adaBoost(decisionTree('entropy',13,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7280180836634311	1.127314805984497
adaBoost(decisionTree('gini',15,18,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.192274570465088
maxAbsScaler();maxAbsScaler();adaBoost(decisionTree('gini',7,9,0.7901410884992174,2,'balanced'),64,0.19283353373349316,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	1.0959539413452148
minMaxScaler();selectFwe(0.04438567459191961);nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
bernoulliNB(12.686464728290707,True)	0.5	0.9624660015106201
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	cached
robustScaler(True,True);decisionTree('gini',22,8,0.9790021047343852,11,'balanced')	0.758599705535748	cached
selectPercentile(19.846492214327466);adaBoost(decisionTree('entropy',20,11,0.563784128223613,17,'balanced'),87,0.385035932223208,'SAMME')	0.7085415223581928	cached
minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',4,14,0.5413120516605402,3,'balanced'),48,0.014220344054717728,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.6856484413146973
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9171113967895508
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',20,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.1827068328857422
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6576573848724365
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.6905806064605713
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.6973228241780538	cached
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	cached
minMaxScaler();selectFwe(0.04815687022629096);nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.6986699631469893	2.4277403354644775
robustScaler(False,True);fastICA(99,'parallel','unit-variance','exp');maxAbsScaler();decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.678972063878552	1.458876371383667
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',24,17,0.9434955147782088,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7036544752868927	1.1925945281982422
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.6333291530609131
maxAbsScaler();decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.6561810970306396
extraTreesClassifier(10,'entropy','sqrt',7,11,True,'balanced_subsample')	0.7329093188040312	0.7358012199401855
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.6844428718360837	0.7029879093170166
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.5780994892120361
minMaxScaler();robustScaler(False,False);fastICA(94,'deflation','arbitrary-variance','cube');adaBoost(decisionTree('entropy',11,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.7331144042596363	2.365290641784668
adaBoost(decisionTree('gini',11,19,0.33426840726164764,7,'None'),92,1.269277816349437,'SAMME')	0.6449562851525447	2.186569929122925
adaBoost(decisionTree('gini',9,17,0.4822286022101796,19,'balanced'),89,0.014220344054717728,'SAMME')	0.7370377655900631	1.8775835037231445
minMaxScaler();decisionTree('entropy',6,8,0.07696901655055277,6,'balanced')	0.6354772949670202	0.6713063716888428
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7426292896270752
extraTreesClassifier(10,'entropy','sqrt',5,11,True,'None')	0.5	0.7162580490112305
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',7,16,0.2708667438770346,11,'balanced'),87,0.7341493501197409,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);robustScaler(False,False);randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.3831193447113037
varianceThreshold();qda(0.2656577913614687)	0.49695440401974694	0.8300836086273193
robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),12,0.385035932223208,'SAMME')	0.6909862753270742	1.0450050830841064
selectPercentile(54.56639475786471);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();nystroem('poly',2.0453135252885986,47,5,0.936973820857651);varianceThreshold();selectFwe(0.0023243305934855397);bernoulliNB(9.814616391364615,True)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)
robustScaler(False,True);robustScaler(False,False);randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	cached
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	0.7253773212432861
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.6497845649719238
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',7,16,0.2708667438770346,11,'balanced'),87,0.7341493501197409,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();robustScaler(True,False);bernoulliNB(1.0710614015608135,False)	0.7403206521793454	cached
adaBoost(decisionTree('entropy',11,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.7354679992523446	cached
maxAbsScaler();fastICA(5,'deflation','arbitrary-variance','logcosh');adaBoost(decisionTree('gini',1,18,0.9872029554677365,8,'balanced'),89,0.8482211668353168,'SAMME')	0.677330310726755	2.421518087387085
fastICA(48,'parallel','unit-variance','logcosh');minMaxScaler();varianceThreshold();selectFwe(0.032483507309700045);bernoulliNB(9.978001970951382,True)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('gini',22,19,0.9790021047343852,11,'balanced'),97,0.8610357678649618,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('entropy',16,19,0.17350722484758752,14,'None'),88,1.9886132872280609,'SAMME')	0.6272727272727272	2.8325037956237793
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.8674626350402832
selectPercentile(45.16207771924752);randomForest(36,'gini','None',9,20,False,'balanced')	0.7156769529247017	0.895653247833252
adaBoost(decisionTree('entropy',6,9,0.07696901655055277,19,'balanced'),89,0.30060526288515466,'SAMME')	0.7563550403264095	0.9150164127349854
extraTreesClassifier(10,'gini','sqrt',10,20,True,'balanced_subsample')	0.7386197562923492	0.6750714778900146
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6767332553863525
minMaxScaler();decisionTree('gini',11,10,0.9237191264027969,11,'balanced')	0.758599705535748	cached
decisionTree('gini',28,19,0.7640133964035706,6,'balanced')	0.7765450027537305	0.694434404373169
pca(0.9077442297283207,False);robustScaler(True,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
robustScaler(True,False);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.8042106628417969
robustScaler(True,True);robustScaler(False,False);logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);decisionTree('gini',27,8,0.8695043602555736,4,'balanced')	0.7128039073986893	0.6474869251251221
decisionTree('gini',9,10,0.23517281233422982,18,'balanced')	0.7179576015456874	0.6878645420074463
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(False,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7187917232513428
varianceThreshold();robustScaler(True,False);fastICA(99,'parallel','unit-variance','exp');randomForest(36,'gini','None',9,20,False,'balanced')	0.6484661071246156	2.397684097290039
robustScaler(False,True);robustScaler(False,False);logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',15,8,0.9434955147782088,4,'balanced')	0.6965282504765303	0.6981780529022217
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.9045655727386475
maxAbsScaler();decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.6499862670898438
minMaxScaler();minMaxScaler();adaBoost(decisionTree('gini',13,14,0.1850033390402418,15,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',25,20,0.5194739930241269,11,'balanced'),16,0.1617690626721748,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	0.60982346534729
nystroem('sigmoid',2.1093484457450025,46,2,-0.5414574159776551);robustScaler(True,True);maxAbsScaler();lda(0.45564017672287893,33,0.02716023391443792)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(False,True);robustScaler(False,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.1174860000610352
robustScaler(False,True);robustScaler(False,False);randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();decisionTree('gini',11,10,0.9237191264027969,11,'balanced')	0.758599705535748	0.8709011077880859
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),20,0.014220344054717728,'SAMME')	0.7529098685505982	1.8714077472686768
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),12,0.385035932223208,'SAMME')	0.5721113866507539	0.7312541007995605
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',7,16,0.2708667438770346,20,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),87,0.7341493501197409,'SAMME')	0.6899136697982231	1.6435668468475342
maxAbsScaler();varianceThreshold();fastICA(25,'parallel','arbitrary-variance','cube');adaBoost(decisionTree('entropy',30,13,0.3047094759839556,7,'balanced'),73,1.1496914617586025,'SAMME')	0.6358941527955613	2.903207302093506
adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);bernoulliNB(9.814616391364615,True)	0.5	0.9672985076904297
minMaxScaler();nystroem('poly',2.0453135252885986,47,5,0.936973820857651);varianceThreshold();selectFwe(0.0023243305934855397);decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
decisionTree('gini',8,19,0.48039816293831483,18,'balanced')	0.7725592501856644	cached
multinomialNB(92.88575846386712,True)	0.5	cached
minMaxScaler();maxAbsScaler();decisionTree('gini',20,19,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('entropy',26,19,0.8678045458688727,9,'balanced')	0.7336434203832033	cached
selectFwe(0.020369263642046772);extraTreesClassifier(10,'gini','sqrt',10,20,True,'balanced_subsample')	0.6796093600850007	0.686974287033081
randomForest(27,'gini','None',15,17,True,'balanced_subsample')	0.6965255017436961	1.2279205322265625
selectPercentile(66.91048266207648);extraTreesClassifier(40,'gini','sqrt',10,1,False,'balanced')	0.7254601728603114	0.8394970893859863
adaBoost(decisionTree('gini',6,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7321882112346207	1.345001459121704
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7297084943840889	cached
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);adaBoost(decisionTree('entropy',13,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7057730386291918	cached
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	cached
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);adaBoost(decisionTree('entropy',13,9,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME')	0.7057730386291918	cached
decisionTree('gini',9,2,0.48039816293831483,18,'balanced')	0.753438464867696	cached
robustScaler(True,True);decisionTree('gini',9,8,0.48039816293831483,11,'balanced')	0.7794176484640581	0.8003566265106201
adaBoost(decisionTree('gini',22,11,0.9790021047343852,18,'balanced'),12,0.385035932223208,'SAMME')	0.745730968023741	0.9938843250274658
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',10,16,0.3756221919212819,9,'None'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
maxAbsScaler();decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
pca(0.9077442297283207,False);robustScaler(True,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
robustScaler(True,True);decisionTree('gini',22,8,0.9790021047343852,11,'balanced')	0.758599705535748	cached
randomForest(27,'entropy','None',7,17,True,'balanced_subsample')	0.675822375884717	1.2361667156219482
selectFwe(0.020369263642046772);decisionTree('gini',20,8,0.9434955147782088,15,'balanced')	0.6872548255254328	0.7995462417602539
fastICA(41,'parallel','unit-variance','exp');lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('entropy',24,17,0.9434955147782088,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7036544752868927	1.1295158863067627
robustScaler(False,False);decisionTree('gini',20,8,0.9790021047343852,12,'balanced')	0.7564632004645858	0.6308178901672363
maxAbsScaler();decisionTree('gini',20,9,0.9434955147782088,11,'balanced')	0.758599705535748	0.7084496021270752
robustScaler(False,True);decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	0.7606448427275027	cached
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	cached
minMaxScaler();fastICA(43,'deflation','unit-variance','exp');decisionTree('gini',8,13,0.44748631004080464,11,'balanced')	0.665714875442421	1.8783245086669922
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	0.5787534713745117
robustScaler(True,True);decisionTree('gini',27,8,0.8695043602555736,4,'balanced')	0.7128039073986893	cached
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	cached
selectPercentile(32.984646056235846);nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('entropy',24,17,0.9434955147782088,12,'balanced'),86,0.7341493501197409,'SAMME')	eval_error (BaseClassifier in AdaBoostClassifier ensemble is worse than random, ensemble can not be fit.)	eval_error (BaseClassifier in AdaBoostClassifier ensemble is worse than random, ensemble can not be fit.)
minMaxScaler();selectFwe(0.04815687022629096);varianceThreshold();lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.411221981048584
adaBoost(decisionTree('entropy',11,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.7354679992523446	cached
selectFwe(0.003648495406001819);decisionTree('entropy',13,16,0.5235160061054568,8,'balanced')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.387270212173462
decisionTree('entropy',22,18,0.859359913172964,20,'balanced')	0.7228138428184606	0.7296841144561768
robustScaler(True,True);decisionTree('gini',5,5,0.912062623136776,13,'balanced')	0.7449421016911204	0.7877161502838135
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
adaBoost(decisionTree('entropy',14,14,0.9620207259064026,19,'balanced'),52,1.357345055643881,'SAMME')	0.6435782604219454	2.5211033821105957
fastICA(19,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.6973228241780538	1.3610446453094482
robustScaler(False,True);varianceThreshold();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.6697664260864258
varianceThreshold();minMaxScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',10,16,0.3756221919212819,9,'None'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();robustScaler(True,False);adaBoost(decisionTree('gini',9,11,0.48039816293831483,18,'balanced'),12,0.385035932223208,'SAMME')	0.7200981347598757	0.8563358783721924
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.8230843544006348
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(False,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	1.2161107063293457
robustScaler(False,True);decisionTree('gini',9,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.8401131629943848
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.8638038635253906
extraTreesClassifier(85,'gini','sqrt',14,17,False,'balanced_subsample')	0.7630943335122508	1.3552172183990479
selectPercentile(32.984646056235846);varianceThreshold();adaBoost(decisionTree('gini',20,17,0.4929389586609223,12,'balanced'),86,0.7341493501197409,'SAMME')	0.7218362934687109	0.920548677444458
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	1.0074243545532227
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	1.0855562686920166
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6793954372406006
lda(0.28676833173700067,210,0.017029850204830544)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(False,False);selectFwe(0.04397086739847418);adaBoost(decisionTree('entropy',6,6,0.5235160061054568,4,'balanced'),20,1.6894095667257263,'SAMME')	0.7228877487478272	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
robustScaler(True,False);varianceThreshold();minMaxScaler();selectPercentile(11.542216396767401);logisticRegression('l1','sag',1000,5.621173051050876,'balanced')	eval_error (Solver sag supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver sag supports only 'l2' or None penalties, got l1 penalty.)
minMaxScaler();robustScaler(True,False);bernoulliNB(1.0710614015608135,True)	0.5	0.6114418506622314
decisionTree('gini',9,2,0.48039816293831483,18,'balanced')	0.753438464867696	cached
adaBoost(decisionTree('entropy',11,5,0.9131840663558227,18,'None'),12,0.385035932223208,'SAMME')	0.6522002356913463	cached
minMaxScaler();selectFwe(0.04815687022629096);nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();minMaxScaler();adaBoost(decisionTree('gini',13,14,0.1850033390402418,15,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();decisionTree('gini',13,16,0.5235160061054568,8,'balanced')	0.7026701790474591	0.6742410659790039
fastICA(92,'parallel','unit-variance','cube');maxAbsScaler();varianceThreshold();adaBoost(decisionTree('entropy',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7228530847279404	1.5107886791229248
decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
fastICA(92,'parallel','arbitrary-variance','cube');robustScaler(True,True);varianceThreshold();extraTreesClassifier(45,'entropy','sqrt',8,20,True,'balanced_subsample')	0.7055227140288327	cached
maxAbsScaler();fastICA(5,'deflation','arbitrary-variance','logcosh');adaBoost(decisionTree('gini',6,11,0.8043823231183523,19,'balanced'),89,0.8482211668353168,'SAMME')	0.663346267370742	3.3244283199310303
multinomialNB(1.0272494115875046,False)	0.6035953125609094	0.5554499626159668
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	0.985743522644043
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('entropy',12,6,0.20016039383523154,16,'None'),62,1.6419513730320572,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(False,True);decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',20,8,0.9434955147782088,15,'balanced')	0.7622196467428515	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	0.7296490669250488
minMaxScaler();fastICA(85,'deflation','arbitrary-variance','exp');decisionTree('gini',9,9,0.48039816293831483,18,'balanced')	0.7140033344628126	3.3054115772247314
decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
pca(0.9077442297283207,False);robustScaler(True,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
minMaxScaler();robustScaler(True,False);decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.663205623626709
minMaxScaler();robustScaler(False,False);bernoulliNB(1.0710614015608135,False)	0.7201510003888207	cached
robustScaler(False,True);decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	0.7606448427275027	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',22,16,0.9790021047343852,20,'balanced'),87,0.05828850340761941,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();decisionTree('gini',11,10,0.9237191264027969,11,'balanced')	0.758599705535748	cached
minMaxScaler();varianceThreshold();fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',22,13,0.9790021047343852,18,'balanced'),12,0.385035932223208,'SAMME')	0.745730968023741	0.9614171981811523
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
minMaxScaler();decisionTree('entropy',6,16,0.5235160061054568,8,'balanced')	0.6857543572413117	0.9083375930786133
adaBoost(decisionTree('entropy',22,16,0.9647207489744889,20,'balanced'),89,0.014220344054717728,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('gini',13,6,0.015897593943718258,14,'balanced'),69,0.5929304744983489,'SAMME')	0.6829050107900259	1.0135796070098877
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',20,8,0.9790021047343852,12,'balanced')	0.7564632004645858	0.6867132186889648
robustScaler(False,False);bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.7975473403930664
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.645660400390625
minMaxScaler();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,12,'None')	0.567242851045668	0.7068805694580078
robustScaler(False,True);robustScaler(False,False);logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
minMaxScaler();maxAbsScaler();decisionTree('gini',20,19,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),89,0.014220344054717728,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('entropy',6,17,0.07696901655055277,6,'balanced'),12,0.385035932223208,'SAMME')	0.6909862753270742	cached
maxAbsScaler();varianceThreshold();selectFwe(0.032483507309700045);bernoulliNB(9.978001970951382,True)	0.5	1.0471093654632568
fastICA(48,'parallel','unit-variance','logcosh');minMaxScaler();decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.654929197639888	1.5128324031829834
adaBoost(decisionTree('gini',20,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.8239216804504395
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('entropy',28,19,0.5683901940239536,4,'balanced'),91,1.0906568220383994,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,False);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(True,False);decisionTree('gini',21,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7589876651763916
maxAbsScaler();minMaxScaler();varianceThreshold();logisticRegression('None','saga',1000,9.00390921284142,'None')	0.5	1.0482053756713867
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.7210211753845215
minMaxScaler();robustScaler(True,True);decisionTree('gini',7,19,0.2708667438770346,20,'balanced')	0.685133553431868	0.6391174793243408
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',9,16,0.48039816293831483,18,'balanced'),12,0.385035932223208,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
varianceThreshold();multinomialNB(54.58203589547119,False)	0.5310337134580958	0.6600189208984375
extraTreesClassifier(10,'entropy','sqrt',16,20,True,'balanced_subsample')	0.7279133319539692	0.7917165756225586
pca(0.9077442297283207,False);robustScaler(True,False);fastICA(31,'parallel','unit-variance','exp');logisticRegression('l1','lbfgs',1000,5.8370025647893105,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
robustScaler(True,True);decisionTree('gini',22,8,0.9790021047343852,11,'balanced')	0.758599705535748	cached
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);adaBoost(decisionTree('gini',9,8,0.4822286022101796,19,'balanced'),89,0.014220344054717728,'SAMME')	0.6851443484553622	2.0460867881774902
robustScaler(False,True);decisionTree('entropy',13,9,0.07696901655055277,6,'balanced')	0.6855514307904057	0.7200429439544678
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	cached
adaBoost(decisionTree('entropy',13,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7280180836634311	cached
fastICA(48,'parallel','unit-variance','logcosh');minMaxScaler();varianceThreshold();selectFwe(0.032483507309700045);bernoulliNB(9.978001970951382,True)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by BernoulliNB.)
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	cached
minMaxScaler();nystroem('poly',2.0453135252885986,47,5,0.936973820857651);varianceThreshold();selectFwe(0.0023243305934855397);decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();decisionTree('gini',20,9,0.4822286022101796,19,'balanced')	0.7606448427275027	0.5739872455596924
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8234260082244873
multinomialNB(1.0272494115875046,False)	0.6035953125609094	0.6148293018341064
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),12,0.385035932223208,'SAMME')	0.5721113866507539	0.6532247066497803
minMaxScaler();robustScaler(True,False);decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
decisionTree('gini',9,10,0.23517281233422982,18,'balanced')	0.7179576015456874	cached
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('gini',22,6,0.20016039383523154,16,'balanced'),62,1.6419513730320572,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('entropy',12,9,0.9790021047343852,11,'None')	0.5844591243436776	0.9580130577087402
adaBoost(decisionTree('gini',10,12,0.6654737577625286,6,'None'),99,0.2113856085413436,'SAMME')	0.6726691695128546	2.583400249481201
minMaxScaler();robustScaler(True,False);bernoulliNB(1.0710614015608135,True)	0.5	0.7796473503112793
maxAbsScaler();decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
robustScaler(True,True);decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
decisionTree('gini',28,19,0.7640133964035706,6,'balanced')	0.7765450027537305	0.7266042232513428
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.96409010887146
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7731266021728516
decisionTree('gini',20,13,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7234675884246826
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.685206413269043
randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.4147164821624756
minMaxScaler();adaBoost(decisionTree('entropy',22,6,0.28351923801236323,4,'balanced'),27,1.436361356458873,'SAMME')	0.6456599607580905	1.0185959339141846
robustScaler(True,True);decisionTree('gini',11,9,0.9237191264027969,11,'balanced')	0.758599705535748	0.8002979755401611
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
varianceThreshold();minMaxScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,16,0.4446146534872575,9,'balanced'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',10,13,0.3756221919212819,19,'None')	0.4995305164319249	0.6009163856506348
robustScaler(True,True);robustScaler(False,False);logisticRegression('None','lbfgs',1000,11.320370095078355,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),15,0.28482349119546446,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(True,True);decisionTree('gini',28,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.8970260620117188
multinomialNB(0.27247820610873735,True)	0.6277386025042454	1.022176742553711
minMaxScaler();fastICA(85,'deflation','arbitrary-variance','exp');decisionTree('gini',9,9,0.48039816293831483,18,'balanced')	0.7140033344628126	cached
robustScaler(True,True);decisionTree('gini',27,8,0.8695043602555736,4,'balanced')	0.7128039073986893	cached
robustScaler(True,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	cached
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
lda(0.28676833173700067,210,0.017029850204830544)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
maxAbsScaler();extraTreesClassifier(87,'entropy','log2',7,13,False,'balanced_subsample')	0.7748143805705568	3.170590400695801
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',20,8,0.9434955147782088,15,'balanced')	0.7622196467428515	cached
minMaxScaler();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
robustScaler(True,True);decisionTree('gini',9,8,0.4822286022101796,12,'balanced')	0.7381482036781044	0.7189531326293945
robustScaler(False,True);decisionTree('gini',20,8,0.9434955147782088,19,'balanced')	0.7467956572020299	0.7210142612457275
minMaxScaler();fastICA(43,'deflation','unit-variance','exp');decisionTree('gini',8,13,0.44748631004080464,11,'balanced')	0.665714875442421	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
minMaxScaler();selectFwe(0.024792747475923155);varianceThreshold();lda(0.9904901169002476,105,0.04173623769832464)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6552255153656006
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.5235160061054568,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.9104785919189453
minMaxScaler();decisionTree('gini',20,16,0.4446146534872575,8,'balanced')	0.7026701790474591	0.6550784111022949
robustScaler(True,True);randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.5963819026947021
decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	1.1577060222625732
adaBoost(decisionTree('entropy',11,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.7354679992523446	cached
adaBoost(decisionTree('entropy',1,13,0.8006836140268903,5,'balanced'),12,0.385035932223208,'SAMME')	0.5721113866507539	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6200861930847168
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.065136432647705
robustScaler(True,True);extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	1.6715030670166016
extraTreesClassifier(85,'entropy','sqrt',14,17,True,'balanced')	0.7198830239259701	1.6047077178955078
adaBoost(decisionTree('entropy',13,9,0.6013000704194921,7,'balanced'),44,0.09293715630468806,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6731946468353271
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(8.059485239061608,True)	0.5	0.8535690307617188
robustScaler(True,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7019286155700684
robustScaler(True,True);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6966187953948975
decisionTree('gini',9,13,0.48039816293831483,17,'balanced')	0.7555483921911998	0.6985867023468018
decisionTree('gini',20,19,0.6809215181270325,18,'balanced')	0.7895932575082887	0.6505923271179199
decisionTree('gini',7,2,0.7506466634875965,12,'balanced')	0.7600428202598601	0.6618175506591797
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.7616164684295654
varianceThreshold();maxAbsScaler();varianceThreshold();randomForest(36,'gini','None',9,20,False,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();decisionTree('gini',9,7,0.48039816293831483,18,'balanced')	0.753438464867696	0.9569563865661621
minMaxScaler();decisionTree('gini',20,8,0.9434955147782088,15,'balanced')	0.7622196467428515	cached
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',22,16,0.9790021047343852,20,'balanced'),87,0.05828850340761941,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
selectFwe(0.0018613193341433826);lda(0.725078182876619,76,0.01616483781674562)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by LinearDiscriminantAnalysis.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by LinearDiscriminantAnalysis.)
robustScaler(True,True);randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.6080513000488281
minMaxScaler();nystroem('poly',2.0453135252885986,47,5,0.936973820857651);varianceThreshold();selectFwe(0.0023243305934855397);decisionTree('gini',15,8,0.4822286022101796,19,'balanced')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
adaBoost(decisionTree('gini',30,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.0227653980255127
minMaxScaler();maxAbsScaler();nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);adaBoost(decisionTree('entropy',16,19,0.17350722484758752,14,'balanced'),12,0.385035932223208,'SAMME')	0.6751423993538979	1.1525993347167969
minMaxScaler();minMaxScaler();adaBoost(decisionTree('gini',13,14,0.1850033390402418,15,'None'),88,1.9886132872280609,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),20,0.014220344054717728,'SAMME')	0.7529098685505982	cached
decisionTree('gini',9,10,0.23517281233422982,18,'balanced')	0.7179576015456874	cached
minMaxScaler();decisionTree('gini',15,16,0.5235160061054568,8,'balanced')	0.7026701790474591	cached
robustScaler(True,True);decisionTree('gini',22,8,0.9790021047343852,11,'balanced')	0.758599705535748	cached
robustScaler(False,True);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.7151975339368551	0.9720690250396729
robustScaler(True,True);robustScaler(False,True);decisionTree('entropy',20,8,0.9434955147782088,2,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',9,3,0.06996398038171936,19,'None'),16,0.27434911206430684,'SAMME')	0.6161288945795989	1.044173240661621
bernoulliNB(12.686464728290707,True)	0.5	cached
varianceThreshold();selectFwe(0.009350140785282601);qda(0.10260798232338564)	0.5	0.9534101486206055
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	2.469053030014038
robustScaler(False,True);decisionTree('gini',20,8,0.9434955147782088,19,'balanced')	0.7467956572020299	1.0943315029144287
robustScaler(True,True);decisionTree('gini',30,8,0.4822286022101796,12,'balanced')	0.7381482036781044	0.882631778717041
logisticRegression('None','newton-cg',1000,9.938135741666969,'balanced')	0.6986699631469893	1.2816507816314697
minMaxScaler();decisionTree('gini',11,10,0.9237191264027969,11,'balanced')	0.758599705535748	0.6312117576599121
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	1.2985506057739258
nystroem('poly',6.216133015185234,64,3,0.9217556913589113);extraTreesClassifier(77,'entropy','sqrt',17,18,True,'balanced')	0.651959556644387	1.8976294994354248
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('entropy',12,6,0.20016039383523154,16,'None'),62,1.6419513730320572,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.3445870876312256
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	0.7322380542755127
selectPercentile(66.91048266207648);extraTreesClassifier(40,'gini','sqrt',10,1,False,'balanced')	0.7254601728603114	1.0941882133483887
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
minMaxScaler();selectFwe(0.007186023044637906);varianceThreshold();lda(0.6102334806871057,64,0.057625085745046274)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
maxAbsScaler();decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.7390823364257812
robustScaler(True,True);decisionTree('gini',15,8,0.9790021047343852,11,'balanced')	0.758599705535748	0.9922695159912109
decisionTree('gini',22,13,0.4446146534872575,19,'balanced')	0.7606448427275027	1.0933473110198975
robustScaler(True,True);randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	2.0629470348358154
minMaxScaler();minMaxScaler();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(False,False);decisionTree('gini',20,8,0.9790021047343852,12,'balanced')	0.7564632004645858	cached
adaBoost(decisionTree('entropy',14,14,0.9620207259064026,19,'balanced'),52,0.385035932223208,'SAMME')	0.6803538268858056	2.9910454750061035
adaBoost(decisionTree('entropy',22,7,0.6613419332993459,15,'balanced'),25,0.16329431964070765,'SAMME')	0.7003312273042127	1.302469253540039
robustScaler(True,True);decisionTree('gini',27,8,0.8695043602555736,11,'balanced')	0.7490083371565708	0.6883692741394043
robustScaler(False,False);decisionTree('gini',22,8,0.9790021047343852,4,'balanced')	0.6967629922605679	0.6084942817687988
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',30,8,0.4822286022101796,19,'balanced')	0.7606448427275027	cached
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	cached
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	cached
adaBoost(decisionTree('entropy',13,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7280180836634311	cached
robustScaler(False,True);varianceThreshold();selectPercentile(11.542216396767401);bernoulliNB(1.0710614015608135,False)	0.727340695939172	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(True,True);decisionTree('gini',22,8,0.9790021047343852,11,'balanced')	0.758599705535748	cached
decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
minMaxScaler();fastICA(98,'deflation','arbitrary-variance','exp');decisionTree('gini',12,9,0.48039816293831483,18,'balanced')	0.7093725192686171	2.1659228801727295
robustScaler(True,True);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6517796516418457
minMaxScaler();nystroem('poly',2.0453135252885986,47,5,0.936973820857651);varianceThreshold();selectFwe(0.029261096351015238);decisionTree('gini',20,8,0.4822286022101796,17,'balanced')	0.6902236369033876	1.296614408493042
decisionTree('entropy',15,13,0.6809215181270325,17,'balanced')	0.7609452542377964	0.5748722553253174
adaBoost(decisionTree('gini',11,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.71845714125788	0.9446947574615479
varianceThreshold();maxAbsScaler();decisionTree('gini',20,19,0.6809215181270325,18,'balanced')	0.7895932575082887	0.6637382507324219
decisionTree('gini',9,13,0.48039816293831483,17,'balanced')	0.7555483921911998	0.6937048435211182
selectFwe(0.003267019343901773);decisionTree('entropy',15,8,0.4446146534872575,11,'balanced')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by DecisionTreeClassifier.)
fastICA(92,'parallel','unit-variance','cube');maxAbsScaler();varianceThreshold();adaBoost(decisionTree('gini',22,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.7032650148281642	1.7479190826416016
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6647200584411621
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.6323397159576416
robustScaler(True,True);adaBoost(decisionTree('gini',15,10,0.34124078098363664,5,'balanced'),38,0.4119732179967551,'SAMME')	0.6629033615503254	1.168858289718628
robustScaler(False,True);decisionTree('gini',22,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.5977108478546143
minMaxScaler();selectFwe(0.04815687022629096);nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',22,11,0.9790021047343852,18,'balanced'),12,0.385035932223208,'SAMME')	0.745730968023741	cached
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
minMaxScaler();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.651421308517456
adaBoost(decisionTree('entropy',20,18,0.9434955147782088,15,'balanced'),12,0.385035932223208,'SAMME')	0.7115027372381333	1.1558573246002197
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	cached
adaBoost(decisionTree('gini',30,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
minMaxScaler();fastICA(43,'deflation','unit-variance','exp');decisionTree('gini',8,13,0.44748631004080464,11,'balanced')	0.665714875442421	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7180147171020508
lda(0.28676833173700067,210,0.017029850204830544)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();maxAbsScaler();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
adaBoost(decisionTree('gini',30,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(True,True);decisionTree('gini',27,8,0.8695043602555736,11,'balanced')	0.7490083371565708	cached
robustScaler(True,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
minMaxScaler();robustScaler(True,False);lda(0.28676833173700067,210,0.017029850204830544)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.6696505546569824
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	cached
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('entropy',12,6,0.20016039383523154,16,'balanced'),62,1.6419513730320572,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',8,19,0.48039816293831483,18,'None')	0.5	0.7310168743133545
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6224453449249268
decisionTree('gini',15,19,0.6809215181270325,6,'balanced')	0.7765450027537305	0.6507155895233154
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6569492816925049
decisionTree('gini',28,8,0.9434955147782088,15,'balanced')	0.7622196467428515	0.8212325572967529
adaBoost(decisionTree('gini',22,13,0.9790021047343852,18,'balanced'),12,0.385035932223208,'SAMME')	0.745730968023741	cached
decisionTree('gini',22,13,0.21521528089327213,19,'balanced')	0.6687659788837347	0.9455475807189941
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();randomForest(36,'gini','None',9,20,False,'balanced')	0.7296966898259901	2.2238922119140625
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),20,0.014220344054717728,'SAMME')	0.7420915058158188	0.9768486022949219
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',9,13,0.48039816293831483,17,'balanced')	0.7555483921911998	cached
lda(0.9181768802165173,210,0.017029850204830544)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();adaBoost(decisionTree('entropy',25,10,0.9866128838302839,10,'balanced'),19,0.01746361353444378,'SAMME')	0.729530846279865	1.1782066822052002
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
robustScaler(True,True);minMaxScaler();selectPercentile(11.542216396767401);adaBoost(decisionTree('gini',20,8,0.9434955147782088,19,'balanced'),89,0.014220344054717728,'SAMME')	0.6835050041930671	1.4226737022399902
robustScaler(False,True);decisionTree('gini',9,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.6513419151306152
randomForest(34,'gini','sqrt',15,12,False,'balanced_subsample')	0.7065852541978149	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();minMaxScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,16,0.4446146534872575,9,'balanced'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();maxAbsScaler();decisionTree('gini',20,19,0.6809215181270325,18,'balanced')	0.7895932575082887	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',20,9,0.4822286022101796,19,'balanced')	0.7606448427275027	cached
robustScaler(False,True);decisionTree('gini',15,8,0.9790021047343852,11,'balanced')	0.758599705535748	0.6561355590820312
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6469597816467285
minMaxScaler();minMaxScaler();adaBoost(decisionTree('gini',22,14,0.4446146534872575,19,'balanced'),88,1.9886132872280609,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',13,13,0.1850033390402418,15,'None')	0.5	0.7458634376525879
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.754474401473999
decisionTree('entropy',8,18,0.9059884108085884,15,'balanced')	0.7366399689743028	0.7141392230987549
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',12,2,0.687113491872119,14,'balanced')	0.7361129319383763	0.6111965179443359
adaBoost(decisionTree('gini',20,2,0.27920268452894714,1,'None'),29,0.6996926832605056,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',11,13,0.9790021047343852,17,'balanced')	0.7412530023659093	0.7292139530181885
varianceThreshold();varianceThreshold();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',15,16,0.9790021047343852,20,'balanced'),87,0.05828850340761941,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('entropy',22,19,0.30745194302518186,17,'balanced')	0.6916350262528974	0.6376795768737793
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',22,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.9896068572998047
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8663933277130127
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',30,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7459076065933603	0.881267786026001
decisionTree('gini',15,18,0.5235160061054568,17,'balanced')	0.7555483921911998	0.5921297073364258
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(False,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6476659774780273
robustScaler(True,False);bernoulliNB(1.0710614015608135,False)	0.7403206521793454	0.6811051368713379
robustScaler(True,True);randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.5193653106689453
minMaxScaler();decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	0.6274776458740234
decisionTree('gini',28,19,0.7640133964035706,6,'balanced')	0.7765450027537305	cached
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	cached
robustScaler(False,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6826941967010498
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6060688495635986
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
adaBoost(decisionTree('entropy',13,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7280180836634311	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
minMaxScaler();nystroem('rbf',0.14342141637220895,70,5,0.14366359437542853);nystroem('rbf',1.6766221114297366,87,4,-0.2488001314283914);extraTreesClassifier(53,'entropy','sqrt',3,17,True,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
extraTreesClassifier(85,'entropy','log2',14,17,False,'balanced_subsample')	0.7770805458683545	1.0365076065063477
maxAbsScaler();extraTreesClassifier(87,'gini','sqrt',7,13,False,'balanced_subsample')	0.7652528884184391	1.0852186679840088
extraTreesClassifier(10,'entropy','sqrt',13,20,True,'balanced_subsample')	0.7279133319539692	0.7989490032196045
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5695450305938721
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('entropy',13,9,0.6013000704194921,7,'balanced'),44,0.09293715630468806,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',30,13,0.4446146534872575,17,'balanced')	0.7555483921911998	0.6182060241699219
robustScaler(True,True);decisionTree('gini',15,8,0.4822286022101796,12,'balanced')	0.7381482036781044	0.6906478404998779
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7957677841186523
decisionTree('gini',9,13,0.48039816293831483,17,'balanced')	0.7555483921911998	0.7257163524627686
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('entropy',23,12,0.5977543506961982,2,'None')	0.6144591243436774	0.601567268371582
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('entropy',12,6,0.20016039383523154,16,'balanced'),62,1.6419513730320572,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(False,True);decisionTree('gini',20,8,0.9434955147782088,19,'None')	0.5390621323569834	0.6766507625579834
robustScaler(True,False);decisionTree('gini',8,8,0.9434955147782088,12,'balanced')	0.7631823129537283	0.6619892120361328
decisionTree('gini',20,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.6272997856140137
minMaxScaler();decisionTree('gini',11,10,0.9237191264027969,11,'balanced')	0.758599705535748	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
minMaxScaler();robustScaler(True,True);decisionTree('gini',7,19,0.2708667438770346,20,'balanced')	0.685133553431868	0.6899957656860352
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.702542781829834
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.5720548629760742
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6536319255828857
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,8,0.9790021047343852,12,'balanced')	0.7564632004645858	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
maxAbsScaler();decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
robustScaler(True,True);decisionTree('gini',28,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(True,True);extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(True,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',20,13,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6891729831695557
minMaxScaler();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.7667562961578369
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.3020644187927246
adaBoost(decisionTree('gini',22,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.8958513736724854
decisionTree('entropy',13,9,0.9790021047343852,11,'balanced')	0.7306830551115936	0.847379207611084
robustScaler(True,True);decisionTree('gini',20,8,0.48039816293831483,11,'balanced')	0.7901517500432301	1.0057659149169922
robustScaler(True,True);decisionTree('gini',9,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.8925909996032715
decisionTree('gini',30,13,0.4446146534872575,17,'balanced')	0.7555483921911998	1.029932975769043
adaBoost(decisionTree('gini',18,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7459076065933603	1.334357500076294
robustScaler(True,True);adaBoost(decisionTree('gini',8,2,0.931793666707576,19,'balanced'),62,1.7674544136138604,'SAMME')	0.6356599607580906	2.8486099243164062
decisionTree('entropy',21,13,0.6809215181270325,5,'balanced')	0.7482041978647844	0.8356857299804688
fastICA(92,'parallel','arbitrary-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('gini',22,6,0.20016039383523154,16,'balanced'),62,1.6419513730320572,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',20,19,0.6809215181270325,18,'balanced')	0.7895932575082887	cached
robustScaler(False,True);adaBoost(decisionTree('gini',17,4,0.9670286527177019,6,'None'),75,1.9798296283270087,'SAMME')	0.6463636363636363	2.8221962451934814
decisionTree('gini',20,19,0.9434955147782088,18,'balanced')	0.7535462951579321	0.7384114265441895
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
minMaxScaler();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	cached
adaBoost(decisionTree('entropy',11,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.7354679992523446	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7094426155090332
bernoulliNB(12.686464728290707,True)	0.5	0.7245383262634277
extraTreesClassifier(10,'entropy','sqrt',16,20,False,'balanced_subsample')	0.696155712216668	0.956928014755249
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',30,8,0.22184760065157194,12,'balanced')	0.6719044020706454	1.0821638107299805
robustScaler(True,True);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	1.0249433517456055
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
varianceThreshold();minMaxScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,16,0.4446146534872575,9,'balanced'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();minMaxScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',7,16,0.4446146534872575,9,'balanced'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',15,2,0.7506466634875965,12,'balanced')	0.7641157826242102	0.9160661697387695
adaBoost(decisionTree('gini',11,12,0.7710190208219242,7,'balanced'),52,0.31979215492199164,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6819994449615479
adaBoost(decisionTree('gini',20,7,0.6809215181270325,18,'balanced'),25,0.16329431964070765,'SAMME')	0.7334145259035585	1.1430351734161377
varianceThreshold();maxAbsScaler();decisionTree('entropy',22,19,0.6613419332993459,15,'balanced')	0.7477832519208645	0.6270089149475098
robustScaler(True,True);decisionTree('gini',20,8,0.9790021047343852,11,'balanced')	0.758599705535748	0.6280648708343506
robustScaler(True,True);decisionTree('gini',15,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6957409381866455
robustScaler(True,True);decisionTree('gini',9,8,0.4822286022101796,12,'balanced')	0.7381482036781044	0.7358725070953369
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.9676094055175781
minMaxScaler();maxAbsScaler();extraTreesClassifier(10,'entropy','sqrt',16,20,True,'balanced_subsample')	0.7279133319539692	0.8357152938842773
adaBoost(decisionTree('gini',15,11,0.9544283023629698,8,'balanced'),12,0.385035932223208,'SAMME')	0.7236430905352632	1.3244349956512451
varianceThreshold();multinomialNB(54.58203589547119,False)	0.5310337134580958	cached
decisionTree('gini',28,19,0.7640133964035706,6,'balanced')	0.7765450027537305	cached
adaBoost(decisionTree('entropy',13,9,0.6013000704194921,7,'balanced'),44,0.09293715630468806,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',22,8,0.9790021047343852,4,'balanced')	0.6967629922605679	0.6650552749633789
minMaxScaler();robustScaler(False,False);bernoulliNB(1.0710614015608135,True)	0.4983601059911381	0.5960333347320557
adaBoost(decisionTree('gini',15,11,0.4446146534872575,17,'balanced'),12,0.385035932223208,'SAMME')	0.7119450933119831	0.9056558609008789
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6939451694488525
selectPercentile(66.91048266207648);extraTreesClassifier(40,'gini','sqrt',10,1,False,'balanced')	0.7254601728603114	1.0303683280944824
robustScaler(True,True);decisionTree('gini',9,14,0.8499346380736003,15,'balanced')	0.71913909687634	0.66156005859375
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(True,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(False,True);varianceThreshold();selectPercentile(11.542216396767401);lda(0.6102334806871057,64,0.057625085745046274)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
minMaxScaler();selectFwe(0.007186023044637906);varianceThreshold();bernoulliNB(1.0710614015608135,False)	0.727340695939172	0.6897861957550049
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
extraTreesClassifier(85,'gini','sqrt',14,17,False,'balanced_subsample')	0.7630943335122508	cached
randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.456735372543335
minMaxScaler();robustScaler(False,False);fastICA(94,'deflation','arbitrary-variance','exp');decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.6677901087598617	1.9707655906677246
decisionTree('gini',30,13,0.9434955147782088,17,'balanced')	0.7412530023659093	0.8202002048492432
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,12,'balanced')	0.7643505244082478	1.083742380142212
minMaxScaler();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.8925151824951172
minMaxScaler();selectFwe(0.007186023044637906);varianceThreshold();lda(0.6102334806871057,64,0.057625085745046274)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(False,True);decisionTree('gini',22,8,0.4822286022101796,19,'balanced')	0.7606448427275027	0.8943831920623779
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.3424410820007324
minMaxScaler();fastICA(87,'deflation','arbitrary-variance','cube');minMaxScaler();fastICA(2,'deflation','arbitrary-variance','logcosh');decisionTree('gini',4,6,0.9796941587769212,14,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7332212924957275
robustScaler(True,True);decisionTree('entropy',6,8,0.07696901655055277,11,'balanced')	0.6759320053455357	0.6508252620697021
adaBoost(decisionTree('gini',9,9,0.48039816293831483,6,'balanced'),45,0.014220344054717728,'SAMME')	0.7003334262904801	1.3586604595184326
minMaxScaler();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.7069952487945557
varianceThreshold();minMaxScaler();nystroem('sigmoid',0.7831981781759919,75,4,-0.37370846905425936);adaBoost(decisionTree('gini',19,13,0.8658262602852618,14,'None'),100,1.4717649824525447,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();selectFwe(0.04815687022629096);nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
adaBoost(decisionTree('gini',27,11,0.4446146534872575,19,'balanced'),63,0.385035932223208,'SAMME')	0.6896789280141855	1.942901372909546
minMaxScaler();robustScaler(True,False);randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.3645660877227783
minMaxScaler();bernoulliNB(1.0710614015608135,False)	0.7201510003888207	0.6263594627380371
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
fastICA(92,'parallel','unit-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),20,0.014220344054717728,'SAMME')	0.7529098685505982	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(False,True);decisionTree('gini',20,8,0.48039816293831483,11,'balanced')	0.78015175004323	0.6863853931427002
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6282405853271484
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	0.6675758361816406
decisionTree('gini',28,13,0.7640133964035706,7,'balanced')	0.776306962490292	0.727658748626709
decisionTree('gini',9,13,0.48039816293831483,17,'balanced')	0.7555483921911998	cached
robustScaler(False,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
varianceThreshold();decisionTree('gini',20,9,0.4822286022101796,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',7,13,0.4446146534872575,17,'balanced')	0.7503840729423736	0.782336950302124
varianceThreshold();minMaxScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',18,16,0.6809215181270325,9,'balanced'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
minMaxScaler();selectFwe(0.04815687022629096);nystroem('rbf',2.112368780733218,13,5,0.12655410685540724);lda(0.9904901169002476,230,0.06696912357994567)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(True,True);decisionTree('gini',28,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7337203025817871
robustScaler(True,True);decisionTree('gini',15,8,0.4822286022101796,12,'balanced')	0.7381482036781044	cached
minMaxScaler();decisionTree('gini',20,9,0.9790021047343852,11,'balanced')	0.758599705535748	cached
adaBoost(decisionTree('entropy',21,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7147654231399325	0.8373279571533203
decisionTree('gini',22,13,0.4446146534872575,5,'balanced')	0.741870567668305	0.6116280555725098
adaBoost(decisionTree('gini',11,12,0.7710190208219242,7,'balanced'),52,0.31979215492199164,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
selectFwe(0.017175368810962696);varianceThreshold();qda(0.024757690641216246)	0.5	0.6261873245239258
decisionTree('gini',20,18,0.5235160061054568,17,'balanced')	0.7555483921911998	0.5328173637390137
robustScaler(True,False);decisionTree('gini',15,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7237193584442139
decisionTree('gini',20,15,0.48039816293831483,17,'balanced')	0.7555483921911998	0.6809477806091309
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,11,'balanced')	0.7795392224184651	0.6691446304321289
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.5660598278045654
decisionTree('gini',28,8,0.9434955147782088,15,'balanced')	0.7622196467428515	0.641942024230957
decisionTree('gini',15,19,0.7640133964035706,6,'balanced')	0.7765450027537305	0.6614711284637451
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6814568042755127
adaBoost(decisionTree('entropy',13,9,0.6013000704194921,7,'balanced'),44,0.09293715630468806,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(True,True);decisionTree('gini',9,8,0.48039816293831483,11,'balanced')	0.7794176484640581	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();robustScaler(True,True);decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.8991508483886719
maxAbsScaler();extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	1.2976505756378174
robustScaler(True,True);decisionTree('gini',15,8,0.4822286022101796,9,'balanced')	0.7296821365350572	0.8897039890289307
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',28,19,0.7640133964035706,16,'balanced')	0.7521371647670424	1.0524232387542725
varianceThreshold();minMaxScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,16,0.4446146534872575,9,'balanced'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
adaBoost(decisionTree('gini',30,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
maxAbsScaler();varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6802353858947754
decisionTree('gini',9,13,0.4822286022101796,12,'balanced')	0.7381482036781044	0.6078739166259766
fastICA(92,'parallel','unit-variance','cube');decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7014962502286446	1.3325231075286865
minMaxScaler();robustScaler(True,True);varianceThreshold();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.2637617588043213
decisionTree('gini',20,13,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',20,13,0.6809215181270325,16,'balanced')	0.7521371647670424	0.6533877849578857
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',9,8,0.48039816293831483,11,'balanced')	0.7794176484640581	cached
lda(0.6102334806871057,64,0.057625085745046274)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(False,True);varianceThreshold();selectPercentile(11.542216396767401);decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.6844428718360837	0.7072169780731201
varianceThreshold();maxAbsScaler();decisionTree('entropy',22,19,0.6613419332993459,15,'balanced')	0.7477832519208645	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(False,True);decisionTree('gini',20,8,0.48039816293831483,11,'balanced')	0.78015175004323	0.5875060558319092
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
minMaxScaler();maxAbsScaler();adaBoost(decisionTree('gini',18,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7459076065933603	0.9146871566772461
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6416847705841064
robustScaler(False,True);decisionTree('entropy',21,17,0.2504324615742787,15,'None')	0.5090626821035502	1.021594524383545
minMaxScaler();robustScaler(False,False);fastICA(94,'deflation','arbitrary-variance','cube');randomForest(36,'gini','None',9,20,False,'balanced')	0.7639283490310967	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
adaBoost(decisionTree('gini',22,13,0.9790021047343852,18,'balanced'),12,0.385035932223208,'SAMME')	0.745730968023741	cached
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1202218532562256
decisionTree('gini',15,18,0.589407291713452,4,'balanced')	0.7212260947703109	0.5389204025268555
decisionTree('gini',9,13,0.48039816293831483,17,'balanced')	0.7555483921911998	cached
fastICA(66,'deflation','unit-variance','logcosh');decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7077938970134767	5.63994574546814
decisionTree('gini',28,8,0.9434955147782088,15,'balanced')	0.7622196467428515	cached
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
adaBoost(decisionTree('gini',18,12,0.10051647455557478,18,'None'),52,0.5070104315422229,'SAMME')	0.6442531592935656	1.047753095626831
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('entropy',15,13,0.44251468825342666,17,'balanced')	0.7584769721158545	0.6345522403717041
randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	cached
minMaxScaler();randomForest(36,'gini','None',9,1,False,'balanced')	0.7282262476998105	1.3145017623901367
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
adaBoost(decisionTree('entropy',28,20,0.4826825505527814,9,'balanced'),16,0.536606640156815,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();minMaxScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',15,16,0.4446146534872575,9,'balanced'),34,0.10300848230443381,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
minMaxScaler();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.7454180717468262
maxAbsScaler();extraTreesClassifier(87,'gini','sqrt',7,13,False,'balanced_subsample')	0.7652528884184391	1.016972303390503
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',15,8,0.4822286022101796,12,'balanced')	0.7381482036781044	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
varianceThreshold();fastICA(87,'deflation','arbitrary-variance','cube');minMaxScaler();fastICA(2,'deflation','arbitrary-variance','logcosh');decisionTree('gini',4,6,0.9796941587769212,14,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',11,12,0.7710190208219242,7,'balanced'),52,0.31979215492199164,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
extraTreesClassifier(85,'gini','sqrt',14,17,False,'balanced_subsample')	0.7630943335122508	1.0472006797790527
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6712346076965332
varianceThreshold();minMaxScaler();nystroem('sigmoid',0.7831981781759919,75,4,-0.37370846905425936);adaBoost(decisionTree('gini',8,13,0.8658262602852618,14,'balanced'),100,1.4717649824525447,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',19,19,0.48039816293831483,18,'None')	0.5	0.6456694602966309
decisionTree('gini',20,13,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6751053333282471
robustScaler(True,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7037007808685303
decisionTree('gini',18,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.6913626194000244
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.6006999015808105
robustScaler(False,True);decisionTree('gini',11,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.7591302394866943
minMaxScaler();decisionTree('gini',15,10,0.9237191264027969,11,'balanced')	0.758599705535748	0.7237451076507568
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8483014106750488
decisionTree('gini',30,18,0.4446146534872575,17,'balanced')	0.7555483921911998	0.5714092254638672
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',15,9,0.4446146534872575,11,'balanced')	0.78015175004323	0.7159285545349121
adaBoost(decisionTree('gini',22,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.71845714125788	1.3297381401062012
decisionTree('gini',15,18,0.5235160061054568,17,'balanced')	0.7555483921911998	cached
decisionTree('gini',30,13,0.4446146534872575,17,'balanced')	0.7555483921911998	cached
robustScaler(True,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',27,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8179705142974854
robustScaler(True,True);decisionTree('gini',20,8,0.48039816293831483,11,'balanced')	0.7901517500432301	cached
robustScaler(True,True);decisionTree('gini',28,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',20,8,0.07696901655055277,11,'balanced')	0.6863839270096486	0.6726288795471191
qda(0.05314470019627693)	0.4990626821035503	0.6393406391143799
minMaxScaler();decisionTree('gini',20,10,0.9237191264027969,11,'balanced')	0.758599705535748	0.6106328964233398
decisionTree('gini',11,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5973684787750244
decisionTree('gini',8,13,0.9434955147782088,12,'balanced')	0.7631823129537283	0.8448426723480225
robustScaler(True,False);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0366685390472412
maxAbsScaler();decisionTree('entropy',22,19,0.30745194302518186,17,'balanced')	0.6914002844688598	0.7558770179748535
extraTreesClassifier(87,'gini','sqrt',7,13,False,'balanced_subsample')	0.7652528884184391	1.02406644821167
adaBoost(decisionTree('gini',9,11,0.48039816293831483,17,'balanced'),12,0.385035932223208,'SAMME')	0.7322075123368127	0.8319833278656006
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	0.48029184341430664
minMaxScaler();fastICA(87,'deflation','arbitrary-variance','cube');minMaxScaler();fastICA(2,'deflation','arbitrary-variance','logcosh');decisionTree('gini',4,6,0.9796941587769212,14,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
extraTreesClassifier(85,'entropy','log2',14,17,False,'balanced_subsample')	0.7770805458683545	1.0257949829101562
minMaxScaler();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',15,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7161967754364014
varianceThreshold();decisionTree('gini',20,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6375749111175537
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',9,8,0.48039816293831483,11,'balanced')	0.7794176484640581	cached
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.6444082260131836
minMaxScaler();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.5611627101898193
robustScaler(False,True);decisionTree('gini',15,8,0.4446146534872575,19,'None')	0.5	0.6767787933349609
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',15,13,0.9790021047343852,17,'balanced')	0.7412530023659093	0.8407936096191406
robustScaler(True,True);decisionTree('gini',11,8,0.4822286022101796,12,'balanced')	0.7381482036781044	1.014543056488037
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7410900592803955
minMaxScaler();selectFwe(0.007186023044637906);varianceThreshold();lda(0.6102334806871057,64,0.057625085745046274)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
decisionTree('gini',28,19,0.7640133964035706,6,'balanced')	0.7765450027537305	0.8216722011566162
robustScaler(False,False);extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	0.9668674468994141
robustScaler(True,True);decisionTree('gini',30,8,0.22184760065157194,12,'balanced')	0.6719044020706454	cached
adaBoost(decisionTree('entropy',23,19,0.8373858566848081,10,'balanced'),54,1.9884794483770918,'SAMME')	0.6736070371558711	2.142639398574829
robustScaler(True,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
varianceThreshold();minMaxScaler();nystroem('sigmoid',0.7831981781759919,75,4,-0.37370846905425936);adaBoost(decisionTree('gini',19,13,0.8658262602852618,14,'None'),100,1.4717649824525447,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
fastICA(92,'parallel','arbitrary-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('gini',22,6,0.20016039383523154,16,'balanced'),62,1.6419513730320572,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();bernoulliNB(1.0710614015608135,False)	0.7201510003888207	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,19,0.6809215181270325,18,'balanced')	0.7895932575082887	cached
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',9,13,0.48039816293831483,18,'None')	0.5	0.8340926170349121
robustScaler(True,True);decisionTree('gini',9,8,0.9434955147782088,12,'balanced')	0.7564632004645858	1.1670737266540527
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	1.2182152271270752
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7143259048461914
decisionTree('gini',9,13,0.48039816293831483,17,'balanced')	0.7555483921911998	0.7385730743408203
robustScaler(True,True);decisionTree('gini',20,8,0.9790021047343852,11,'balanced')	0.758599705535748	cached
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	cached
adaBoost(decisionTree('gini',30,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
adaBoost(decisionTree('gini',22,13,0.9790021047343852,18,'balanced'),12,0.385035932223208,'SAMME')	0.745730968023741	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7204365730285645
minMaxScaler();randomForest(36,'gini','None',9,20,False,'balanced')	0.7395843316231218	1.8141357898712158
adaBoost(decisionTree('gini',2,18,0.7770522093395442,13,'balanced'),40,0.550535798430295,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',28,2,0.7640133964035706,17,'balanced')	0.7984211978278013	1.3171861171722412
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',20,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('entropy',15,2,0.7506466634875965,1,'balanced')	0.6784786413463394	0.9176864624023438
minMaxScaler();robustScaler(False,False);fastICA(94,'deflation','arbitrary-variance','cube');randomForest(36,'gini','None',9,20,False,'balanced')	0.7639283490310967	6.862550497055054
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	0.805316686630249
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
minMaxScaler();fastICA(43,'deflation','unit-variance','exp');decisionTree('gini',8,13,0.44748631004080464,11,'balanced')	0.665714875442421	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.2653112411499023
robustScaler(False,True);decisionTree('gini',30,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.99564528465271
varianceThreshold();maxAbsScaler();decisionTree('gini',9,19,0.4446146534872575,11,'balanced')	0.769417648464058	1.160111427307129
robustScaler(False,True);decisionTree('gini',11,8,0.4822286022101796,10,'None')	0.5870086590081973	1.3011925220489502
decisionTree('gini',11,13,0.7710190208219242,17,'balanced')	0.7984211978278013	0.957252025604248
adaBoost(decisionTree('gini',15,4,0.39507598270795585,5,'balanced'),68,1.3801797308854127,'SAMME')	0.6545166778115289	1.6940655708312988
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
decisionTree('gini',28,13,0.9434955147782088,17,'balanced')	0.7412530023659093	0.6885454654693604
robustScaler(True,True);decisionTree('gini',11,8,0.6809215181270325,12,'balanced')	0.7643505244082478	0.5738272666931152
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
selectPercentile(35.5421204103849);maxAbsScaler();robustScaler(True,False);bernoulliNB(9.16405970783354,True)	0.5	0.7173612117767334
decisionTree('gini',15,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6909282207489014
varianceThreshold();maxAbsScaler();decisionTree('gini',20,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.6176235675811768
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6134600639343262
robustScaler(True,False);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5734975337982178
adaBoost(decisionTree('gini',30,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(True,True);decisionTree('gini',28,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
varianceThreshold();maxAbsScaler();varianceThreshold();decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',15,18,0.589407291713452,4,'balanced')	0.7212260947703109	cached
adaBoost(decisionTree('gini',8,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7452647829350669	0.7713651657104492
decisionTree('gini',30,13,0.4446146534872575,17,'balanced')	0.7555483921911998	0.6944797039031982
adaBoost(decisionTree('gini',15,11,0.9434955147782088,19,'balanced'),12,0.385035932223208,'SAMME')	0.71845714125788	0.9499421119689941
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,12,'balanced')	0.7381482036781044	0.762242317199707
decisionTree('gini',28,19,0.7640133964035706,6,'balanced')	0.7765450027537305	cached
decisionTree('gini',27,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(False,False);extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	cached
decisionTree('gini',27,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',20,9,0.4822286022101796,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',20,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
decisionTree('gini',30,19,0.5341917678196119,17,'balanced')	0.7555483921911998	0.70538330078125
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',9,9,0.9333090680362235,11,'balanced')	0.7583655134982772	0.7564005851745605
maxAbsScaler();maxAbsScaler();maxAbsScaler();minMaxScaler();decisionTree('gini',15,8,0.48039816293831483,11,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',19,19,0.48039816293831483,18,'balanced')	0.753438464867696	0.6713283061981201
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,19,'None')	0.5	0.6467835903167725
adaBoost(decisionTree('gini',30,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(True,True);decisionTree('gini',20,8,0.48039816293831483,11,'balanced')	0.7901517500432301	cached
decisionTree('gini',15,13,0.6809215181270325,17,'None')	0.5390632318501171	0.7027304172515869
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',20,8,0.48039816293831483,11,'balanced')	0.7901517500432301	cached
varianceThreshold();adaBoost(decisionTree('entropy',18,17,0.19162194229191953,2,'balanced'),19,1.636310598204263,'SAMME')	0.6352203534170748	0.9991495609283447
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();decisionTree('gini',9,8,0.48039816293831483,11,'balanced')	0.769417648464058	0.6794023513793945
extraTreesClassifier(85,'gini','sqrt',14,17,False,'balanced_subsample')	0.7630943335122508	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(True,True);decisionTree('gini',18,9,0.6809215181270325,11,'balanced')	0.7795392224184651	0.6384563446044922
decisionTree('gini',22,13,0.9790021047343852,17,'balanced')	0.7412530023659093	0.7523765563964844
robustScaler(True,True);decisionTree('gini',20,8,0.9790021047343852,11,'balanced')	0.758599705535748	cached
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
minMaxScaler();decisionTree('gini',20,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6165652275085449
decisionTree('gini',15,15,0.48039816293831483,17,'balanced')	0.7555483921911998	0.6737534999847412
decisionTree('gini',28,18,0.7640133964035706,17,'balanced')	0.7984211978278013	0.69158935546875
decisionTree('gini',30,19,0.6809215181270325,6,'balanced')	0.7765450027537305	0.6358528137207031
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',20,8,0.9790021047343852,11,'balanced')	0.758599705535748	cached
adaBoost(decisionTree('entropy',13,4,0.5917189045129684,3,'None'),100,0.6756160804401907,'SAMME')	0.6454257687206197	2.9874887466430664
adaBoost(decisionTree('gini',9,11,0.48039816293831483,17,'balanced'),12,0.385035932223208,'SAMME')	0.7322075123368127	cached
decisionTree('gini',7,2,0.7506466634875965,12,'balanced')	0.7600428202598601	cached
decisionTree('gini',15,18,0.4446146534872575,19,'balanced')	0.7606448427275027	0.804572582244873
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7206809520721436
maxAbsScaler();extraTreesClassifier(87,'gini','sqrt',7,13,False,'balanced_subsample')	0.7652528884184391	cached
robustScaler(False,False);extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	cached
extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	1.0836904048919678
maxAbsScaler();decisionTree('gini',11,13,0.7710190208219242,17,'balanced')	0.7984211978278013	0.6596529483795166
decisionTree('gini',15,2,0.4446146534872575,19,'balanced')	0.7606448427275027	0.5992639064788818
varianceThreshold();decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	0.591557502746582
adaBoost(decisionTree('entropy',22,13,0.3521998120845752,10,'None'),12,0.385035932223208,'SAMME')	0.6551921264297159	0.7773478031158447
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6535682678222656
adaBoost(decisionTree('gini',26,15,0.9358786120231636,9,'None'),91,0.12898227568690424,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6473076343536377
varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5829894542694092
decisionTree('gini',15,13,0.7710190208219242,17,'balanced')	0.7984211978278013	0.7288269996643066
decisionTree('gini',11,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7494213581085205
decisionTree('gini',18,13,0.48039816293831483,17,'balanced')	0.7555483921911998	0.7383139133453369
decisionTree('gini',11,9,0.7710190208219242,19,'balanced')	0.7893291892437586	0.7918953895568848
varianceThreshold();decisionTree('gini',7,9,0.7506466634875965,6,'balanced')	0.7521197328031779	0.9097898006439209
decisionTree('gini',20,2,0.4822286022101796,12,'balanced')	0.7381482036781044	0.9525332450866699
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.73201584815979
decisionTree('gini',15,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7048497200012207
robustScaler(True,True);decisionTree('gini',22,8,0.9790021047343852,11,'balanced')	0.758599705535748	0.6949093341827393
robustScaler(True,True);decisionTree('gini',15,9,0.4446146534872575,19,'balanced')	0.7606448427275027	0.6435201168060303
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,12,'balanced')	0.7643505244082478	0.689056396484375
robustScaler(True,True);decisionTree('gini',15,8,0.9434955147782088,17,'balanced')	0.7412530023659093	0.7111959457397461
pca(0.653071637995135,False);extraTreesClassifier(63,'gini','log2',17,7,True,'balanced')	0.6316169845701131	1.1094753742218018
robustScaler(False,True);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.8834733963012695
varianceThreshold();maxAbsScaler();decisionTree('gini',28,19,0.7640133964035706,11,'balanced')	0.7795392224184651	1.4159605503082275
selectPercentile(71.93978728203369);decisionTree('entropy',27,10,0.12018208424596888,4,'balanced')	0.7187674182202005	1.4635851383209229
adaBoost(decisionTree('gini',8,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7452647829350669	1.3463656902313232
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	0.6658334732055664
fastICA(92,'parallel','arbitrary-variance','cube');robustScaler(True,True);varianceThreshold();adaBoost(decisionTree('entropy',13,11,0.2506382618933991,12,'balanced'),62,1.6419513730320572,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
minMaxScaler();bernoulliNB(1.0710614015608135,False)	0.7201510003888207	0.6200947761535645
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.927445650100708
decisionTree('gini',18,13,0.6809215181270325,4,'balanced')	0.7423965052110977	0.6861319541931152
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
bernoulliNB(1.0710614015608135,False)	0.7282774640890548	cached
robustScaler(True,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',28,18,0.9434955147782088,15,'balanced')	0.7622196467428515	0.963313102722168
decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7481563091278076
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6515309810638428
decisionTree('gini',15,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6390600204467773
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.83046555519104
adaBoost(decisionTree('gini',22,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.71845714125788	0.8536176681518555
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',28,2,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',11,13,0.6809215181270325,12,'balanced')	0.7641157826242102	0.7412006855010986
robustScaler(True,False);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
minMaxScaler();robustScaler(False,False);fastICA(94,'deflation','arbitrary-variance','cube');randomForest(36,'gini','None',9,20,False,'balanced')	0.7639283490310967	cached
robustScaler(False,False);extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	cached
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,19,0.7640133964035706,6,'balanced')	0.7765450027537305	cached
randomForest(80,'entropy','sqrt',9,9,True,'balanced')	0.6695936973055423	1.392371416091919
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();selectPercentile(60.508408661119745);decisionTree('gini',9,19,0.4446146534872575,11,'balanced')	0.7154863108107163	0.8447678089141846
robustScaler(False,True);decisionTree('gini',9,8,0.48039816293831483,11,'balanced')	0.769417648464058	0.7829916477203369
robustScaler(True,True);decisionTree('gini',20,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7299449443817139
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,15,0.48039816293831483,17,'balanced')	0.7555483921911998	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	0.6812610626220703
decisionTree('gini',20,13,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6782441139221191
nystroem('poly',2.2487265663782745,58,2,0.5311174550718734);maxAbsScaler();varianceThreshold();decisionTree('gini',9,19,0.48039816293831483,18,'balanced')	0.6306133872284876	1.7147953510284424
robustScaler(True,True);decisionTree('gini',15,8,0.4822286022101796,12,'balanced')	0.7381482036781044	cached
decisionTree('entropy',20,13,0.6809215181270325,17,'balanced')	0.7609452542377964	0.608309268951416
robustScaler(False,True);decisionTree('gini',15,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7116827964782715
minMaxScaler();fastICA(87,'deflation','arbitrary-variance','cube');minMaxScaler();fastICA(2,'deflation','arbitrary-variance','logcosh');decisionTree('entropy',22,14,0.26922157199916674,8,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',4,13,0.9796941587769212,14,'balanced')	0.7056951545337599	0.7766451835632324
decisionTree('gini',9,13,0.48039816293831483,17,'balanced')	0.7555483921911998	0.8076479434967041
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7289507389068604
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7865874767303467
decisionTree('gini',18,13,0.7640133964035706,7,'balanced')	0.776306962490292	0.6428413391113281
decisionTree('gini',9,19,0.48039816293831483,11,'balanced')	0.769417648464058	0.6576979160308838
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6960577964782715
adaBoost(decisionTree('gini',30,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.7851006984710693
decisionTree('gini',15,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8017392158508301
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,11,'balanced')	0.7795392224184651	cached
decisionTree('gini',18,13,0.6809215181270325,2,'balanced')	0.732890787347033	0.96830153465271
adaBoost(decisionTree('gini',20,11,0.6809215181270325,17,'balanced'),12,0.385035932223208,'SAMME')	0.7057032907829491	0.9125492572784424
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	0.5476424694061279
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6747982501983643
robustScaler(False,True);decisionTree('gini',18,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7054884433746338
adaBoost(decisionTree('gini',1,2,0.32173326608613484,16,'balanced'),27,0.1745355770436546,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7834577560424805
extraTreesClassifier(87,'gini','sqrt',7,13,False,'balanced_subsample')	0.7652528884184391	1.1053738594055176
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5766210556030273
decisionTree('gini',9,13,0.7470559128141991,11,'None')	0.5185948477751756	0.8205702304840088
fastICA(22,'deflation','unit-variance','cube');varianceThreshold();multinomialNB(1.233218232096572,False)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
adaBoost(decisionTree('gini',30,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',20,13,0.48039816293831483,11,'balanced')	0.78015175004323	0.7383921146392822
robustScaler(True,True);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6293613910675049
adaBoost(decisionTree('entropy',21,12,0.9628509621281196,11,'None'),41,1.6463798231021936,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.4446146534872575,13,'balanced')	0.7293457416131164	0.6681804656982422
minMaxScaler();decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6636700630187988
fastICA(79,'deflation','unit-variance','exp');decisionTree('gini',28,8,0.9434955147782088,12,'balanced')	0.7458459850009146	2.646177291870117
robustScaler(True,True);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',9,19,0.4446146534872575,11,'balanced')	0.769417648464058	cached
decisionTree('gini',9,13,0.48039816293831483,17,'balanced')	0.7555483921911998	cached
adaBoost(decisionTree('gini',7,11,0.16012255027802336,10,'None'),65,1.1734981443757875,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',15,18,0.5235160061054568,11,'balanced')	0.78015175004323	0.6109654903411865
decisionTree('gini',7,15,0.7506466634875965,12,'balanced')	0.7600428202598601	0.5173110961914062
adaBoost(decisionTree('gini',6,8,0.5145748211237343,20,'balanced'),70,0.8930395931455131,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();robustScaler(True,False);fastICA(94,'deflation','arbitrary-variance','exp');randomForest(36,'entropy','sqrt',9,20,False,'balanced')	0.7330309527307911	3.3138649463653564
decisionTree('gini',15,18,0.589407291713452,4,'balanced')	0.7212260947703109	0.9217324256896973
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9684867858886719
minMaxScaler();selectFwe(0.007186023044637906);varianceThreshold();lda(0.6102334806871057,64,0.057625085745046274)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
maxAbsScaler();varianceThreshold();maxAbsScaler();minMaxScaler();decisionTree('gini',9,8,0.48039816293831483,11,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0441465377807617
pca(0.7614275047184732,True);maxAbsScaler();minMaxScaler();nystroem('cosine',4.121226020701809,65,5,0.003189203618091385);logisticRegression('l1','saga',1000,7.952896236357959,'balanced')	0.5002341920374708	8.830453634262085
decisionTree('gini',15,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
adaBoost(decisionTree('gini',15,12,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.8986186981201172
adaBoost(decisionTree('gini',22,11,0.9790021047343852,19,'balanced'),12,0.385035932223208,'SAMME')	0.71845714125788	cached
adaBoost(decisionTree('entropy',12,17,0.5868674955785388,20,'None'),34,1.5717799283646605,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',15,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',19,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7660079002380371
decisionTree('gini',18,15,0.48039816293831483,17,'balanced')	0.7555483921911998	0.5411603450775146
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,11,'balanced')	0.7795392224184651	0.6219570636749268
decisionTree('gini',22,13,0.9790021047343852,17,'balanced')	0.7412530023659093	0.6855132579803467
decisionTree('gini',15,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',2,4,0.8894806017421603,16,'balanced')	0.6973126488688715	0.7086849212646484
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.582878589630127
decisionTree('gini',9,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6967301368713379
adaBoost(decisionTree('gini',22,11,0.48039816293831483,17,'balanced'),12,0.385035932223208,'SAMME')	0.7119450933119831	0.8444538116455078
adaBoost(decisionTree('gini',15,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7459076065933603	0.9274888038635254
decisionTree('gini',15,13,0.9434955147782088,17,'balanced')	0.7412530023659093	0.5524201393127441
decisionTree('gini',15,15,0.3830425972358247,17,'balanced')	0.7257720091038032	0.747344970703125
adaBoost(decisionTree('gini',18,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7459076065933603	0.9619908332824707
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
decisionTree('gini',28,18,0.9434955147782088,15,'balanced')	0.7622196467428515	cached
decisionTree('gini',27,13,0.9434955147782088,12,'balanced')	0.7564632004645858	0.5988340377807617
decisionTree('entropy',20,13,0.6809215181270325,17,'balanced')	0.7609452542377964	0.5850825309753418
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.48039816293831483,17,'balanced')	0.7555483921911998	cached
maxAbsScaler();varianceThreshold();minMaxScaler();selectPercentile(14.146530123973491);mlpClassifier((19, 1),0.07826967410342842,0.54151147760833,'adam','tanh')	0.5	1.0861473083496094
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,11,'balanced')	0.7901517500432301	0.7650938034057617
robustScaler(True,True);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',15,9,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
robustScaler(True,True);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6807336807250977
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	0.7598652839660645
adaBoost(decisionTree('gini',18,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7459076065933603	0.8776092529296875
varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,13,0.9434955147782088,17,'balanced')	0.7412530023659093	cached
decisionTree('entropy',2,16,0.11360981561751937,19,'None')	0.5	0.6040036678314209
pca(0.716055220913363,False);minMaxScaler();varianceThreshold();mlpClassifier((63, 4),0.026499341816480046,0.9045117166111221,'adam','tanh')	0.5	1.6021153926849365
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',7,9,0.7506466634875965,6,'balanced')	0.7521197328031779	cached
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',17,6,0.3539738857929764,4,'balanced'),24,0.25130330835200415,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('entropy',20,13,0.6809215181270325,17,'balanced')	0.7609452542377964	cached
decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6689507961273193
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5978546142578125
robustScaler(True,True);decisionTree('gini',18,9,0.6809215181270325,11,'balanced')	0.7795392224184651	cached
decisionTree('gini',18,13,0.7640133964035706,7,'balanced')	0.776306962490292	cached
decisionTree('gini',20,18,0.9434955147782088,17,'balanced')	0.7412530023659093	0.6800844669342041
decisionTree('gini',20,13,0.6809215181270325,12,'balanced')	0.7641157826242102	0.616912841796875
maxAbsScaler();extraTreesClassifier(87,'gini','sqrt',7,13,False,'balanced_subsample')	0.7652528884184391	1.29402756690979
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6818983554840088
varianceThreshold();maxAbsScaler();decisionTree('gini',20,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',20,13,0.6809215181270325,10,'balanced'),12,0.385035932223208,'SAMME')	0.7336430905352633	0.9998259544372559
decisionTree('entropy',22,19,0.3521998120845752,18,'None')	0.5	0.9399948120117188
varianceThreshold();robustScaler(False,False);pca(0.9037235461299293,False);multinomialNB(2.344642516224307,False)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8520548343658447
gaussianNB(0.007423321677204906)	0.4995316159250585	0.5549848079681396
decisionTree('gini',18,13,0.48039816293831483,17,'balanced')	0.7555483921911998	0.6831362247467041
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',15,13,0.4446146534872575,13,'balanced')	0.7293457416131164	cached
selectFwe(0.0038693159517440416);varianceThreshold();lda(0.003358821486063812,182,0.03220627187917296)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,13,0.6809215181270325,7,'balanced')	0.776306962490292	0.6673543453216553
decisionTree('gini',18,18,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6565558910369873
robustScaler(False,True);decisionTree('gini',15,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',20,8,0.34814361566277807,17,'balanced')	0.7257720091038032	0.6029260158538818
decisionTree('gini',28,19,0.7640133964035706,6,'balanced')	0.7765450027537305	cached
robustScaler(True,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',11,8,0.6809215181270325,11,'balanced')	0.7795392224184651	0.6874711513519287
decisionTree('gini',20,13,0.9790021047343852,12,'balanced')	0.7564632004645858	0.715735912322998
decisionTree('gini',18,13,0.6809215181270325,12,'balanced')	0.7641157826242102	0.7061431407928467
decisionTree('gini',20,13,0.9434955147782088,17,'balanced')	0.7412530023659093	0.7510986328125
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
decisionTree('gini',11,13,0.6809215181270325,12,'balanced')	0.7641157826242102	cached
robustScaler(True,True);decisionTree('gini',11,8,0.6809215181270325,12,'balanced')	0.7643505244082478	cached
fastICA(4,'deflation','unit-variance','logcosh');decisionTree('gini',18,8,0.9434955147782088,17,'balanced')	0.696099937928615	1.452282190322876
robustScaler(False,True);decisionTree('gini',28,8,0.7640133964035706,12,'balanced')	0.7643505244082478	0.7024343013763428
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5547747611999512
decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6891672611236572
minMaxScaler();decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0917096138000488
adaBoost(decisionTree('gini',18,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.9435329437255859
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9373354911804199
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8986141681671143
varianceThreshold();maxAbsScaler();decisionTree('gini',20,19,0.48039816293831483,18,'balanced')	0.753438464867696	cached
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,12,'balanced')	0.7643505244082478	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,13,0.9790021047343852,17,'balanced')	0.7412530023659093	cached
robustScaler(False,False);adaBoost(decisionTree('gini',8,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7452647829350669	1.0714921951293945
extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	1.3694779872894287
decisionTree('gini',20,15,0.48039816293831483,17,'balanced')	0.7555483921911998	cached
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8300998210906982
robustScaler(True,True);decisionTree('gini',15,8,0.48039816293831483,11,'balanced')	0.7901517500432301	0.8037576675415039
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6915614604949951
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6488876342773438
decisionTree('gini',18,15,0.6809215181270325,3,'balanced')	0.7303379542031124	0.5684840679168701
robustScaler(False,False);extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	0.9734885692596436
decisionTree('gini',20,9,0.6809215181270325,19,'balanced')	0.7893291892437586	0.727053165435791
selectFwe(0.004780405594005022);minMaxScaler();minMaxScaler();logisticRegression('l2','sag',1000,3.526797590984529,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',15,8,0.4822286022101796,12,'balanced')	0.7381482036781044	0.659888744354248
extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	1.1306145191192627
robustScaler(True,False);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.6261858940124512
robustScaler(False,True);multinomialNB(97.41731827286921,False)	0.5280242608157639	0.6841046810150146
varianceThreshold();maxAbsScaler();decisionTree('gini',28,19,0.7640133964035706,11,'balanced')	0.7795392224184651	0.6459674835205078
extraTreesClassifier(87,'gini','sqrt',7,13,False,'balanced_subsample')	0.7652528884184391	0.9407780170440674
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7093284130096436
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7335200309753418
adaBoost(decisionTree('gini',8,7,0.9498394255116724,15,'None'),30,1.863153435712633,'SAMME')	0.6461288945795987	1.9300684928894043
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',11,9,0.7710190208219242,19,'balanced')	0.7893291892437586	cached
minMaxScaler();decisionTree('gini',20,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
adaBoost(decisionTree('gini',26,11,0.5625032070682998,13,'None'),12,0.385035932223208,'SAMME')	0.6729028118037584	1.1106221675872803
varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,19,'balanced')	0.7893291892437586	0.6618697643280029
maxAbsScaler();varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,17,'balanced')	0.7555483921911998	0.5661866664886475
varianceThreshold();maxAbsScaler();robustScaler(True,False);fastICA(94,'deflation','arbitrary-variance','exp');randomForest(12,'gini',0.8329321450175162,4,10,False,'None')	0.5581519419547589	2.373563289642334
minMaxScaler();decisionTree('gini',2,12,0.8022357362295528,7,'balanced')	0.744346366325124	0.6252546310424805
adaBoost(decisionTree('gini',18,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	1.0336031913757324
robustScaler(True,True);decisionTree('gini',15,12,0.6809215181270325,11,'balanced')	0.7795392224184651	0.5384953022003174
varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6353371143341064
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6562039852142334
decisionTree('gini',15,19,0.5341917678196119,17,'balanced')	0.7555483921911998	0.6248424053192139
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6967504024505615
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',11,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,11,'balanced')	0.7795392224184651	cached
decisionTree('gini',18,13,0.48039816293831483,17,'balanced')	0.7555483921911998	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,2,0.6809215181270325,17,'balanced')	0.7984211978278013	0.583592414855957
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6555063724517822
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
selectPercentile(71.93978728203369);decisionTree('gini',27,10,0.12018208424596888,4,'balanced')	0.6910594815789921	0.9154341220855713
robustScaler(True,False);decisionTree('entropy',22,8,0.6809215181270325,17,'balanced')	0.7609452542377964	0.65108323097229
decisionTree('gini',30,18,0.5235160061054568,11,'balanced')	0.78015175004323	0.5615460872650146
decisionTree('gini',15,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7173285484313965
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6936349868774414
decisionTree('gini',22,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6052172183990479
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',9,8,0.48039816293831483,11,'balanced')	0.7794176484640581	cached
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.645829439163208
decisionTree('entropy',15,19,0.6809215181270325,6,'balanced')	0.7406785271989612	0.6552650928497314
adaBoost(decisionTree('gini',30,11,0.6809215181270325,17,'balanced'),12,0.385035932223208,'SAMME')	0.7057032907829491	0.8503541946411133
decisionTree('gini',15,13,0.4446146534872575,19,'balanced')	0.7606448427275027	0.7397561073303223
maxAbsScaler();decisionTree('gini',11,19,0.7710190208219242,17,'balanced')	0.7984211978278013	0.6481518745422363
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',20,19,0.7640133964035706,11,'balanced')	0.7795392224184651	0.8349311351776123
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9190711975097656
robustScaler(False,False);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7789361476898193
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
multinomialNB(9.628049933072903,False)	0.5811131568346992	0.5495204925537109
decisionTree('entropy',10,20,0.6074093764562615,11,'None')	0.5863071823889187	0.6735987663269043
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',18,11,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7459076065933603	cached
decisionTree('gini',15,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7060725688934326
decisionTree('gini',9,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1585843563079834
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',9,8,0.48039816293831483,11,'balanced')	0.7794176484640581	cached
adaBoost(decisionTree('gini',30,11,0.6809215181270325,17,'balanced'),12,0.385035932223208,'SAMME')	0.7057032907829491	cached
varianceThreshold();decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',21,10,0.7621893999844419,9,'None'),45,0.3221967231387735,'SAMME')	0.662874035069833	1.5645196437835693
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',18,8,0.4446146534872575,11,'balanced')	0.7901517500432301	0.6817214488983154
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.7817585468292236
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.706549882888794
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7589309215545654
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6604268550872803
varianceThreshold();maxAbsScaler();decisionTree('gini',8,19,0.7640133964035706,11,'balanced')	0.776956513047485	0.6076512336730957
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
mlpClassifier((82, 17),0.01953309826416185,0.043643136570295164,'lbfgs','logistic')	0.5	1.1616628170013428
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6682136058807373
decisionTree('gini',20,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5864434242248535
robustScaler(True,False);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6479370594024658
robustScaler(True,True);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6806106567382812
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'None')	0.5390632318501171	0.665532112121582
decisionTree('gini',28,15,0.48039816293831483,17,'balanced')	0.7555483921911998	0.7737441062927246
varianceThreshold();maxAbsScaler();varianceThreshold();maxAbsScaler();adaBoost(decisionTree('entropy',28,9,0.8969914291867527,13,'balanced'),80,0.4230947042422002,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',11,18,0.6809215181270325,11,'balanced')	0.7795392224184651	0.8731510639190674
robustScaler(True,True);decisionTree('gini',30,8,0.5235160061054568,11,'balanced')	0.7901517500432301	0.6003212928771973
adaBoost(decisionTree('gini',4,6,0.8092353838065002,5,'balanced'),35,1.1573535697722088,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.5493481159210205
varianceThreshold();varianceThreshold();kNN(21,'distance',2)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',20,19,0.7640133964035706,6,'balanced')	0.7765450027537305	0.7223796844482422
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	0.6353707313537598
robustScaler(True,True);decisionTree('gini',15,8,0.6809215181270325,11,'balanced')	0.7795392224184651	0.7561225891113281
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.9434955147782088,17,'balanced')	0.7412530023659093	0.6676006317138672
nystroem('rbf',1.1949678654034548,97,5,0.6874187640556333);selectFwe(0.04056412353626172);kNN(6,'uniform',1)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by KNeighborsClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by KNeighborsClassifier.)
adaBoost(decisionTree('entropy',15,19,0.11526087843615274,14,'None'),12,0.385035932223208,'SAMME')	0.6277128843603099	0.7368316650390625
fastICA(16,'deflation','arbitrary-variance','exp');minMaxScaler();fastICA(24,'parallel','unit-variance','logcosh');bernoulliNB(1.5194767363764647,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',28,8,0.7640133964035706,11,'balanced')	0.7795392224184651	0.700721025466919
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5145125389099121
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6851203441619873
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	0.9708421230316162
decisionTree('gini',28,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9478135108947754
minMaxScaler();nystroem('cosine',4.824381805501099,59,4,-0.5228159854995784);maxAbsScaler();varianceThreshold();gaussianNB(0.00818992474728273)	0.6210485066384397	1.3354406356811523
decisionTree('gini',15,18,0.3830425972358247,17,'balanced')	0.7257720091038032	0.6204726696014404
decisionTree('gini',18,15,0.7640133964035706,17,'balanced')	0.7984211978278013	0.7001852989196777
robustScaler(True,True);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	0.7246532440185547
robustScaler(True,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6056156158447266
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8436272144317627
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9920754432678223
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	1.0488636493682861
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
decisionTree('gini',15,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,13,0.9434955147782088,12,'balanced')	0.7564632004645858	0.887610673904419
robustScaler(True,False);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.840003252029419
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',18,19,0.4446146534872575,11,'balanced')	0.78015175004323	0.9061481952667236
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6379928588867188
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	cached
robustScaler(True,True);decisionTree('gini',15,8,0.48039816293831483,11,'balanced')	0.7901517500432301	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
decisionTree('gini',18,13,0.6809215181270325,11,'balanced')	0.7795392224184651	0.7650094032287598
robustScaler(True,True);decisionTree('gini',20,9,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6525554656982422
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.735612154006958
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6775321960449219
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',20,8,0.48039816293831483,11,'balanced')	0.7901517500432301	cached
robustScaler(True,False);decisionTree('gini',30,8,0.9434955147782088,12,'balanced')	0.7564632004645858	cached
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6987612247467041
gaussianNB(0.007689240268348625)	0.4995316159250585	0.4953653812408447
decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7239749431610107
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7076821327209473
selectPercentile(44.209561096785);maxAbsScaler();selectFwe(0.03215666796934082);bernoulliNB(23.82878886637317,False)	0.727340695939172	0.647911787033081
robustScaler(True,True);decisionTree('gini',28,9,0.9434955147782088,15,'balanced')	0.7622196467428515	0.5575246810913086
decisionTree('gini',30,13,0.7389624163029965,17,'balanced')	0.7984211978278013	0.7069613933563232
minMaxScaler();varianceThreshold();selectFwe(0.009859549862716643);adaBoost(decisionTree('entropy',28,7,0.3234461017474338,10,'None'),36,0.7821966237017752,'SAMME')	0.5	1.1331226825714111
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',15,12,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',30,13,0.6809215181270325,7,'balanced')	0.776306962490292	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(False,False);extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	1.3462321758270264
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9986586570739746
varianceThreshold();maxAbsScaler();decisionTree('gini',15,14,0.4446146534872575,11,'balanced')	0.78015175004323	0.8231194019317627
minMaxScaler();fastICA(11,'deflation','unit-variance','logcosh');selectFwe(0.027855535803361503);minMaxScaler();decisionTree('gini',15,12,0.6809215181270325,11,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',15,8,0.6809215181270325,11,'balanced')	0.7795392224184651	0.6285393238067627
decisionTree('gini',11,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5859787464141846
decisionTree('gini',30,18,0.5235160061054568,11,'balanced')	0.78015175004323	cached
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',20,19,0.6809215181270325,18,'balanced')	0.7895932575082887	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.580869197845459
varianceThreshold();maxAbsScaler();decisionTree('gini',18,19,0.4446146534872575,11,'balanced')	0.78015175004323	0.7054429054260254
robustScaler(False,False);decisionTree('gini',20,8,0.48039816293831483,17,'balanced')	0.7555483921911998	0.8769211769104004
robustScaler(True,True);decisionTree('gini',22,8,0.6809215181270325,11,'balanced')	0.7795392224184651	1.1269757747650146
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',18,9,0.6809215181270325,11,'balanced')	0.7795392224184651	cached
adaBoost(decisionTree('gini',15,12,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',11,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',11,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.950218915939331
maxAbsScaler();decisionTree('gini',20,19,0.7710190208219242,17,'balanced')	0.7984211978278013	0.7884719371795654
decisionTree('gini',15,15,0.4446146534872575,11,'balanced')	0.78015175004323	0.7318236827850342
varianceThreshold();maxAbsScaler();decisionTree('gini',18,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7885100841522217
decisionTree('entropy',30,14,0.6809215181270325,17,'balanced')	0.7609452542377964	0.5905218124389648
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.55462646484375
maxAbsScaler();varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',11,8,0.6809215181270325,11,'balanced')	0.7795392224184651	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',20,19,0.6809215181270325,18,'balanced')	0.7895932575082887	cached
varianceThreshold();decisionTree('gini',18,8,0.6809215181270325,19,'balanced')	0.7893291892437586	0.8236057758331299
adaBoost(decisionTree('gini',20,11,0.6809215181270325,17,'balanced'),12,0.385035932223208,'SAMME')	0.7057032907829491	0.8219735622406006
decisionTree('gini',28,19,0.7640133964035706,17,'balanced')	0.7984211978278013	0.7125344276428223
robustScaler(True,False);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7085793018341064
robustScaler(True,True);decisionTree('gini',11,8,0.7710190208219242,17,'balanced')	0.7984211978278013	0.5830016136169434
maxAbsScaler();decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6409246921539307
decisionTree('gini',18,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6442639827728271
decisionTree('gini',15,13,0.7640133964035706,7,'balanced')	0.776306962490292	0.6202387809753418
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8909242153167725
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.794633150100708
decisionTree('entropy',13,6,0.2772328397693429,2,'balanced')	0.6879339524479215	0.640296459197998
robustScaler(True,True);decisionTree('gini',20,9,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9285638332366943
decisionTree('entropy',14,19,0.6486453540726549,2,'balanced')	0.7218678189354707	0.5903949737548828
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
selectPercentile(20.601234070433165);gaussianNB(0.003483734694632006)	0.5	0.6456201076507568
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6951367855072021
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8113844394683838
decisionTree('gini',28,18,0.9434955147782088,15,'balanced')	0.7622196467428515	0.8103046417236328
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
selectPercentile(78.21877879687227);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7211284897662178	0.8217005729675293
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
adaBoost(decisionTree('gini',20,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	0.9783504009246826
decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7487571239471436
adaBoost(decisionTree('gini',30,12,0.6809215181270325,17,'balanced'),12,0.385035932223208,'SAMME')	0.7057032907829491	1.0118203163146973
decisionTree('gini',15,19,0.4446146534872575,19,'balanced')	0.7606448427275027	0.5993669033050537
minMaxScaler();decisionTree('gini',2,12,0.8022357362295528,7,'balanced')	0.744346366325124	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7167761325836182
decisionTree('gini',20,8,0.48039816293831483,17,'balanced')	0.7555483921911998	0.5637617111206055
decisionTree('gini',20,19,0.6809215181270325,18,'balanced')	0.7895932575082887	cached
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
extraTreesClassifier(87,'gini','sqrt',7,13,False,'balanced_subsample')	0.7652528884184391	cached
robustScaler(False,False);extraTreesClassifier(77,'gini','sqrt',17,18,False,'balanced_subsample')	0.7645271629778673	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,18,0.9434955147782088,17,'balanced')	0.7412530023659093	cached
varianceThreshold();varianceThreshold();minMaxScaler();maxAbsScaler();adaBoost(decisionTree('entropy',16,12,0.6038423869843317,15,'balanced'),25,0.21489876351261458,'SAMME.R')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',11,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5920670032501221
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,11,'balanced')	0.7795392224184651	0.7254762649536133
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('entropy',26,2,0.32951504311227897,2,'None'),17,1.8815039142079042,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('gini',27,11,0.19900587781412893,16,'balanced'),49,1.4454982500014832,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('gini',11,8,0.6809215181270325,11,'balanced')	0.7795392224184651	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',18,8,0.6809215181270325,19,'balanced')	0.7893291892437586	cached
decisionTree('gini',15,15,0.4446146534872575,11,'balanced')	0.78015175004323	cached
maxAbsScaler();fastICA(67,'parallel','arbitrary-variance','exp');adaBoost(decisionTree('gini',6,14,0.47387719726251964,12,'balanced'),92,0.8206953597341776,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
adaBoost(decisionTree('gini',15,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,18,0.7389624163029965,17,'balanced')	0.7984211978278013	0.7633581161499023
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.698753833770752
robustScaler(True,False);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6029493808746338
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.676788330078125
decisionTree('gini',20,13,0.6809215181270325,18,'balanced')	0.7895932575082887	0.7009732723236084
varianceThreshold();maxAbsScaler();decisionTree('gini',18,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7996160984039307
robustScaler(True,True);decisionTree('gini',15,9,0.6809215181270325,17,'balanced')	0.7984211978278013	0.562237024307251
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6494400501251221
adaBoost(decisionTree('gini',20,19,0.14052661246388487,12,'None'),20,0.3352208170052757,'SAMME')	0.6731392028274966	0.7797093391418457
decisionTree('entropy',25,13,0.4493014121504124,5,'balanced')	0.7069115337829259	0.7208430767059326
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
selectFwe(0.047171174390014524);nystroem('cosine',1.9214241449735854,10,4,0.7496170733558971);bernoulliNB(1.0600809441270935,False)	0.727340695939172	0.6929898262023926
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7228908538818359
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
selectFwe(0.03368766094662743);varianceThreshold();extraTreesClassifier(55,'entropy','sqrt',9,18,True,'None')	0.5	1.3751444816589355
robustScaler(True,True);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7525012493133545
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.70969557762146
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.580348014831543
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6183459758758545
robustScaler(True,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',20,8,0.48039816293831483,11,'balanced')	0.7901517500432301	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',15,8,0.48039816293831483,11,'balanced')	0.7901517500432301	0.8153488636016846
robustScaler(True,True);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6973791122436523
gaussianNB(0.0051711786561413784)	0.4995316159250585	0.5016613006591797
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',11,8,0.7710190208219242,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',11,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6104898452758789
robustScaler(True,False);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7286150455474854
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7300035953521729
robustScaler(True,True);decisionTree('gini',22,8,0.6809215181270325,11,'balanced')	0.7795392224184651	0.5258376598358154
adaBoost(decisionTree('gini',20,11,0.4446146534872575,19,'balanced'),12,0.385035932223208,'SAMME')	0.7650261929250616	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',3,2,0.06071007760057612,12,'balanced'),74,1.6860272440196338,'SAMME')	0.624991638854488	1.245056390762329
adaBoost(decisionTree('gini',20,11,0.6809215181270325,17,'balanced'),12,0.385035932223208,'SAMME')	0.7057032907829491	1.328254222869873
decisionTree('gini',20,13,0.4446146534872575,19,'balanced')	0.7606448427275027	0.676504373550415
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',20,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
extraTreesClassifier(87,'gini','sqrt',7,13,False,'balanced_subsample')	0.7652528884184391	cached
varianceThreshold();decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5535697937011719
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	0.6747612953186035
robustScaler(True,False);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5430655479431152
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	0.6657466888427734
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',9,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
adaBoost(decisionTree('entropy',24,2,0.8393102379475685,4,'balanced'),75,0.7163190128051495,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,11,'balanced')	0.7901517500432301	0.6716125011444092
varianceThreshold();maxAbsScaler();decisionTree('gini',30,14,0.6809215181270325,17,'balanced')	0.7984211978278013	0.5924718379974365
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7454609870910645
robustScaler(True,False);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6327104568481445
decisionTree('gini',30,13,0.5235160061054568,11,'balanced')	0.78015175004323	0.6662893295288086
maxAbsScaler();gaussianNB(0.007361784895267127)	0.4990621323569835	0.6330289840698242
decisionTree('gini',28,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.63150954246521
decisionTree('gini',20,8,0.7640133964035706,11,'balanced')	0.7795392224184651	0.5968561172485352
maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6274154186248779
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8063020706176758
varianceThreshold();decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.4446146534872575,11,'balanced')	0.78015175004323	cached
adaBoost(decisionTree('entropy',4,2,0.12149819266980899,9,'balanced'),30,1.921750084508729,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7845380306243896
maxAbsScaler();varianceThreshold();decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6621584892272949
robustScaler(True,True);decisionTree('gini',11,8,0.7710190208219242,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',18,12,0.6809215181270325,19,'balanced'),12,0.385035932223208,'SAMME')	0.7459076065933603	0.8552606105804443
varianceThreshold();decisionTree('gini',15,8,0.4446146534872575,19,'balanced')	0.7606448427275027	0.713536262512207
varianceThreshold();decisionTree('gini',28,19,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6043167114257812
robustScaler(True,False);decisionTree('gini',20,8,0.6809215181270325,18,'balanced')	0.7895932575082887	0.6411409378051758
maxAbsScaler();decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',29,15,0.04444411747965327,17,'balanced')	0.6858021851926261	0.7084228992462158
nystroem('poly',4.639747305751814,97,2,-0.6231176426966107);decisionTree('gini',20,9,0.6809215181270325,17,'balanced')	0.653191698626933	2.6606664657592773
decisionTree('gini',15,15,0.6809215181270325,17,'None')	0.5390632318501171	0.6085138320922852
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6638052463531494
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6692302227020264
maxAbsScaler();varianceThreshold();decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	0.7125248908996582
maxAbsScaler();varianceThreshold();mlpClassifier((18, 20),0.08082565654933044,0.3781549331548074,'sgd','relu')	0.509090909090909	1.327075481414795
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,15,0.48039816293831483,17,'balanced')	0.7555483921911998	0.6856124401092529
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7099103927612305
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6662237644195557
decisionTree('gini',8,13,0.6809215181270325,8,'balanced')	0.7562765365166658	0.6766605377197266
robustScaler(True,False);decisionTree('gini',20,9,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6340315341949463
robustScaler(True,True);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	0.7218079566955566
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.676227331161499
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9516732692718506
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',11,8,0.6809215181270325,11,'balanced')	0.7795392224184651	cached
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,11,'balanced')	0.7901517500432301	0.8790771961212158
decisionTree('gini',30,19,0.5235160061054568,19,'balanced')	0.7606448427275027	0.6625962257385254
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',20,14,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6353182792663574
minMaxScaler();logisticRegression('l1','lbfgs',1000,9.94947087487367,'None')	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)	eval_error (Solver lbfgs supports only 'l2' or None penalties, got l1 penalty.)
decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,19,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,19,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',11,8,0.7710190208219242,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',20,8,0.48039816293831483,11,'balanced')	0.7901517500432301	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6718785762786865
robustScaler(True,False);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7495601177215576
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',1,8,0.6809215181270325,2,'balanced')	0.727340695939172	0.618781566619873
decisionTree('gini',11,13,0.6809215181270325,11,'balanced')	0.7795392224184651	0.8189291954040527
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9216842651367188
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1389408111572266
decisionTree('gini',18,19,0.6809215181270325,18,'balanced')	0.7895932575082887	1.1291427612304688
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2931106090545654
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	1.1972062587738037
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.5741024017333984
decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	1.3962671756744385
adaBoost(decisionTree('entropy',29,8,0.01221666114083575,15,'None'),29,0.6664803987067167,'SAMME')	0.6542824857740581	1.654670000076294
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9635293483734131
decisionTree('gini',28,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2293713092803955
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4463222026824951
decisionTree('gini',18,8,0.7640133964035706,17,'balanced')	0.7984211978278013	1.116243839263916
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,18,0.7389624163029965,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.5285453796386719
decisionTree('gini',11,13,0.6809215181270325,8,'balanced')	0.7774801216639129	0.893157958984375
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',30,8,0.5235160061054568,11,'balanced')	0.7901517500432301	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',27,11,0.7113958957787134,19,'balanced'),49,0.11685134058531436,'SAMME')	0.7101258120006678	2.6069884300231934
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2689101696014404
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.3810582160949707
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4115815162658691
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1841728687286377
robustScaler(True,True);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4978611469268799
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	1.743947982788086
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'None')	0.5390632318501171	1.1717631816864014
decisionTree('gini',7,15,0.6809215181270325,17,'balanced')	0.7993634634433526	1.1382710933685303
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',11,8,0.7710190208219242,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',20,14,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',22,18,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4604830741882324
decisionTree('gini',20,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1452229022979736
robustScaler(True,False);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.7527050971984863
robustScaler(True,True);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	2.0912792682647705
decisionTree('gini',15,15,0.4446146534872575,11,'balanced')	0.78015175004323	cached
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,11,'balanced')	0.7901517500432301	cached
decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1754417419433594
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.869215965270996
decisionTree('gini',9,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2179431915283203
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	1.2154743671417236
kNN(3,'uniform',2)	0.5541978048119816	1.495927095413208
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.5554709434509277
selectFwe(0.04311240549831517);logisticRegression('None','sag',1000,6.64145720708895,'None')	0.5	1.5971906185150146
decisionTree('gini',28,8,0.8753521487697868,11,'balanced')	0.7490083371565708	1.0840489864349365
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1694715023040771
decisionTree('gini',15,15,0.6809215181270325,17,'balanced')	0.7984211978278013	2.175679922103882
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.2304942607879639
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	1.0814704895019531
decisionTree('gini',10,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2109143733978271
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',15,9,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.4446146534872575,17,'balanced')	0.7555483921911998	1.7165937423706055
varianceThreshold();decisionTree('gini',7,8,0.6809215181270325,19,'balanced')	0.7907392891876844	1.5158915519714355
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.7977778911590576
maxAbsScaler();varianceThreshold();decisionTree('entropy',5,9,0.3726419301711068,1,'balanced')	0.6964994337610362	2.126887321472168
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',11,19,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2101459503173828
robustScaler(True,True);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	1.8610353469848633
varianceThreshold();maxAbsScaler();decisionTree('gini',30,14,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',25,15,0.04444411747965327,17,'None')	0.5172428510456679	1.8699748516082764
robustScaler(True,False);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2492196559906006
robustScaler(True,False);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	1.6356720924377441
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.5003154277801514
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0186054706573486
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,11,'balanced')	0.7795392224184651	1.7386438846588135
decisionTree('gini',30,13,0.5235160061054568,17,'balanced')	0.7555483921911998	1.3526179790496826
robustScaler(True,False);decisionTree('gini',15,8,0.7640133964035706,17,'balanced')	0.7984211978278013	1.1641004085540771
robustScaler(True,True);decisionTree('gini',28,8,0.44112365569342216,11,'balanced')	0.7391673238636989	2.2206289768218994
varianceThreshold();maxAbsScaler();decisionTree('gini',30,19,0.6809215181270325,11,'balanced')	0.7795392224184651	2.3923707008361816
decisionTree('gini',15,18,0.4446146534872575,17,'balanced')	0.7555483921911998	1.816375494003296
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.88142728805542
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.1734459400177002
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.3343496322631836
decisionTree('gini',24,18,0.6809215181270325,16,'balanced')	0.7521371647670424	1.7470760345458984
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',15,8,0.4446146534872575,11,'balanced')	0.7901517500432301	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4121403694152832
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.515873670578003
varianceThreshold();maxAbsScaler();decisionTree('gini',30,14,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('gini',12,10,0.28095237768577486,19,'None'),60,0.4536715181742897,'SAMME')	0.6640477439900206	2.9372806549072266
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
pca(0.8628288395006898,False);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.6393861030065141	1.5534214973449707
decisionTree('gini',28,15,0.7640133964035706,17,'balanced')	0.7984211978278013	2.07681941986084
varianceThreshold();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	1.5980768203735352
decisionTree('gini',20,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',11,8,0.7710190208219242,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('entropy',24,8,0.245454167152662,5,'balanced')	0.7133021377145136	1.2342233657836914
decisionTree('gini',20,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.6251819133758545
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2348248958587646
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);gaussianNB(0.009418287040174611)	0.4995316159250585	1.486086130142212
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',18,16,0.6809215181270325,2,'balanced')	0.7489610289656469	1.329728364944458
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',28,19,0.7640133964035706,17,'balanced')	0.7984211978278013	1.2367055416107178
decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1904067993164062
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9826560020446777
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.002647876739502
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',11,8,0.7710190208219242,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0401713848114014
decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	2.2334351539611816
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4370436668395996
decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4753515720367432
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0511305332183838
robustScaler(True,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.7826848030090332
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	1.78055739402771
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.8708570003509521
decisionTree('gini',30,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.8359625339508057
robustScaler(True,False);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.5199148654937744
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,3,0.26820076082764444,20,'None')	0.4990610328638498	1.325652837753296
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.8644213676452637
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	1.2382574081420898
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',11,8,0.7710190208219242,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.5493052005767822
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.456650733947754
robustScaler(True,False);decisionTree('gini',15,9,0.6809215181270325,13,'None')	0.5185948477751756	1.6910090446472168
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1466591358184814
decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	1.5922245979309082
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',9,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.5098509788513184
selectPercentile(29.233716564043558);maxAbsScaler();minMaxScaler();decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.6937376169585822	1.4149501323699951
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4555962085723877
decisionTree('gini',7,15,0.49480187167798906,17,'balanced')	0.7503840729423736	1.6458606719970703
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.130162239074707
decisionTree('entropy',4,11,0.006037299066386503,1,'None')	0.5190632318501172	1.2877893447875977
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	1.283487319946289
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4519834518432617
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.6839942932128906
robustScaler(True,False);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.37857985496521
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.196415662765503
adaBoost(decisionTree('entropy',17,13,0.08854707802353001,14,'balanced'),20,0.07048649057254763,'SAMME')	0.7360931710481469	1.2306983470916748
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',11,8,0.7710190208219242,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('entropy',20,13,0.6809215181270325,17,'balanced')	0.7609452542377964	0.8835015296936035
decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',20,14,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8677542209625244
decisionTree('gini',28,19,0.7640133964035706,17,'balanced')	0.7984211978278013	1.1081056594848633
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();varianceThreshold();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	0.8417403697967529
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.054426670074463
qda(0.01753646502801498)	0.4990626821035503	0.9736535549163818
decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1721339225769043
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.24772047996521
decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('entropy',8,8,0.39427831769324917,17,'balanced')	0.7183585667007512	0.8896310329437256
maxAbsScaler();decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
varianceThreshold();maxAbsScaler();decisionTree('gini',28,19,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
robustScaler(True,True);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',15,8,0.4446146534872575,11,'balanced')	0.78015175004323	0.8857278823852539
robustScaler(True,True);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	0.8301653861999512
robustScaler(True,False);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9484012126922607
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.6176955699920654
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,3,0.6809215181270325,17,'balanced')	0.7984211978278013	0.972071647644043
nystroem('sigmoid',1.088060717491195,77,5,-0.07152848854804494);nystroem('rbf',0.3183644207280674,25,5,-0.993984779564087);minMaxScaler();lda(0.37970735936906574,186,0.02600500357320143)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,False);decisionTree('entropy',13,8,0.28603843982240384,17,'balanced')	0.6916350262528974	0.872194766998291
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.8687801361083984
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2535104751586914
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.8680229187011719
varianceThreshold();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	1.163463830947876
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8041179180145264
fastICA(15,'deflation','unit-variance','cube');kNN(1,'distance',2)	0.6912618183017629	2.326430320739746
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('entropy',27,3,0.8044833409194719,8,'balanced')	0.6803547064803126	0.8476884365081787
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.834972620010376
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.040663480758667
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0784356594085693
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8631417751312256
decisionTree('gini',18,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.548663854598999
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.5041120052337646
decisionTree('gini',11,13,0.7710190208219242,17,'balanced')	0.7984211978278013	1.2462646961212158
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.3777525424957275
robustScaler(True,False);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	1.8787541389465332
robustScaler(True,True);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.3315603733062744
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1486363410949707
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.340649127960205
robustScaler(True,False);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2386682033538818
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	1.0398802757263184
decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0175683498382568
robustScaler(True,True);decisionTree('gini',18,10,0.6809215181270325,17,'balanced')	0.7984211978278013	1.3972444534301758
decisionTree('gini',18,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
selectPercentile(79.80677224512529);maxAbsScaler();randomForest(99,'gini',0.8415790483570111,14,15,True,'None')	0.5	5.018386602401733
multinomialNB(2.3454993386307765,True)	0.5888818854508071	1.142413854598999
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	1.2889013290405273
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
pca(0.9888838505063879,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.6321802748932742	1.2072484493255615
decisionTree('gini',22,18,0.9591131532901229,17,'balanced')	0.7412530023659093	1.5995514392852783
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',20,5,0.22207238526430018,17,'balanced')	0.6858021851926261	1.4182403087615967
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,15,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1870100498199463
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	1.289046287536621
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9373066425323486
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4607393741607666
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9619581699371338
decisionTree('gini',11,13,0.7710190208219242,17,'balanced')	0.7984211978278013	1.1973083019256592
robustScaler(True,False);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0002529621124268
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	1.604663610458374
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,18,0.6809215181270325,17,'balanced')	0.8000643903160644	1.3043696880340576
varianceThreshold();minMaxScaler();maxAbsScaler();minMaxScaler();bernoulliNB(43.35441849498269,False)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',16,13,0.6141762206563564,8,'balanced')	0.7388327980800851	1.1182289123535156
pca(0.8000907724044237,False);selectFwe(0.025720149720641183);adaBoost(decisionTree('gini',14,19,0.20891765551818353,13,'balanced'),63,1.5272437577217197,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();minMaxScaler();logisticRegression('l2','lbfgs',1000,0.1267742241827562,'balanced')	0.7017825182590827	2.742598533630371
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',9,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,6,0.6809215181270325,17,'balanced')	0.7984211978278013	1.177720546722412
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	0.8811538219451904
robustScaler(True,True);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0748517513275146
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',7,15,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	1.4592788219451904
decisionTree('gini',28,11,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1038775444030762
robustScaler(False,False);decisionTree('gini',11,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.173722505569458
varianceThreshold();decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0004682540893555
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
maxAbsScaler();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9868075847625732
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1350889205932617
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.232161045074463
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.0732219219207764
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',18,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	1.0790019035339355
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(False,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1240272521972656
decisionTree('gini',11,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.016493797302246
varianceThreshold();maxAbsScaler();decisionTree('gini',28,19,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
adaBoost(decisionTree('entropy',16,20,0.9989545358437261,19,'balanced'),51,0.7359934529798878,'SAMME')	0.6719660436538756	3.710566759109497
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(False,False);decisionTree('gini',11,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8833262920379639
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9136059284210205
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.1090552806854248
decisionTree('gini',28,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7038004398345947
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.1150131225585938
decisionTree('gini',8,13,0.3510649853493034,17,'balanced')	0.7255329992873285	0.8803222179412842
decisionTree('gini',8,19,0.8340815657250396,17,'balanced')	0.7395810331437207	0.6892497539520264
robustScaler(True,False);decisionTree('gini',22,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6874532699584961
robustScaler(True,False);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7303707599639893
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	0.7445077896118164
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();pca(0.9018826161224224,True);fastICA(29,'parallel','arbitrary-variance','cube');adaBoost(decisionTree('gini',12,11,0.11986909978968074,14,'balanced'),12,0.4711609355922555,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
minMaxScaler();maxAbsScaler();decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	0.5889179706573486
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7251136302947998
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2504069805145264
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6149744987487793
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7192072868347168
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6073124408721924
maxAbsScaler();decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6669909954071045
decisionTree('gini',11,13,0.7710190208219242,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,16,0.5460092107966259,16,'balanced')	0.7390081172579441	0.6801407337188721
maxAbsScaler();decisionTree('gini',18,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6288068294525146
robustScaler(True,True);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7054986953735352
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',15,8,0.48039816293831483,11,'balanced')	0.7901517500432301	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9525249004364014
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0407426357269287
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.125455379486084
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.8303430080413818
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.3812165260314941
bernoulliNB(0.7823204639436421,False)	0.7106226829431631	0.7246041297912598
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9410526752471924
decisionTree('entropy',5,3,0.6792627381536749,13,'balanced')	0.7059890990253492	1.2715444564819336
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.771019697189331
decisionTree('gini',20,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4253737926483154
decisionTree('gini',22,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8842103481292725
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9379632472991943
robustScaler(True,True);adaBoost(decisionTree('entropy',24,6,0.035428914120438026,12,'None'),98,1.257936806730505,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',15,13,0.7640133964035706,17,'balanced')	0.7984211978278013	0.9344449043273926
robustScaler(True,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	1.3491907119750977
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.5217485427856445
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4299063682556152
decisionTree('gini',7,3,0.6809215181270325,17,'balanced')	0.7993634634433526	1.3272626399993896
robustScaler(True,True);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1358387470245361
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2404849529266357
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.721421718597412
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.4133517742156982
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',28,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',22,17,0.03699336527012542,17,'None')	0.5172428510456679	1.3833916187286377
robustScaler(True,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1165754795074463
varianceThreshold();decisionTree('gini',7,19,0.6809215181270325,17,'balanced')	0.7993634634433526	1.1953487396240234
adaBoost(decisionTree('entropy',16,5,0.1633044641576482,7,'None'),32,1.559690866899389,'SAMME')	0.6547514195955664	1.9215190410614014
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.540142297744751
decisionTree('entropy',1,15,0.8889938089163069,8,'balanced')	0.727340695939172	0.8660619258880615
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
maxAbsScaler();decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8451757431030273
varianceThreshold();nystroem('cosine',2.246031907812093,28,3,-0.9523517126455419);minMaxScaler();selectFwe(0.025817143762890887);randomForest(22,'entropy',0.6641377926915194,16,6,False,'balanced_subsample')	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by RandomForestClassifier.)	eval_error (Found array with 0 feature(s) (shape=(1748, 0)) while a minimum of 1 is required by RandomForestClassifier.)
maxAbsScaler();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9065055847167969
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0207428932189941
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9175341129302979
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.154233455657959
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	2.181628465652466
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.7362751960754395
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	1.303952693939209
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2282443046569824
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0745205879211426
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1465497016906738
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6191505166663637,17,'balanced')	0.7721572754959963	1.4114739894866943
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.976384162902832
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1546077728271484
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('entropy',30,14,0.7490962697956126,3,'balanced')	0.7316916001723205	1.0242409706115723
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9367473125457764
decisionTree('gini',18,19,0.7640133964035706,17,'balanced')	0.7984211978278013	0.9683148860931396
decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9270322322845459
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
maxAbsScaler();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	1.0507452487945557
decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0983059406280518
robustScaler(True,True);decisionTree('gini',22,8,0.4446146534872575,11,'balanced')	0.7901517500432301	0.7605018615722656
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.654604434967041
decisionTree('gini',18,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7294712066650391
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7259085178375244
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',9,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,4,'balanced')	0.7439043201084301	0.6790459156036377
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7278873920440674
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	1.0909512042999268
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7661144733428955
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
adaBoost(decisionTree('gini',30,17,0.257562521468935,7,'balanced'),64,0.22686562576098546,'SAMME')	0.6724355272219507	1.511080265045166
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',11,2,0.2787936444588919,17,'None')	0.5167733674775928	0.6271791458129883
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	0.6313800811767578
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6799404621124268
adaBoost(decisionTree('entropy',13,4,0.9621035398325625,12,'None'),12,0.486992337037507,'SAMME')	0.6547226428616408	0.9826457500457764
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.6290309429168701
varianceThreshold();maxAbsScaler();decisionTree('gini',18,19,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6922578811645508
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	0.6372754573822021
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
kNN(5,'uniform',2)	0.5274493658423467	0.7657318115234375
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6912357807159424
maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8018698692321777
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);adaBoost(decisionTree('gini',12,9,0.23725528156569942,20,'None'),65,0.7011436169519536,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	0.660294771194458
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.219841480255127
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	0.791499137878418
robustScaler(True,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	0.826829195022583
varianceThreshold();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	0.703866720199585
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
adaBoost(decisionTree('entropy',27,4,0.2678518741236642,17,'balanced'),33,0.06335089941005902,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
gaussianNB(0.002184413474901753)	0.4995316159250585	0.5987823009490967
decisionTree('gini',7,3,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',18,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,20,0.907419627640734,17,'balanced')	0.7412530023659093	0.7376582622528076
gaussianNB(0.0014058930342124637)	0.4995316159250585	0.7993772029876709
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6168702706211728,17,'None')	0.5395316159250585	1.5632836818695068
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',20,10,0.14456751784584587,12,'None')	0.5192974238875878	1.6928179264068604
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('entropy',3,19,0.18726020286570388,12,'None')	0.5	0.9091982841491699
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
lda(0.023369705075460767,88,0.02477345454221232)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
adaBoost(decisionTree('gini',2,17,0.2896835795917305,19,'None'),87,1.2356267853673764,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',17,6,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6263327598571777
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.8500597476959229
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.8969721794128418
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.46448138729169874,17,'balanced')	0.766751977338447	1.0977282524108887
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	1.0116920471191406
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.8858904838562012
robustScaler(True,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',18,19,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,False);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,3,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,13,0.6809215181270325,12,'balanced')	0.7600428202598601	1.1945879459381104
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.004603624343872
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	1.4286179542541504
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.847186803817749
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
maxAbsScaler();varianceThreshold();fastICA(8,'deflation','unit-variance','logcosh');varianceThreshold();kNN(9,'uniform',1)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',22,19,0.6809215181270325,17,'balanced')	0.7984211978278013	3.301356554031372
decisionTree('gini',30,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.351759672164917
robustScaler(False,False);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4097199440002441
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1952762603759766
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	1.2151532173156738
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('entropy',8,13,0.6809215181270325,17,'balanced')	0.763762155646247	0.9840834140777588
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
gaussianNB(0.008337412118275333)	0.4995316159250585	1.4520151615142822
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
adaBoost(decisionTree('entropy',1,20,0.4903085476540615,8,'balanced'),85,0.11145734718968187,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
minMaxScaler();maxAbsScaler();decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
selectFwe(0.008875570295132421);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.6896016936192415	1.1451692581176758
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.578552007675171
decisionTree('gini',12,13,0.6809215181270325,8,'None')	0.5970103082478977	1.4581294059753418
robustScaler(True,False);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4920878410339355
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	1.0336644649505615
decisionTree('gini',25,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.8306853771209717
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.7099359035491943
decisionTree('entropy',1,11,0.969921304691191,13,'balanced')	0.727340695939172	1.0618956089019775
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1112828254699707
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.957364797592163
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,6,0.6809215181270325,17,'balanced')	0.7993634634433526	1.0608537197113037
robustScaler(True,True);decisionTree('gini',6,10,0.6809215181270325,9,'None')	0.597479242069406	1.1030998229980469
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.0396225452423096
decisionTree('gini',18,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.062751054763794
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9133529663085938
decisionTree('gini',9,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.07761812210083
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9785192012786865
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.1695876121520996
decisionTree('gini',26,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.3942975997924805
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4608559608459473
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',3,7,0.7806300808028726,7,'balanced')	0.775858249347051	1.0114219188690186
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2785468101501465
decisionTree('gini',7,19,0.6809215181270325,17,'balanced')	0.7993634634433526	0.938927173614502
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0402717590332031
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.234539270401001
maxAbsScaler();decisionTree('gini',9,19,0.6809215181270325,17,'balanced')	0.7984211978278013	2.1210455894470215
decisionTree('gini',18,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
varianceThreshold();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.5886290073394775
decisionTree('gini',30,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',25,3,0.6809215181270325,3,'balanced')	0.7378104693736187	1.2647576332092285
maxAbsScaler();decisionTree('gini',15,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.5757774753245242,17,'balanced')	0.7721572754959963	1.2152760028839111
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.0848066806793213
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9082334041595459
decisionTree('gini',8,6,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9172768592834473
decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	0.9358260631561279
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9820237159729004
decisionTree('gini',30,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.3607215881347656
varianceThreshold();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	1.1392207145690918
decisionTree('gini',6,16,0.6809215181270325,17,'balanced')	0.8044659611918906	0.8748860359191895
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9635303020477295
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',14,4,0.16609165584628094,2,'balanced')	0.7084294640170882	1.3377840518951416
robustScaler(True,False);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	1.007164478302002
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);selectFwe(0.02835849835131226);extraTreesClassifier(65,'gini','sqrt',20,1,True,'balanced')	0.7224199144194526	1.8136544227600098
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9777886867523193
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
maxAbsScaler();decisionTree('gini',9,19,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.3529384136199951
decisionTree('gini',30,6,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4673426151275635
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',18,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,False);maxAbsScaler();varianceThreshold();extraTreesClassifier(60,'gini','sqrt',13,8,True,'None')	0.5	2.202915906906128
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',23,19,0.0571272954251012,12,'None')	0.5192974238875878	1.4244022369384766
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.1979515552520752
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.1801502704620361
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.4157674312591553
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.0782196521759033
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.076521396636963
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.072847843170166
selectFwe(0.027324750853126432);decisionTree('entropy',3,11,0.32701037362961427,5,'balanced')	0.7219537293307785	1.7080111503601074
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.489790439605713
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',15,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	2.4688503742218018
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	1.6877610683441162
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	1.960106611251831
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.5682711601257324
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
varianceThreshold();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,False);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	1.182399034500122
decisionTree('gini',7,19,0.6809215181270325,17,'balanced')	0.7993634634433526	1.956071138381958
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.302180528640747
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2248501777648926
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.089087724685669
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9678494930267334
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
kNN(3,'distance',1)	0.6339907402687361	0.9617898464202881
decisionTree('entropy',5,5,0.9957807819353841,5,'balanced')	0.7233838500451292	1.323772668838501
selectFwe(0.042701617141362114);pca(0.961929973700214,True);kNN(32,'distance',2)	0.499296874141021	1.0384385585784912
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	0.8157331943511963
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9632961750030518
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9975240230560303
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.4318671226501465
robustScaler(True,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	1.405867338180542
robustScaler(True,True);adaBoost(decisionTree('entropy',17,3,0.3763044948139094,14,'balanced'),70,0.3494707272319126,'SAMME')	0.6810569527447846	3.087805986404419
decisionTree('gini',18,6,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0729012489318848
decisionTree('gini',17,19,0.7640133964035706,17,'balanced')	0.7984211978278013	0.9911749362945557
decisionTree('gini',18,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);varianceThreshold();varianceThreshold();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',7,15,0.6809215181270325,17,'balanced')	0.7993634634433526	1.0463035106658936
decisionTree('entropy',12,3,0.9427946182520254,6,'None')	0.6244602238368111	0.910102367401123
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
minMaxScaler();nystroem('poly',0.9912780172782991,93,3,0.689699346447975);minMaxScaler();adaBoost(decisionTree('entropy',23,4,0.9395535298687078,16,'balanced'),19,0.4239638574452407,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.1239404678344727
decisionTree('gini',7,15,0.6809215181270325,17,'balanced')	0.7993634634433526	1.0249671936035156
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7307817935943604
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9421906471252441
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',17,8,0.6809215181270325,1,'balanced')	0.7508593638332729	1.0303096771240234
decisionTree('gini',15,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.970923900604248
robustScaler(True,True);adaBoost(decisionTree('gini',15,15,0.3811224948073897,14,'None'),42,0.5562435201847166,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',18,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.613156795501709
decisionTree('gini',28,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7596795558929443
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7304761409759521
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',28,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9030122756958008
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9215455055236816
robustScaler(True,True);decisionTree('gini',30,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6214396953582764
decisionTree('gini',18,13,0.4446146534872575,11,'balanced')	0.78015175004323	0.6332225799560547
decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6521890163421631
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	0.6268157958984375
robustScaler(True,False);decisionTree('gini',8,8,0.8859336404109198,17,'balanced')	0.7395810331437207	0.6739065647125244
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.6589317321777344
decisionTree('gini',22,19,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9081883430480957
minMaxScaler();varianceThreshold();nystroem('cosine',0.35453895227723586,37,4,0.26883224747291834);decisionTree('gini',11,2,0.6731249265501416,8,'None')	0.5763071823889188	1.2399747371673584
varianceThreshold();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	0.6816504001617432
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	0.7156276702880859
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	0.7194693088531494
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',22,6,0.6809215181270325,17,'balanced')	0.7984211978278013	0.6111040115356445
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.78399658203125
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',13,11,0.9923244343187863,13,'balanced')	0.7550818772545856	0.709550142288208
robustScaler(True,True);adaBoost(decisionTree('gini',22,10,0.22544692248400355,14,'None'),85,0.2824234806348893,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
adaBoost(decisionTree('gini',17,6,0.07179042984629991,18,'balanced'),13,1.498307145969238,'SAMME')	0.6598561163303718	1.8633029460906982
varianceThreshold();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,19,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',8,6,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2695698738098145
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.1494648456573486
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9852404594421387
robustScaler(True,True);decisionTree('gini',25,17,0.0035377186644890424,10,'balanced')	0.6137650343191788	1.1902313232421875
decisionTree('gini',7,18,0.3916844106026426,16,'balanced')	0.6883610955349584	0.8975667953491211
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('entropy',8,8,0.6809215181270325,17,'None')	0.5851633496957902	1.0209908485412598
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',18,17,0.21064549776827834,18,'None')	0.5	0.8594732284545898
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2644813060760498
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.1415278911590576
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9516401290893555
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.8918814659118652
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9888839721679688
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9417545795440674
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
varianceThreshold();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.1696715354919434
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.2773404121398926
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	1.0311503410339355
decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	1.1261205673217773
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9499008655548096
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.080303430557251
robustScaler(True,True);decisionTree('gini',7,8,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.2558131217956543
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.867872953414917
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
extraTreesClassifier(58,'gini','log2',5,17,True,'None')	0.5	1.961705207824707
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',6,13,0.20923899580632355,17,'balanced')	0.7170482907379697	0.8752908706665039
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
varianceThreshold();adaBoost(decisionTree('gini',17,5,0.3291221895983055,16,'None'),20,0.2556436338874084,'SAMME')	0.6360995680991064	1.6646509170532227
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();qda(0.2205186561178455)	0.5	1.5161964893341064
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.4833636283874512
randomForest(35,'entropy',0.9888847548545157,20,10,True,'balanced')	0.6728552837142077	2.2329022884368896
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,5,'balanced')	0.7739943685960771	1.551823616027832
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.308429479598999
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.5315401554107666
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	2.4337141513824463
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.9990663528442383
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.8601718627334136,17,'balanced')	0.7087794226861417	1.7866275310516357
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',28,3,0.8728601295981886,5,'None'),64,0.3825402473826984,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,15,'balanced')	0.7561151309246437	1.0699338912963867
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	1.1495606899261475
decisionTree('gini',8,13,0.6809215181270325,17,'None')	0.5390632318501171	0.9610817432403564
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.133824110031128
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.137223720550537
decisionTree('gini',8,13,0.1704771900210318,17,'balanced')	0.6749877406515596	1.4459350109100342
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.641981840133667
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1294665336608887
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9553866386413574
robustScaler(True,True);decisionTree('gini',28,8,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9438574314117432
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',30,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('entropy',15,4,0.5386718820009867,16,'balanced')	0.7544271590796643	1.1107823848724365
decisionTree('gini',20,15,0.6809215181270325,17,'balanced')	0.7984211978278013	0.9220089912414551
decisionTree('gini',8,18,0.6809215181270325,17,'balanced')	0.8000643903160644	1.2927196025848389
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',10,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.298948049545288
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',7,13,0.6809215181270325,17,'balanced')	0.7993634634433526	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',18,8,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.509211540222168
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	0.8392562866210938
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.679891586303711
varianceThreshold();decisionTree('gini',8,20,0.6809215181270325,17,'balanced')	0.8000643903160644	1.4786841869354248
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2458362579345703
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.2846534252166748
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	1.3764185905456543
decisionTree('entropy',8,13,0.6809215181270325,17,'balanced')	0.763762155646247	0.9351427555084229
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	1.0338027477264404
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.0820074081420898
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.15899658203125
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.0474371910095215
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.021925687789917
decisionTree('gini',7,13,0.4136612787974904,17,'balanced')	0.7046848302932348	0.9604842662811279
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,8,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',8,20,0.6809215181270325,17,'balanced')	0.8000643903160644	0.8323948383331299
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2532660961151123
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',11,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0630950927734375
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.159803867340088
adaBoost(decisionTree('entropy',21,9,0.8316836215029365,16,'None'),20,0.6687922371787705,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();decisionTree('gini',12,8,0.0883172110483803,18,'balanced')	0.6951311345469737	0.9931490421295166
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',22,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.970862627029419
varianceThreshold();decisionTree('gini',8,20,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9778590202331543
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	0.9836795330047607
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',30,8,0.9342955176489515,12,'balanced')	0.7564632004645858	1.147953748703003
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.6225254535675049
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.459151268005371
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	1.4760668277740479
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.9744961261749268
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.414867877960205
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.1238725185394287
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
fastICA(71,'parallel','arbitrary-variance','logcosh');lda(0.5199367222925582,202,0.05376670887550117)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',23,8,0.5848991841696696,17,'None')	0.5395316159250585	0.9856669902801514
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	1.0055205821990967
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.4912564754486084
varianceThreshold();decisionTree('gini',8,20,0.7640133964035706,17,'balanced')	0.8000643903160644	1.6575489044189453
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.4221575260162354
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
selectPercentile(5.007006469863982);decisionTree('gini',8,20,0.6809215181270325,17,'balanced')	0.6896016936192415	2.0794215202331543
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
varianceThreshold();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.747704267501831
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.6366379261016846
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'None')	0.5390632318501171	1.5713775157928467
nystroem('rbf',7.076503338092697,63,2,-0.5896725137822272);varianceThreshold();maxAbsScaler();adaBoost(decisionTree('gini',30,10,0.10240732615686865,1,'balanced'),92,0.8434833546772117,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(False,True);decisionTree('gini',10,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',8,20,0.6809215181270325,17,'balanced')	0.8000643903160644	1.7876129150390625
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	2.132207155227661
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.9401211738586426
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6469314098358154
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',5,13,0.6809215181270325,17,'balanced')	0.7294953226562555	1.2176826000213623
varianceThreshold();decisionTree('gini',7,19,0.3916844106026426,16,'balanced')	0.6883610955349584	1.1256608963012695
decisionTree('entropy',27,19,0.37820287714299483,7,'None')	0.5851345729618647	1.5175127983093262
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('entropy',21,11,0.9498510788421319,6,'balanced')	0.7000218299363994	1.5177302360534668
decisionTree('gini',8,6,0.6809215181270325,17,'balanced')	0.8000643903160644	1.1374881267547607
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.7945280075073242
decisionTree('gini',20,19,0.6809215181270325,17,'balanced')	0.7984211978278013	1.5533757209777832
decisionTree('gini',6,15,0.6809215181270325,7,'balanced')	0.7673518907783512	1.6640844345092773
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	2.2838616371154785
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,False);decisionTree('gini',6,8,0.874257155129764,17,'balanced')	0.7087794226861417	2.3087973594665527
maxAbsScaler();maxAbsScaler();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',8,18,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',27,13,0.6809215181270325,10,'balanced')	0.790479289047749	1.953836441040039
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	2.521822929382324
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	2.6356728076934814
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	2.6474223136901855
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('entropy',15,7,0.4479319910400992,1,'None')	0.7066040055534398	2.186950922012329
decisionTree('gini',6,13,0.6809215181270325,17,'None')	0.5395316159250585	2.757847547531128
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',16,4,0.46674044060604813,20,'balanced')	0.769977640307818	1.7973549365997314
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
varianceThreshold();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6733064651489258
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.9688940048217773
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,6,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	1.8840124607086182
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	2.0599427223205566
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.7640133964035706,17,'balanced')	0.8000643903160644	2.518784523010254
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6897552013397217
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.8438880443572998
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.7701730728149414
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('entropy',15,6,0.08046361182746031,2,'None')	0.5939918397618699	2.15205454826355
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.7640133964035706,17,'balanced')	0.8044659611918906	1.3755042552947998
decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	2.170438289642334
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.515486717224121
decisionTree('gini',5,6,0.6809215181270325,15,'None')	0.5397658079625293	1.2441787719726562
varianceThreshold();decisionTree('gini',21,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.593207836151123
varianceThreshold();varianceThreshold();minMaxScaler();minMaxScaler();logisticRegression('l2','newton-cg',1000,11.23747786524709,'None')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(True,True);decisionTree('gini',11,4,0.19684699460128308,4,'balanced')	0.7094435465250519	1.36720871925354
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',6,13,0.5713320301767438,17,'balanced')	0.7339495592531843	1.2260878086090088
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.397402048110962
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.3096559047698975
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.3766961097717285
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.1952216625213623
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.02012537280068849,17,'balanced')	0.6638565521294681	2.390190601348877
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.7529006004333496
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',5,13,0.6809215181270325,17,'balanced')	0.7294953226562555	cached
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6500585079193115
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.710834264755249
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	2.536884069442749
adaBoost(decisionTree('entropy',23,11,0.32643375471515934,19,'balanced'),34,0.9732581573574811,'SAMME')	0.6631386530809298	3.616670846939087
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
varianceThreshold();decisionTree('gini',8,20,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,False);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	2.1628105640411377
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	2.2064967155456543
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9400825500488281
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	0.9270591735839844
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
selectFwe(0.007377563602310288);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.701553733728751	1.1758577823638916
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.5521605422549788,17,'None')	0.5	2.464200735092163
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('entropy',8,5,0.28683752711654575,10,'balanced')	0.68305838008678	2.033824920654297
varianceThreshold();decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	1.784318447113037
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.43415269945242996,11,'balanced')	0.7683790972361741	1.191451072692871
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	1.6359405517578125
decisionTree('gini',10,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.2917029857635498
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.93308687210083
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	2.2395026683807373
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',5,13,0.6809215181270325,17,'balanced')	0.7294953226562555	cached
decisionTree('entropy',6,13,0.6809215181270325,17,'balanced')	0.7522874854691988	1.8297736644744873
qda(0.9018396263766434)	0.5766774117132003	1.9172420501708984
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
kNN(26,'distance',1)	0.6168032437046522	1.8622636795043945
varianceThreshold();varianceThreshold();selectFwe(0.005218857505527653);minMaxScaler();gaussianNB(0.007268761320277495)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('entropy',3,12,0.028136837353128108,2,'None')	0.49929742388758785	2.034193277359009
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();varianceThreshold();robustScaler(True,False);nystroem('poly',4.260828193441331,33,5,-0.564986759845991);decisionTree('entropy',22,6,0.5614299321473437,11,'None')	0.5548992814312602	2.6720573902130127
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2883861064910889
varianceThreshold();decisionTree('gini',8,20,0.6809215181270325,17,'balanced')	0.8000643903160644	1.3214426040649414
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();varianceThreshold();selectPercentile(45.95531194949651);kNN(7,'distance',2)	0.6056046062765066	2.0897390842437744
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6902287006378174
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.5863685607910156
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	1.8334860801696777
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',18,19,0.9984208448522929,12,'None')	0.5949286079117526	1.952646255493164
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	2.040480375289917
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.7183294296264648
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',19,19,0.15350966095602914,4,'balanced')	0.6827871351307049	1.1695916652679443
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',23,8,0.012648182511280859,6,'balanced')	0.6680512383791072	2.5426783561706543
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',19,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.7448325157165527
decisionTree('gini',6,13,0.6809215181270325,3,'balanced')	0.7455225840887351	2.0242581367492676
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	2.296243667602539
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',8,18,0.6809215181270325,17,'balanced')	0.763762155646247	1.723494291305542
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.7291393280029297
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	1.42873215675354
decisionTree('entropy',1,11,0.2272812643741542,17,'balanced')	0.5464391715419191	1.597834587097168
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	2.4683141708374023
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.767148494720459
robustScaler(False,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.533078670501709
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.5919556617736816
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.3610501289367676
fastICA(26,'parallel','arbitrary-variance','cube');multinomialNB(41.9617008091699,False)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.4497032165527344
decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	2.1887292861938477
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'None')	0.5395316159250585	1.6775627136230469
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.7668564319610596
adaBoost(decisionTree('gini',8,16,0.6625053820722863,4,'balanced'),75,1.333875242920669,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',15,8,0.808822507877677,4,'balanced')	0.7128039073986893	1.2892792224884033
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.5324389934539795
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',13,16,0.6208588316599006,19,'None'),70,0.5054740726984399,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,20,'None')	0.5	1.2293639183044434
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();minMaxScaler();maxAbsScaler();decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,19,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	1.208765983581543
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.9456725120544434
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',11,10,0.5202654909422856,19,'balanced')	0.7606448427275027	1.4881672859191895
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
selectFwe(0.017607930187607028);minMaxScaler();varianceThreshold();adaBoost(decisionTree('gini',1,11,0.7249067261804685,17,'balanced'),70,0.0298783165080347,'SAMME')	0.727340695939172	1.4034020900726318
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('gini',21,10,0.23578497483980287,4,'balanced'),86,0.6904501734916632,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',8,7,0.786439924708952,17,'balanced')	0.7395810331437207	2.253051519393921
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	2.4860317707061768
decisionTree('gini',6,13,0.6809215181270325,7,'balanced')	0.7797170904213158	2.555455446243286
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',13,2,0.12249742053421364,19,'None'),75,0.5626029253728394,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.4646323521706892,17,'balanced')	0.739651620602902	2.197356939315796
adaBoost(decisionTree('entropy',26,17,0.3005610390628273,4,'None'),39,0.6024927239409469,'SAMME')	0.6640471942434537	3.1379103660583496
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',26,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.46384596824646
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	1.673966646194458
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	1.7860655784606934
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',2,12,0.11372157951397843,9,'None'),92,0.12560105984678463,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,6,0.6809215181270325,14,'balanced')	0.7379908662106769	1.1712212562561035
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.7404742240905762
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.4617314338684082
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.011047124862671
decisionTree('gini',11,13,0.5202654909422856,17,'balanced')	0.7555483921911998	1.3538970947265625
decisionTree('gini',6,10,0.6809215181270325,19,'balanced')	0.7890441706373361	1.7879054546356201
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',6,7,0.6694250397965852,15,'None')	0.5770097585013308	1.5069797039031982
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
minMaxScaler();nystroem('rbf',0.6134867623400657,52,5,0.06755269502789774);varianceThreshold();lda(0.26846384168903303,53,0.0031386237398895824)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
nystroem('rbf',4.411513170070409,82,5,0.32719845576105144);decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.4995316159250585	6.178445100784302
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
fastICA(94,'parallel','arbitrary-variance','cube');adaBoost(decisionTree('gini',5,13,0.9588947348432985,2,'None'),65,0.3408657357385156,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.7640133964035706,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
randomForest(10,'entropy','sqrt',13,9,True,'balanced')	0.6854048183787274	2.152519464492798
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	2.138139247894287
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
minMaxScaler();maxAbsScaler();varianceThreshold();varianceThreshold();minMaxScaler();kNN(6,'uniform',2)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	1.6839728355407715
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.9159266948699951
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	2.8394415378570557
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	1.7516224384307861
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6081788539886475
decisionTree('gini',8,15,0.6809215181270325,17,'balanced')	0.8000643903160644	1.999366283416748
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();robustScaler(False,True);selectPercentile(81.53237190323053);minMaxScaler();gaussianNB(0.006894073097581989)	0.4985926487889083	2.2690646648406982
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',19,12,0.39512276563606574,6,'None')	0.6160431141243887	1.7903778553009033
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',25,13,0.6809215181270325,3,'balanced')	0.7380193130966625	2.055349111557007
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	2.298293113708496
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.6501185894012451
maxAbsScaler();minMaxScaler();nystroem('cosine',1.1583301556917553,69,4,0.36130154790376245);adaBoost(decisionTree('entropy',12,2,0.9540610315515103,8,'balanced'),16,1.0927248087643724,'SAMME')	0.63381355195255	17.61981439590454
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();pca(0.9067341612904631,False);varianceThreshold();fastICA(48,'parallel','unit-variance','logcosh');multinomialNB(49.769364177426866,False)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.546034812927246
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2476956844329834
decisionTree('gini',6,16,0.6809215181270325,17,'None')	0.5395316159250585	0.9649522304534912
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',8,13,0.6809215181270325,17,'balanced')	0.763762155646247	1.3379340171813965
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.706921100616455
maxAbsScaler();varianceThreshold();selectPercentile(45.95531194949651);kNN(7,'distance',2)	0.6056046062765066	1.0514075756072998
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,3,'balanced')	0.7455225840887351	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',8,13,0.6809215181270325,17,'None')	0.5390632318501171	1.72416353225708
minMaxScaler();randomForest(57,'gini',0.7438350060127836,8,14,False,'None')	0.51	2.9545328617095947
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.4646323521706892,17,'balanced')	0.739651620602902	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',7,9,0.7631310093809512,3,'balanced')	0.7321108069180109	1.0715739727020264
decisionTree('entropy',6,17,0.6809215181270325,8,'balanced')	0.7743184491949212	1.1541383266448975
minMaxScaler();robustScaler(False,False);varianceThreshold();randomForest(89,'entropy',0.5380632674551673,19,4,True,'None')	0.579090909090909	3.278641939163208
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);minMaxScaler();maxAbsScaler();nystroem('sigmoid',3.4589870510249003,60,5,0.5565380123279007);decisionTree('gini',20,17,0.11669189063372709,17,'None')	0.5	3.7216153144836426
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	1.4308063983917236
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	0.8291633129119873
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
minMaxScaler();fastICA(31,'parallel','arbitrary-variance','logcosh');fastICA(23,'parallel','unit-variance','exp');adaBoost(decisionTree('entropy',4,7,0.0034179623761794176,16,'None'),71,0.37738977654809636,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.8000643903160644	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();adaBoost(decisionTree('gini',1,16,0.753270757367726,13,'None'),71,0.3540171915478114,'SAMME')	0.5	1.5334389209747314
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.8706467151641846
decisionTree('gini',8,13,0.6809215181270325,17,'balanced')	0.8000643903160644	1.5044140815734863
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',29,9,0.9366403392787835,7,'balanced'),40,0.7660992474178792,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,False);pca(0.95157424353704,False);varianceThreshold();varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',15,9,0.4106024935760606,14,'None'),10,1.6464275519024687,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.004423092399176487,17,'balanced')	0.6638565521294681	2.125612735748291
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
selectFwe(0.030973394692245845);multinomialNB(17.818960488590932,False)	0.5	1.0636157989501953
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();adaBoost(decisionTree('entropy',23,20,0.5293553132781198,6,'None'),42,0.526515104712377,'SAMME')	0.6442813862809245	2.6410083770751953
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,18,'balanced')	0.7916224820357816	1.2840557098388672
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',18,18,0.8924772881530113,19,'None')	0.585397541733261	1.0762202739715576
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
kNN(8,'distance',1)	0.6165685019206146	1.3610279560089111
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();varianceThreshold();fastICA(38,'parallel','arbitrary-variance','logcosh');varianceThreshold();qda(0.164846723071007)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,5,0.6809215181270325,13,'balanced')	0.7563300218599226	0.9328961372375488
selectFwe(0.042440551739424605);adaBoost(decisionTree('gini',21,6,0.6700752143658162,17,'balanced'),51,1.5884990309239144,'SAMME')	0.6844428718360837	1.207839012145996
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
nystroem('cosine',5.587670774160474,89,2,0.44203800000086924);lda(0.2860658993971138,138,0.038526119368307826)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9388387203216553
robustScaler(False,True);decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	1.0405755043029785
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('gini',28,8,0.2673479150965532,8,'None'),37,0.8313681149732284,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
lda(0.5615550759745467,67,0.08033550371410875)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
decisionTree('entropy',27,17,0.39512276563606574,6,'None')	0.5755741803028804	1.0769431591033936
decisionTree('gini',6,12,0.6809215181270325,6,'balanced')	0.7697187396610163	1.114882469177246
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
gaussianNB(0.002808570733440578)	0.4995316159250585	1.3606946468353271
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',2,18,0.2616142113644304,6,'None')	0.5	1.7585058212280273
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,7,0.6809215181270325,7,'balanced')	0.7797170904213158	1.2887709140777588
decisionTree('gini',3,13,0.7806300808028726,17,'None')	0.5172428510456679	1.4175407886505127
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,False);decisionTree('entropy',6,8,0.6809215181270325,17,'balanced')	0.7522874854691988	1.2072083950042725
decisionTree('gini',8,13,0.6809215181270325,17,'None')	0.5390632318501171	1.064739465713501
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',7,17,0.6809215181270325,17,'balanced')	0.7581376985209818	1.3543825149536133
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.059272050857544
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.3238136768341064
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();adaBoost(decisionTree('gini',1,16,0.732577427700169,19,'None'),34,0.11162812217910449,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
minMaxScaler();varianceThreshold();robustScaler(True,True);lda(0.9757353798588689,54,0.024757720059906195)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',27,16,0.175473050005999,5,'None')	0.5872162732980095	1.3794045448303223
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',22,17,0.2020445066146559,4,'balanced')	0.685058248147604	1.854325771331787
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();nystroem('cosine',0.6994851854406211,18,4,-0.6584099824461422);decisionTree('gini',8,8,0.6809215181270325,17,'balanced')	0.6354767452204533	1.707336187362671
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('gini',10,3,0.02987949946847679,19,'None'),10,0.38119413930604784,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.626246690750122
decisionTree('entropy',6,13,0.6809215181270325,17,'balanced')	0.7522874854691988	1.941840410232544
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();minMaxScaler();maxAbsScaler();maxAbsScaler();maxAbsScaler();decisionTree('entropy',19,15,0.5342689072315402,14,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
multinomialNB(14.930818386313849,True)	0.5225279446175313	2.0355422496795654
decisionTree('gini',26,14,0.4460734828327695,8,'None')	0.607448266349213	1.9913225173950195
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
pca(0.7236533777633379,True);pca(0.7138131799343055,False);adaBoost(decisionTree('entropy',21,6,0.8150272037841328,15,'None'),52,1.0514904078894332,'SAMME')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',10,2,0.7191481121679683,10,'balanced')	0.790479289047749	1.242110252380371
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
pca(0.9449440562337951,False);adaBoost(decisionTree('gini',29,19,0.21151300463218714,10,'balanced'),94,0.2820282792114572,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',17,10,0.018944722082751553,15,'None'),72,1.3615290379455312,'SAMME')	0.6449568348991116	3.525360584259033
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.12542133006383216,17,'balanced')	0.6638565521294681	1.8143682479858398
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
lda(0.29551274575086994,99,0.003982537215270982)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	1.9170057773590088
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.7874829769134521
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',14,9,0.1407663785608686,15,'None')	0.5	1.1770005226135254
robustScaler(False,True);decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	2.308168649673462
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6251943111419678
minMaxScaler();lda(0.6874751242457652,226,0.013183230753687535)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
robustScaler(False,True);decisionTree('gini',2,2,0.6809215181270325,17,'balanced')	0.7023015389905253	1.7826719284057617
varianceThreshold();fastICA(26,'deflation','unit-variance','logcosh');randomForest(77,'gini','sqrt',16,19,True,'None')	0.5	26.350308895111084
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);kNN(32,'distance',1)	0.6170379854886898	1.9800834655761719
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',21,15,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4778892993927002
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',11,10,0.000973977114331448,5,'None')	0.5737853249651911	1.0655734539031982
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',4,13,0.6809215181270325,17,'balanced')	0.7088695711277102	1.5896248817443848
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();robustScaler(True,True);pca(0.6714418582006453,False);randomForest(66,'entropy','log2',20,19,True,'balanced_subsample')	0.6118061573614564	3.2264859676361084
decisionTree('entropy',8,7,0.26400295434876353,16,'None')	0.4997652582159624	1.851736307144165
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.0395660400390625
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2689266204833984
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',27,19,0.6184659840922974,12,'balanced'),98,1.0546545810102135,'SAMME')	0.6349573846456783	4.164899826049805
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',3,7,0.7806300808028726,7,'balanced')	0.775858249347051	cached
decisionTree('gini',6,16,0.6809215181270325,5,'balanced')	0.7516871122412568	1.2684745788574219
decisionTree('entropy',14,5,0.6412486478987728,15,'balanced')	0.7477832519208645	1.589632272720337
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();minMaxScaler();adaBoost(decisionTree('gini',1,6,0.35047395564192907,5,'balanced'),68,0.10106325965052748,'SAMME')	0.5399731023997937	1.1887943744659424
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();varianceThreshold();maxAbsScaler();lda(0.8710388992882083,90,0.037480177578632326)	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',2,14,0.5457316844245154,7,'balanced')	0.7415349623823417	1.4117984771728516
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();robustScaler(False,False);varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',28,13,0.7640133964035706,17,'balanced')	0.7984211978278013	cached
gaussianNB(0.009893980941387607)	0.4995316159250585	1.2413928508758545
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,3,0.8140407174505689,17,'balanced')	0.7087794226861417	1.6550683975219727
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',27,7,0.6809215181270325,14,'balanced')	0.7361129319383763	1.419952392578125
selectFwe(0.007511981674540672);robustScaler(True,True);minMaxScaler();decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.701553733728751	1.6074442863464355
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',17,13,0.6809215181270325,15,'balanced')	0.7551761637884933	1.5872623920440674
adaBoost(decisionTree('entropy',4,19,0.6566835192823938,7,'balanced'),99,0.4278161795025424,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('entropy',6,2,0.7505793945325804,7,'None')	0.5867766659569938	1.1505682468414307
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.659546547296334,12,'balanced')	0.7558805190807039	1.1517601013183594
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.267188549041748
decisionTree('gini',6,6,0.7640133964035706,17,'balanced')	0.8044659611918906	1.0528690814971924
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	1.1109178066253662
decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9826688766479492
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	1.1565282344818115
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',1,11,0.15978404343830566,14,'None'),79,0.015467278646635066,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	0.9617719650268555
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.0008714199066162
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.6809215181270325,9,'balanced')	0.7433059259681287	0.972442626953125
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',10,10,0.19925730908387151,2,'balanced')	0.6560917217162887	0.8570816516876221
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',21,8,0.11911573007278375,18,'None'),54,0.04592353043007066,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',27,16,0.78683334465286,8,'None'),94,1.225507434446915,'SAMME')	0.6442819360274913	6.850318908691406
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	1.7273800373077393
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.4685847759246826
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,17,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',20,3,0.18046802614370272,1,'None')	0.6896507010268266	1.5701675415039062
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',2,13,0.7291442807530895,4,'None')	0.4995316159250585	1.4829130172729492
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',26,2,0.7950616997420372,17,'balanced'),17,1.3450679103928183,'SAMME')	0.6806167956572021	2.6754310131073
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',22,5,0.4852103637680363,13,'None'),94,0.8973695595938239,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6186394691467285
decisionTree('gini',15,6,0.6809215181270325,17,'balanced')	0.7984211978278013	1.6882236003875732
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.3228449821472168
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	0.8607490062713623
robustScaler(True,True);minMaxScaler();varianceThreshold();selectPercentile(60.665409175511165);mlpClassifier((49, 16),0.07247522709409583,0.4748437072883499,'sgd','relu')	0.5	3.5807478427886963
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',30,15,0.13724420897441647,19,'None')	0.5172428510456679	0.9316911697387695
nystroem('sigmoid',0.8770639378774524,32,4,0.672078390110493);decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.5	1.4486396312713623
varianceThreshold();decisionTree('gini',6,20,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	1.3715484142303467
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.0163371562957764
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('gini',8,8,0.8812833478178788,10,'balanced'),44,1.240808773034223,'SAMME')	0.6635777106753785	3.402256488800049
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',18,10,0.7441845119339671,6,'balanced')	0.7614326095669897	1.4874098300933838
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',29,6,0.021813332449060252,4,'balanced'),61,0.043652798573850786,'SAMME')	0.6731386530809298	3.42720365524292
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,10,0.6809215181270325,11,'balanced')	0.7458583393055802	1.4643826484680176
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.2674071788787842
decisionTree('gini',6,13,0.5602843468318784,17,'balanced')	0.7390260290006306	1.295527458190918
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();maxAbsScaler();maxAbsScaler();logisticRegression('l1','newton-cg',1000,2.720320476464517,'balanced')	invalid_ind (duplicated operator)	invalid_ind (duplicated operator)
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',17,17,0.09590656952993393,5,'None'),65,1.9502806184777277,'SAMME')	0.6363636363636364	3.0336711406707764
robustScaler(True,False);decisionTree('gini',6,8,0.7640133964035706,17,'balanced')	0.8044659611918906	2.322131633758545
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',1,8,0.9030599340864314,10,'None')	0.5	2.1001973152160645
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);pca(0.8981634219857622,False);varianceThreshold();adaBoost(decisionTree('entropy',14,10,0.46913063350538453,19,'balanced'),60,1.8267376361123362,'SAMME')	0.616803793451219	4.087543964385986
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',2,14,0.30189068926374973,17,'None')	0.5	1.2455041408538818
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,6,'None')	0.5860724406048811	1.281958818435669
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	1.8101849555969238
varianceThreshold();decisionTree('gini',6,3,0.6809215181270325,17,'balanced')	0.8044659611918906	1.7759544849395752
decisionTree('gini',6,13,0.8140407174505689,17,'balanced')	0.7087794226861417	2.0639517307281494
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6494214534759521
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	1.9672212600708008
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,10,'balanced')	0.7505221992661384	1.870671033859253
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',6,12,0.6809215181270325,1,'balanced')	0.7277732265425638	1.5895369052886963
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',5,8,0.6809215181270325,17,'balanced')	0.7294953226562555	1.8179614543914795
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',1,10,0.015843813270278506,17,'None'),45,0.8190432021481376,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',5,15,0.0790245155660323,17,'None'),19,0.5023189095267844,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
maxAbsScaler();adaBoost(decisionTree('entropy',8,3,0.8387215109126486,15,'balanced'),94,1.6357312795649115,'SAMME')	0.6363343098831439	8.657631397247314
adaBoost(decisionTree('entropy',14,9,0.515677230164554,1,'balanced'),76,1.8242803244896633,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
kNN(37,'uniform',1)	0.5	1.7026729583740234
extraTreesClassifier(23,'gini','sqrt',5,5,False,'balanced')	0.7263499626672104	2.210113525390625
robustScaler(False,False);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	1.4376730918884277
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',23,11,0.09321374492961942,17,'balanced')	0.6687883285805244	1.642153263092041
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	2.1692285537719727
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	2.0037882328033447
decisionTree('entropy',27,5,0.9518990879400044,3,'None')	0.6298267898498793	1.9292972087860107
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,19,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',26,19,0.7755238132020909,17,'balanced')	0.7984211978278013	2.1336352825164795
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,7,'balanced')	0.7797170904213158	1.8816404342651367
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',5,3,0.8730194985243019,3,'balanced')	0.7378760191551693	2.2757325172424316
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',12,10,0.009004675878426016,7,'None')	0.527712334613743	2.0950284004211426
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('gini',12,11,0.9247219471750854,17,'None'),63,0.6537897225759397,'SAMME')	0.6444873513310363	7.05480694770813
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',7,13,0.06637429932578609,15,'balanced')	0.6441674687968846	2.7099034786224365
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();logisticRegression('l2','lbfgs',1000,1.9548746691963172,'balanced')	0.7086666646675882	13.71433687210083
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',20,8,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',12,15,0.04776658859110572,6,'balanced'),62,1.665151714682417,'SAMME')	0.6638417789399087	3.083326816558838
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',6,13,0.7640133964035706,17,'balanced')	0.7522874854691988	1.1285533905029297
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
logisticRegression('l2','liblinear',1000,7.164616671252108,'balanced')	0.6880412729731593	1.825636386871338
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.6026053428649902
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',14,6,0.12683917096906383,16,'None'),59,1.349715111114559,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
decisionTree('entropy',10,17,0.5954387132369451,3,'None')	0.5844308973563187	1.2383580207824707
decisionTree('gini',6,6,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	1.4005439281463623
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.0657093524932861
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
lda(0.8258243315735267,192,0.016169842699896166)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)	eval_error (n_components cannot be larger than min(n_features, n_classes - 1).)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',6,17,0.346429975784315,3,'balanced')	0.7062281088418239	1.2041304111480713
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,4,'balanced')	0.754377651902473	0.7092549800872803
adaBoost(decisionTree('gini',20,11,0.4144871287075489,19,'balanced'),49,0.1942239186325316,'SAMME')	0.6968946515656282	1.5538623332977295
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',20,13,0.6809215181270325,17,'balanced')	0.7984211978278013	0.7228128910064697
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	0.6750354766845703
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
pca(0.6411634307096478,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.6737964698274096	0.7594163417816162
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,3,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,15,0.5285248947267154,17,'balanced')	0.739651620602902	0.9110112190246582
robustScaler(False,True);adaBoost(decisionTree('gini',20,15,0.7586504155801747,5,'balanced'),58,1.193532989093153,'SAMME')	0.6456599607580905	2.2471835613250732
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.7577307224273682
decisionTree('gini',15,13,0.6809215181270325,17,'balanced')	0.7984211978278013	1.1215770244598389
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('entropy',16,11,0.41978158886426675,19,'None')	0.5	1.0820698738098145
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	0.7374069690704346
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	0.738539457321167
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',17,17,0.5753812522766901,20,'balanced')	0.7513750960807067	1.1615619659423828
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',26,9,0.320740273208038,12,'balanced')	0.738386243941543	0.9739775657653809
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
nystroem('sigmoid',0.08265053314163077,94,4,0.6002284016993378);selectFwe(0.028860306597638226);adaBoost(decisionTree('entropy',16,4,0.5975186982850651,9,'balanced'),19,0.13176542371490338,'SAMME')	eval_error (BaseClassifier in AdaBoostClassifier ensemble is worse than random, ensemble can not be fit.)	eval_error (BaseClassifier in AdaBoostClassifier ensemble is worse than random, ensemble can not be fit.)
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
adaBoost(decisionTree('entropy',1,17,0.38199045527791353,3,'None'),67,1.1093489565963894,'SAMME.R')	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)	eval_error (The 'algorithm' parameter of AdaBoostClassifier must be a str among {'SAMME'}. Got 'SAMME.R' instead.)
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.46048471909462185,17,'balanced')	0.739651620602902	1.0377929210662842
varianceThreshold();decisionTree('gini',6,10,0.7640133964035706,17,'balanced')	0.8044659611918906	0.958111047744751
decisionTree('gini',6,13,0.6809215181270325,11,'balanced')	0.7458583393055802	1.0756380558013916
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',26,19,0.7755238132020909,17,'balanced')	0.7984211978278013	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	0.9020106792449951
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9585013389587402
decisionTree('entropy',6,13,0.6809215181270325,17,'balanced')	0.7522874854691988	1.9252300262451172
fastICA(100,'deflation','unit-variance','logcosh');multinomialNB(4.042786969891771,True)	eval_error (Negative values in data passed to MultinomialNB (input X).)	eval_error (Negative values in data passed to MultinomialNB (input X).)
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(False,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	1.1595029830932617
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
robustScaler(True,False);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,False);decisionTree('gini',12,15,0.8714138081099266,13,'None')	0.5669820812605388	0.9563376903533936
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,10,'balanced')	0.7505221992661384	1.6418817043304443
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	1.750957727432251
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	1.0033526420593262
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	1.422297716140747
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	0.9210772514343262
decisionTree('gini',6,8,0.33296246943610563,5,'balanced')	0.6968050028936661	1.5502653121948242
decisionTree('gini',6,15,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',30,18,0.6809215181270325,17,'balanced')	0.7984211978278013	cached
robustScaler(True,True);decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,9,0.6809215181270325,17,'None')	0.5395316159250585	1.3072075843811035
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.7640133964035706,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
maxAbsScaler();varianceThreshold();gaussianNB(0.002957418813831331)	0.4981231652208332	1.2277851104736328
varianceThreshold();decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,6,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,8,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
decisionTree('gini',6,13,0.6809215181270325,17,'balanced')	0.8044659611918906	cached
