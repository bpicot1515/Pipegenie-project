0: Pipeline(
	0: VarianceThreshold()
	1: RobustScaler(with_scaling=False)
	2: BernoulliNB(alpha=11.82754333332259, fit_prior=False)
) -> Fitness: 0.8118745527408043

1: Pipeline(
	0: VarianceThreshold()
	1: RobustScaler()
	2: BernoulliNB(alpha=12.01169806567331, fit_prior=False)
) -> Fitness: 0.8118745527408043

2: Pipeline(
	0: RobustScaler(with_centering=False, with_scaling=False)
	1: ExtraTreesClassifier(class_weight='balanced', max_features='log2',
                     min_samples_split=20, n_estimators=58, random_state=40)
) -> Fitness: 0.8199112637755832

3: Pipeline(
	0: ExtraTreesClassifier(class_weight='balanced', max_features='log2',
                     min_samples_split=20, n_estimators=58, random_state=40)
) -> Fitness: 0.8199112637755832

4: Pipeline(
	0: ExtraTreesClassifier(class_weight='balanced', min_samples_split=20,
                     n_estimators=58, random_state=40)
) -> Fitness: 0.8199112637755832

5: Pipeline(
	0: ExtraTreesClassifier(class_weight='balanced', min_samples_leaf=11,
                     min_samples_split=18, n_estimators=98, random_state=40)
) -> Fitness: 0.8044185630456561

6: Pipeline(
	0: PCA(n_components=0.6057669347624586, random_state=40)
	1: AdaBoostClassifier(algorithm='SAMME',
                   estimator=DecisionTreeClassifier(class_weight='balanced',
                                                    criterion='entropy',
                                                    max_depth=16,
                                                    max_features=0.7710111106013254,
                                                    min_samples_leaf=18,
                                                    min_samples_split=9,
                                                    random_state=40),
                   learning_rate=0.05274142654176981, n_estimators=40,
                   random_state=40)
) -> Fitness: 0.7842507513954488

7: Pipeline(
	0: VarianceThreshold()
	1: RobustScaler()
	2: ExtraTreesClassifier(class_weight='balanced', min_samples_leaf=11,
                     min_samples_split=18, n_estimators=98, random_state=40)
) -> Fitness: 0.8044185630456561

8: Pipeline(
	0: SelectPercentile(percentile=71.07697447836384)
	1: VarianceThreshold()
	2: RandomForestClassifier(class_weight='balanced_subsample', max_features='log2',
                       min_samples_leaf=13, min_samples_split=14,
                       n_estimators=20, random_state=40)
) -> Fitness: 0.8107224130528123

9: Pipeline(
	0: VarianceThreshold()
	1: RandomForestClassifier(bootstrap=False, class_weight='balanced',
                       criterion='entropy', min_samples_leaf=7,
                       min_samples_split=14, n_estimators=20, random_state=40)
) -> Fitness: 0.8028202375840848

10: Pipeline(
	0: VarianceThreshold()
	1: RandomForestClassifier(bootstrap=False, class_weight='balanced',
                       criterion='entropy', min_samples_leaf=13,
                       min_samples_split=14, n_estimators=20, random_state=40)
) -> Fitness: 0.8070620437956204

11: Pipeline(
	0: VarianceThreshold()
	1: RobustScaler(with_centering=False)
	2: ExtraTreesClassifier(class_weight='balanced', min_samples_leaf=11,
                     min_samples_split=18, n_estimators=98, random_state=40)
) -> Fitness: 0.8044185630456561

12: Pipeline(
	0: VarianceThreshold()
	1: ExtraTreesClassifier(class_weight='balanced', min_samples_leaf=11,
                     n_estimators=93, random_state=40)
) -> Fitness: 0.8007689280091599

13: Pipeline(
	0: VarianceThreshold()
	1: RobustScaler()
	2: ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                     max_features='log2', min_samples_leaf=12,
                     min_samples_split=14, n_estimators=88, random_state=40)
) -> Fitness: 0.7993144411049091

14: Pipeline(
	0: VarianceThreshold()
	1: RobustScaler(with_scaling=False)
	2: ExtraTreesClassifier(class_weight='balanced', min_samples_leaf=11,
                     min_samples_split=18, n_estimators=98, random_state=40)
) -> Fitness: 0.8044185630456561

15: Pipeline(
	0: VarianceThreshold()
	1: RobustScaler(with_centering=False, with_scaling=False)
	2: ExtraTreesClassifier(class_weight='balanced', min_samples_leaf=11,
                     min_samples_split=18, n_estimators=98, random_state=40)
) -> Fitness: 0.8044185630456561

16: Pipeline(
	0: MaxAbsScaler()
	1: AdaBoostClassifier(algorithm='SAMME',
                   estimator=DecisionTreeClassifier(class_weight='balanced',
                                                    criterion='entropy',
                                                    max_depth=16,
                                                    max_features=0.7710111106013254,
                                                    min_samples_leaf=18,
                                                    min_samples_split=9,
                                                    random_state=40),
                   learning_rate=0.05274142654176981, n_estimators=40,
                   random_state=40)
) -> Fitness: 0.79975740661228

17: Pipeline(
	0: VarianceThreshold()
	1: RobustScaler()
	2: AdaBoostClassifier(algorithm='SAMME',
                   estimator=DecisionTreeClassifier(class_weight='balanced',
                                                    criterion='entropy',
                                                    max_depth=16,
                                                    max_features=0.7710111106013254,
                                                    min_samples_leaf=18,
                                                    min_samples_split=9,
                                                    random_state=40),
                   learning_rate=0.05274142654176981, n_estimators=40,
                   random_state=40)
) -> Fitness: 0.79975740661228

18: Pipeline(
	0: VarianceThreshold()
	1: MaxAbsScaler()
	2: ExtraTreesClassifier(class_weight='balanced', min_samples_leaf=11,
                     min_samples_split=18, n_estimators=98, random_state=40)
) -> Fitness: 0.8044185630456561

19: Pipeline(
	0: VarianceThreshold()
	1: RobustScaler(with_centering=False)
	2: ExtraTreesClassifier(bootstrap=True, class_weight='balanced',
                     criterion='entropy', max_features='log2',
                     min_samples_leaf=12, min_samples_split=14, n_estimators=88,
                     random_state=40)
) -> Fitness: 0.8029801774724488

Ensemble fitness: 0.8730907399456133
Weights: [0.9901980721696994, 0.9901980721696994, 1.0, 1.0, 1.0, 0.9811044177407866, 0.9565068636623889, 0.9811044177407866, 0.9887928717060704, 0.9791550293957465, 0.9843285236492619, 0.9811044177407866, 0.9766531616137637, 0.9748792051278471, 0.9811044177407866, 0.9811044177407866, 0.9754194654303231, 0.9754194654303231, 0.9811044177407866, 0.9793500991495482]
Prediction: [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0
 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0
 0 0 0 0 1 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0
 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0
 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1
 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0
 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0
 0 1 0 0 0 0 0 1 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0]
